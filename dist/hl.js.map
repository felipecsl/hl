{
  "version": 3,
  "sources": ["../node_modules/commander/lib/error.js", "../node_modules/commander/lib/argument.js", "../node_modules/commander/lib/help.js", "../node_modules/commander/lib/option.js", "../node_modules/commander/lib/suggestSimilar.js", "../node_modules/commander/lib/command.js", "../node_modules/commander/index.js", "../node_modules/isexe/windows.js", "../node_modules/isexe/mode.js", "../node_modules/isexe/index.js", "../node_modules/which/which.js", "../node_modules/path-key/index.js", "../node_modules/cross-spawn/lib/util/resolveCommand.js", "../node_modules/cross-spawn/lib/util/escape.js", "../node_modules/shebang-regex/index.js", "../node_modules/shebang-command/index.js", "../node_modules/cross-spawn/lib/util/readShebang.js", "../node_modules/cross-spawn/lib/parse.js", "../node_modules/cross-spawn/lib/enoent.js", "../node_modules/cross-spawn/index.js", "../node_modules/commander/esm.mjs", "../src/lib/config.ts", "../node_modules/js-yaml/dist/js-yaml.mjs", "../node_modules/zod/v3/external.js", "../node_modules/zod/v3/helpers/util.js", "../node_modules/zod/v3/ZodError.js", "../node_modules/zod/v3/locales/en.js", "../node_modules/zod/v3/errors.js", "../node_modules/zod/v3/helpers/parseUtil.js", "../node_modules/zod/v3/helpers/errorUtil.js", "../node_modules/zod/v3/types.js", "../node_modules/is-plain-obj/index.js", "../node_modules/execa/lib/arguments/file-url.js", "../node_modules/execa/lib/methods/parameters.js", "../node_modules/execa/lib/methods/template.js", "../node_modules/execa/lib/utils/uint-array.js", "../node_modules/execa/lib/methods/main-sync.js", "../node_modules/execa/lib/arguments/specific.js", "../node_modules/execa/lib/utils/standard-stream.js", "../node_modules/execa/lib/verbose/values.js", "../node_modules/execa/lib/verbose/log.js", "../node_modules/execa/lib/arguments/escape.js", "../node_modules/is-unicode-supported/index.js", "../node_modules/figures/index.js", "../node_modules/yoctocolors/base.js", "../node_modules/execa/lib/verbose/default.js", "../node_modules/execa/lib/verbose/custom.js", "../node_modules/execa/lib/verbose/start.js", "../node_modules/execa/lib/verbose/info.js", "../node_modules/execa/lib/return/duration.js", "../node_modules/execa/lib/arguments/command.js", "../node_modules/execa/lib/arguments/options.js", "../node_modules/npm-run-path/index.js", "../node_modules/npm-run-path/node_modules/path-key/index.js", "../node_modules/unicorn-magic/node.js", "../node_modules/execa/lib/terminate/kill.js", "../node_modules/execa/lib/return/final-error.js", "../node_modules/execa/lib/terminate/signal.js", "../node_modules/human-signals/build/src/main.js", "../node_modules/human-signals/build/src/realtime.js", "../node_modules/human-signals/build/src/signals.js", "../node_modules/human-signals/build/src/core.js", "../node_modules/execa/lib/utils/abort-signal.js", "../node_modules/execa/lib/terminate/cancel.js", "../node_modules/execa/lib/ipc/graceful.js", "../node_modules/execa/lib/ipc/send.js", "../node_modules/execa/lib/ipc/validation.js", "../node_modules/execa/lib/utils/deferred.js", "../node_modules/execa/lib/arguments/fd-options.js", "../node_modules/execa/lib/ipc/strict.js", "../node_modules/execa/lib/utils/max-listeners.js", "../node_modules/execa/lib/ipc/forward.js", "../node_modules/execa/lib/ipc/incoming.js", "../node_modules/execa/lib/ipc/reference.js", "../node_modules/execa/lib/ipc/outgoing.js", "../node_modules/execa/lib/terminate/graceful.js", "../node_modules/execa/lib/terminate/timeout.js", "../node_modules/execa/lib/methods/node.js", "../node_modules/execa/lib/ipc/ipc-input.js", "../node_modules/execa/lib/arguments/encoding-option.js", "../node_modules/execa/lib/arguments/cwd.js", "../node_modules/execa/lib/arguments/shell.js", "../node_modules/execa/lib/return/message.js", "../node_modules/strip-final-newline/index.js", "../node_modules/get-stream/source/index.js", "../node_modules/is-stream/index.js", "../node_modules/@sec-ant/readable-stream/dist/ponyfill/asyncIterator.js", "../node_modules/get-stream/source/stream.js", "../node_modules/get-stream/source/contents.js", "../node_modules/get-stream/source/utils.js", "../node_modules/get-stream/source/array.js", "../node_modules/get-stream/source/array-buffer.js", "../node_modules/get-stream/source/string.js", "../node_modules/execa/lib/io/max-buffer.js", "../node_modules/execa/lib/return/result.js", "../node_modules/parse-ms/index.js", "../node_modules/pretty-ms/index.js", "../node_modules/execa/lib/verbose/error.js", "../node_modules/execa/lib/verbose/complete.js", "../node_modules/execa/lib/return/reject.js", "../node_modules/execa/lib/stdio/handle-sync.js", "../node_modules/execa/lib/stdio/type.js", "../node_modules/execa/lib/transform/object-mode.js", "../node_modules/execa/lib/transform/normalize.js", "../node_modules/execa/lib/stdio/direction.js", "../node_modules/execa/lib/ipc/array.js", "../node_modules/execa/lib/stdio/stdio-option.js", "../node_modules/execa/lib/stdio/native.js", "../node_modules/execa/lib/stdio/input-option.js", "../node_modules/execa/lib/stdio/duplicate.js", "../node_modules/execa/lib/stdio/handle.js", "../node_modules/execa/lib/io/strip-newline.js", "../node_modules/execa/lib/transform/generator.js", "../node_modules/execa/lib/transform/split.js", "../node_modules/execa/lib/transform/validate.js", "../node_modules/execa/lib/transform/encoding-transform.js", "../node_modules/execa/lib/transform/run-async.js", "../node_modules/execa/lib/transform/run-sync.js", "../node_modules/execa/lib/io/input-sync.js", "../node_modules/execa/lib/io/output-sync.js", "../node_modules/execa/lib/verbose/output.js", "../node_modules/execa/lib/resolve/all-sync.js", "../node_modules/execa/lib/resolve/exit-async.js", "../node_modules/execa/lib/resolve/exit-sync.js", "../node_modules/execa/lib/methods/main-async.js", "../node_modules/execa/lib/ipc/methods.js", "../node_modules/execa/lib/ipc/get-one.js", "../node_modules/execa/lib/ipc/get-each.js", "../node_modules/execa/lib/return/early-error.js", "../node_modules/execa/lib/stdio/handle-async.js", "../node_modules/@sindresorhus/merge-streams/index.js", "../node_modules/execa/lib/io/pipeline.js", "../node_modules/execa/lib/io/output-async.js", "../node_modules/execa/lib/terminate/cleanup.js", "../node_modules/signal-exit/src/signals.ts", "../node_modules/signal-exit/src/index.ts", "../node_modules/execa/lib/pipe/pipe-arguments.js", "../node_modules/execa/lib/pipe/throw.js", "../node_modules/execa/lib/pipe/sequence.js", "../node_modules/execa/lib/pipe/streaming.js", "../node_modules/execa/lib/pipe/abort.js", "../node_modules/execa/lib/pipe/setup.js", "../node_modules/execa/lib/io/contents.js", "../node_modules/execa/lib/io/iterate.js", "../node_modules/execa/lib/resolve/wait-stream.js", "../node_modules/execa/lib/resolve/stdio.js", "../node_modules/execa/lib/resolve/all-async.js", "../node_modules/execa/lib/resolve/wait-subprocess.js", "../node_modules/execa/lib/verbose/ipc.js", "../node_modules/execa/lib/ipc/buffer-messages.js", "../node_modules/execa/lib/convert/concurrent.js", "../node_modules/execa/lib/convert/readable.js", "../node_modules/execa/lib/convert/shared.js", "../node_modules/execa/lib/convert/writable.js", "../node_modules/execa/lib/convert/duplex.js", "../node_modules/execa/lib/convert/iterable.js", "../node_modules/execa/lib/convert/add.js", "../node_modules/execa/lib/methods/promise.js", "../node_modules/execa/lib/methods/bind.js", "../node_modules/execa/lib/methods/create.js", "../node_modules/execa/lib/methods/command.js", "../node_modules/execa/lib/methods/script.js", "../node_modules/execa/index.js", "../src/lib/docker.ts", "../src/lib/health.ts", "../node_modules/kleur/colors.mjs", "../src/lib/log.ts", "../src/commands/deploy.ts", "../src/commands/compose.ts", "../src/lib/systemd.ts", "../src/commands/rollback.ts", "../src/commands/secrets.ts", "../src/cli.ts"],
  "sourcesContent": ["/**\n * CommanderError class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n", "const { InvalidArgumentError } = require('./error.js');\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @package\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(\n          `Allowed choices are ${this.argChoices.join(', ')}.`,\n        );\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   *\n   * @returns {Argument}\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   *\n   * @returns {Argument}\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required ? '<' + nameOutput + '>' : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n", "const { humanReadableArgName } = require('./argument.js');\n\n/**\n * TypeScript import types for JSDoc, used by Visual Studio Code IntelliSense and `npm run typescript-checkJS`\n * https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html#import-types\n * @typedef { import(\"./argument.js\").Argument } Argument\n * @typedef { import(\"./command.js\").Command } Command\n * @typedef { import(\"./option.js\").Option } Option\n */\n\n// Although this is a class, methods are static in style to allow override using subclass or just functions.\nclass Help {\n  constructor() {\n    this.helpWidth = undefined;\n    this.sortSubcommands = false;\n    this.sortOptions = false;\n    this.showGlobalOptions = false;\n  }\n\n  /**\n   * Get an array of the visible subcommands. Includes a placeholder for the implicit help command, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Command[]}\n   */\n\n  visibleCommands(cmd) {\n    const visibleCommands = cmd.commands.filter((cmd) => !cmd._hidden);\n    const helpCommand = cmd._getHelpCommand();\n    if (helpCommand && !helpCommand._hidden) {\n      visibleCommands.push(helpCommand);\n    }\n    if (this.sortSubcommands) {\n      visibleCommands.sort((a, b) => {\n        // @ts-ignore: because overloaded return type\n        return a.name().localeCompare(b.name());\n      });\n    }\n    return visibleCommands;\n  }\n\n  /**\n   * Compare options for sort.\n   *\n   * @param {Option} a\n   * @param {Option} b\n   * @returns {number}\n   */\n  compareOptions(a, b) {\n    const getSortKey = (option) => {\n      // WYSIWYG for order displayed in help. Short used for comparison if present. No special handling for negated.\n      return option.short\n        ? option.short.replace(/^-/, '')\n        : option.long.replace(/^--/, '');\n    };\n    return getSortKey(a).localeCompare(getSortKey(b));\n  }\n\n  /**\n   * Get an array of the visible options. Includes a placeholder for the implicit help option, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleOptions(cmd) {\n    const visibleOptions = cmd.options.filter((option) => !option.hidden);\n    // Built-in help option.\n    const helpOption = cmd._getHelpOption();\n    if (helpOption && !helpOption.hidden) {\n      // Automatically hide conflicting flags. Bit dubious but a historical behaviour that is convenient for single-command programs.\n      const removeShort = helpOption.short && cmd._findOption(helpOption.short);\n      const removeLong = helpOption.long && cmd._findOption(helpOption.long);\n      if (!removeShort && !removeLong) {\n        visibleOptions.push(helpOption); // no changes needed\n      } else if (helpOption.long && !removeLong) {\n        visibleOptions.push(\n          cmd.createOption(helpOption.long, helpOption.description),\n        );\n      } else if (helpOption.short && !removeShort) {\n        visibleOptions.push(\n          cmd.createOption(helpOption.short, helpOption.description),\n        );\n      }\n    }\n    if (this.sortOptions) {\n      visibleOptions.sort(this.compareOptions);\n    }\n    return visibleOptions;\n  }\n\n  /**\n   * Get an array of the visible global options. (Not including help.)\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleGlobalOptions(cmd) {\n    if (!this.showGlobalOptions) return [];\n\n    const globalOptions = [];\n    for (\n      let ancestorCmd = cmd.parent;\n      ancestorCmd;\n      ancestorCmd = ancestorCmd.parent\n    ) {\n      const visibleOptions = ancestorCmd.options.filter(\n        (option) => !option.hidden,\n      );\n      globalOptions.push(...visibleOptions);\n    }\n    if (this.sortOptions) {\n      globalOptions.sort(this.compareOptions);\n    }\n    return globalOptions;\n  }\n\n  /**\n   * Get an array of the arguments if any have a description.\n   *\n   * @param {Command} cmd\n   * @returns {Argument[]}\n   */\n\n  visibleArguments(cmd) {\n    // Side effect! Apply the legacy descriptions before the arguments are displayed.\n    if (cmd._argsDescription) {\n      cmd.registeredArguments.forEach((argument) => {\n        argument.description =\n          argument.description || cmd._argsDescription[argument.name()] || '';\n      });\n    }\n\n    // If there are any arguments with a description then return all the arguments.\n    if (cmd.registeredArguments.find((argument) => argument.description)) {\n      return cmd.registeredArguments;\n    }\n    return [];\n  }\n\n  /**\n   * Get the command term to show in the list of subcommands.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandTerm(cmd) {\n    // Legacy. Ignores custom usage string, and nested commands.\n    const args = cmd.registeredArguments\n      .map((arg) => humanReadableArgName(arg))\n      .join(' ');\n    return (\n      cmd._name +\n      (cmd._aliases[0] ? '|' + cmd._aliases[0] : '') +\n      (cmd.options.length ? ' [options]' : '') + // simplistic check for non-help option\n      (args ? ' ' + args : '')\n    );\n  }\n\n  /**\n   * Get the option term to show in the list of options.\n   *\n   * @param {Option} option\n   * @returns {string}\n   */\n\n  optionTerm(option) {\n    return option.flags;\n  }\n\n  /**\n   * Get the argument term to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @returns {string}\n   */\n\n  argumentTerm(argument) {\n    return argument.name();\n  }\n\n  /**\n   * Get the longest command term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestSubcommandTermLength(cmd, helper) {\n    return helper.visibleCommands(cmd).reduce((max, command) => {\n      return Math.max(max, helper.subcommandTerm(command).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestOptionTermLength(cmd, helper) {\n    return helper.visibleOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest global option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestGlobalOptionTermLength(cmd, helper) {\n    return helper.visibleGlobalOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest argument term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestArgumentTermLength(cmd, helper) {\n    return helper.visibleArguments(cmd).reduce((max, argument) => {\n      return Math.max(max, helper.argumentTerm(argument).length);\n    }, 0);\n  }\n\n  /**\n   * Get the command usage to be displayed at the top of the built-in help.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandUsage(cmd) {\n    // Usage\n    let cmdName = cmd._name;\n    if (cmd._aliases[0]) {\n      cmdName = cmdName + '|' + cmd._aliases[0];\n    }\n    let ancestorCmdNames = '';\n    for (\n      let ancestorCmd = cmd.parent;\n      ancestorCmd;\n      ancestorCmd = ancestorCmd.parent\n    ) {\n      ancestorCmdNames = ancestorCmd.name() + ' ' + ancestorCmdNames;\n    }\n    return ancestorCmdNames + cmdName + ' ' + cmd.usage();\n  }\n\n  /**\n   * Get the description for the command.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandDescription(cmd) {\n    // @ts-ignore: because overloaded return type\n    return cmd.description();\n  }\n\n  /**\n   * Get the subcommand summary to show in the list of subcommands.\n   * (Fallback to description for backwards compatibility.)\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandDescription(cmd) {\n    // @ts-ignore: because overloaded return type\n    return cmd.summary() || cmd.description();\n  }\n\n  /**\n   * Get the option description to show in the list of options.\n   *\n   * @param {Option} option\n   * @return {string}\n   */\n\n  optionDescription(option) {\n    const extraInfo = [];\n\n    if (option.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`,\n      );\n    }\n    if (option.defaultValue !== undefined) {\n      // default for boolean and negated more for programmer than end user,\n      // but show true/false for boolean option as may be for hand-rolled env or config processing.\n      const showDefault =\n        option.required ||\n        option.optional ||\n        (option.isBoolean() && typeof option.defaultValue === 'boolean');\n      if (showDefault) {\n        extraInfo.push(\n          `default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`,\n        );\n      }\n    }\n    // preset for boolean and negated are more for programmer than end user\n    if (option.presetArg !== undefined && option.optional) {\n      extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);\n    }\n    if (option.envVar !== undefined) {\n      extraInfo.push(`env: ${option.envVar}`);\n    }\n    if (extraInfo.length > 0) {\n      return `${option.description} (${extraInfo.join(', ')})`;\n    }\n\n    return option.description;\n  }\n\n  /**\n   * Get the argument description to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @return {string}\n   */\n\n  argumentDescription(argument) {\n    const extraInfo = [];\n    if (argument.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`,\n      );\n    }\n    if (argument.defaultValue !== undefined) {\n      extraInfo.push(\n        `default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`,\n      );\n    }\n    if (extraInfo.length > 0) {\n      const extraDescripton = `(${extraInfo.join(', ')})`;\n      if (argument.description) {\n        return `${argument.description} ${extraDescripton}`;\n      }\n      return extraDescripton;\n    }\n    return argument.description;\n  }\n\n  /**\n   * Generate the built-in help text.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {string}\n   */\n\n  formatHelp(cmd, helper) {\n    const termWidth = helper.padWidth(cmd, helper);\n    const helpWidth = helper.helpWidth || 80;\n    const itemIndentWidth = 2;\n    const itemSeparatorWidth = 2; // between term and description\n    function formatItem(term, description) {\n      if (description) {\n        const fullText = `${term.padEnd(termWidth + itemSeparatorWidth)}${description}`;\n        return helper.wrap(\n          fullText,\n          helpWidth - itemIndentWidth,\n          termWidth + itemSeparatorWidth,\n        );\n      }\n      return term;\n    }\n    function formatList(textArray) {\n      return textArray.join('\\n').replace(/^/gm, ' '.repeat(itemIndentWidth));\n    }\n\n    // Usage\n    let output = [`Usage: ${helper.commandUsage(cmd)}`, ''];\n\n    // Description\n    const commandDescription = helper.commandDescription(cmd);\n    if (commandDescription.length > 0) {\n      output = output.concat([\n        helper.wrap(commandDescription, helpWidth, 0),\n        '',\n      ]);\n    }\n\n    // Arguments\n    const argumentList = helper.visibleArguments(cmd).map((argument) => {\n      return formatItem(\n        helper.argumentTerm(argument),\n        helper.argumentDescription(argument),\n      );\n    });\n    if (argumentList.length > 0) {\n      output = output.concat(['Arguments:', formatList(argumentList), '']);\n    }\n\n    // Options\n    const optionList = helper.visibleOptions(cmd).map((option) => {\n      return formatItem(\n        helper.optionTerm(option),\n        helper.optionDescription(option),\n      );\n    });\n    if (optionList.length > 0) {\n      output = output.concat(['Options:', formatList(optionList), '']);\n    }\n\n    if (this.showGlobalOptions) {\n      const globalOptionList = helper\n        .visibleGlobalOptions(cmd)\n        .map((option) => {\n          return formatItem(\n            helper.optionTerm(option),\n            helper.optionDescription(option),\n          );\n        });\n      if (globalOptionList.length > 0) {\n        output = output.concat([\n          'Global Options:',\n          formatList(globalOptionList),\n          '',\n        ]);\n      }\n    }\n\n    // Commands\n    const commandList = helper.visibleCommands(cmd).map((cmd) => {\n      return formatItem(\n        helper.subcommandTerm(cmd),\n        helper.subcommandDescription(cmd),\n      );\n    });\n    if (commandList.length > 0) {\n      output = output.concat(['Commands:', formatList(commandList), '']);\n    }\n\n    return output.join('\\n');\n  }\n\n  /**\n   * Calculate the pad width from the maximum term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  padWidth(cmd, helper) {\n    return Math.max(\n      helper.longestOptionTermLength(cmd, helper),\n      helper.longestGlobalOptionTermLength(cmd, helper),\n      helper.longestSubcommandTermLength(cmd, helper),\n      helper.longestArgumentTermLength(cmd, helper),\n    );\n  }\n\n  /**\n   * Wrap the given string to width characters per line, with lines after the first indented.\n   * Do not wrap if insufficient room for wrapping (minColumnWidth), or string is manually formatted.\n   *\n   * @param {string} str\n   * @param {number} width\n   * @param {number} indent\n   * @param {number} [minColumnWidth=40]\n   * @return {string}\n   *\n   */\n\n  wrap(str, width, indent, minColumnWidth = 40) {\n    // Full \\s characters, minus the linefeeds.\n    const indents =\n      ' \\\\f\\\\t\\\\v\\u00a0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff';\n    // Detect manually wrapped and indented strings by searching for line break followed by spaces.\n    const manualIndent = new RegExp(`[\\\\n][${indents}]+`);\n    if (str.match(manualIndent)) return str;\n    // Do not wrap if not enough room for a wrapped column of text (as could end up with a word per line).\n    const columnWidth = width - indent;\n    if (columnWidth < minColumnWidth) return str;\n\n    const leadingStr = str.slice(0, indent);\n    const columnText = str.slice(indent).replace('\\r\\n', '\\n');\n    const indentString = ' '.repeat(indent);\n    const zeroWidthSpace = '\\u200B';\n    const breaks = `\\\\s${zeroWidthSpace}`;\n    // Match line end (so empty lines don't collapse),\n    // or as much text as will fit in column, or excess text up to first break.\n    const regex = new RegExp(\n      `\\n|.{1,${columnWidth - 1}}([${breaks}]|$)|[^${breaks}]+?([${breaks}]|$)`,\n      'g',\n    );\n    const lines = columnText.match(regex) || [];\n    return (\n      leadingStr +\n      lines\n        .map((line, i) => {\n          if (line === '\\n') return ''; // preserve empty lines\n          return (i > 0 ? indentString : '') + line.trimEnd();\n        })\n        .join('\\n')\n    );\n  }\n}\n\nexports.Help = Help;\n", "const { InvalidArgumentError } = require('./error.js');\n\nclass Option {\n  /**\n   * Initialize a new `Option` with the given `flags` and `description`.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   */\n\n  constructor(flags, description) {\n    this.flags = flags;\n    this.description = description || '';\n\n    this.required = flags.includes('<'); // A value must be supplied when the option is specified.\n    this.optional = flags.includes('['); // A value is optional when the option is specified.\n    // variadic test ignores <value,...> et al which might be used to describe custom splitting of single argument\n    this.variadic = /\\w\\.\\.\\.[>\\]]$/.test(flags); // The option can take multiple values.\n    this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n    const optionFlags = splitOptionFlags(flags);\n    this.short = optionFlags.shortFlag;\n    this.long = optionFlags.longFlag;\n    this.negate = false;\n    if (this.long) {\n      this.negate = this.long.startsWith('--no-');\n    }\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.presetArg = undefined;\n    this.envVar = undefined;\n    this.parseArg = undefined;\n    this.hidden = false;\n    this.argChoices = undefined;\n    this.conflictsWith = [];\n    this.implied = undefined;\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Option}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Preset to use when option used without option-argument, especially optional but also boolean and negated.\n   * The custom processing (parseArg) is called.\n   *\n   * @example\n   * new Option('--color').default('GREYSCALE').preset('RGB');\n   * new Option('--donate [amount]').preset('20').argParser(parseFloat);\n   *\n   * @param {*} arg\n   * @return {Option}\n   */\n\n  preset(arg) {\n    this.presetArg = arg;\n    return this;\n  }\n\n  /**\n   * Add option name(s) that conflict with this option.\n   * An error will be displayed if conflicting options are found during parsing.\n   *\n   * @example\n   * new Option('--rgb').conflicts('cmyk');\n   * new Option('--js').conflicts(['ts', 'jsx']);\n   *\n   * @param {(string | string[])} names\n   * @return {Option}\n   */\n\n  conflicts(names) {\n    this.conflictsWith = this.conflictsWith.concat(names);\n    return this;\n  }\n\n  /**\n   * Specify implied option values for when this option is set and the implied options are not.\n   *\n   * The custom processing (parseArg) is not called on the implied values.\n   *\n   * @example\n   * program\n   *   .addOption(new Option('--log', 'write logging information to file'))\n   *   .addOption(new Option('--trace', 'log extra details').implies({ log: 'trace.txt' }));\n   *\n   * @param {object} impliedOptionValues\n   * @return {Option}\n   */\n  implies(impliedOptionValues) {\n    let newImplied = impliedOptionValues;\n    if (typeof impliedOptionValues === 'string') {\n      // string is not documented, but easy mistake and we can do what user probably intended.\n      newImplied = { [impliedOptionValues]: true };\n    }\n    this.implied = Object.assign(this.implied || {}, newImplied);\n    return this;\n  }\n\n  /**\n   * Set environment variable to check for option value.\n   *\n   * An environment variable is only used if when processed the current option value is\n   * undefined, or the source of the current value is 'default' or 'config' or 'env'.\n   *\n   * @param {string} name\n   * @return {Option}\n   */\n\n  env(name) {\n    this.envVar = name;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI option arguments into option values.\n   *\n   * @param {Function} [fn]\n   * @return {Option}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Whether the option is mandatory and must have a value after parsing.\n   *\n   * @param {boolean} [mandatory=true]\n   * @return {Option}\n   */\n\n  makeOptionMandatory(mandatory = true) {\n    this.mandatory = !!mandatory;\n    return this;\n  }\n\n  /**\n   * Hide option in help.\n   *\n   * @param {boolean} [hide=true]\n   * @return {Option}\n   */\n\n  hideHelp(hide = true) {\n    this.hidden = !!hide;\n    return this;\n  }\n\n  /**\n   * @package\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Only allow option value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Option}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(\n          `Allowed choices are ${this.argChoices.join(', ')}.`,\n        );\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Return option name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    if (this.long) {\n      return this.long.replace(/^--/, '');\n    }\n    return this.short.replace(/^-/, '');\n  }\n\n  /**\n   * Return option name, in a camelcase format that can be used\n   * as a object attribute key.\n   *\n   * @return {string}\n   */\n\n  attributeName() {\n    return camelcase(this.name().replace(/^no-/, ''));\n  }\n\n  /**\n   * Check if `arg` matches the short or long flag.\n   *\n   * @param {string} arg\n   * @return {boolean}\n   * @package\n   */\n\n  is(arg) {\n    return this.short === arg || this.long === arg;\n  }\n\n  /**\n   * Return whether a boolean option.\n   *\n   * Options are one of boolean, negated, required argument, or optional argument.\n   *\n   * @return {boolean}\n   * @package\n   */\n\n  isBoolean() {\n    return !this.required && !this.optional && !this.negate;\n  }\n}\n\n/**\n * This class is to make it easier to work with dual options, without changing the existing\n * implementation. We support separate dual options for separate positive and negative options,\n * like `--build` and `--no-build`, which share a single option value. This works nicely for some\n * use cases, but is tricky for others where we want separate behaviours despite\n * the single shared option value.\n */\nclass DualOptions {\n  /**\n   * @param {Option[]} options\n   */\n  constructor(options) {\n    this.positiveOptions = new Map();\n    this.negativeOptions = new Map();\n    this.dualOptions = new Set();\n    options.forEach((option) => {\n      if (option.negate) {\n        this.negativeOptions.set(option.attributeName(), option);\n      } else {\n        this.positiveOptions.set(option.attributeName(), option);\n      }\n    });\n    this.negativeOptions.forEach((value, key) => {\n      if (this.positiveOptions.has(key)) {\n        this.dualOptions.add(key);\n      }\n    });\n  }\n\n  /**\n   * Did the value come from the option, and not from possible matching dual option?\n   *\n   * @param {*} value\n   * @param {Option} option\n   * @returns {boolean}\n   */\n  valueFromOption(value, option) {\n    const optionKey = option.attributeName();\n    if (!this.dualOptions.has(optionKey)) return true;\n\n    // Use the value to deduce if (probably) came from the option.\n    const preset = this.negativeOptions.get(optionKey).presetArg;\n    const negativeValue = preset !== undefined ? preset : false;\n    return option.negate === (negativeValue === value);\n  }\n}\n\n/**\n * Convert string from kebab-case to camelCase.\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction camelcase(str) {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Split the short and long flag out of something like '-m,--mixed <value>'\n *\n * @private\n */\n\nfunction splitOptionFlags(flags) {\n  let shortFlag;\n  let longFlag;\n  // Use original very loose parsing to maintain backwards compatibility for now,\n  // which allowed for example unintended `-sw, --short-word` [sic].\n  const flagParts = flags.split(/[ |,]+/);\n  if (flagParts.length > 1 && !/^[[<]/.test(flagParts[1]))\n    shortFlag = flagParts.shift();\n  longFlag = flagParts.shift();\n  // Add support for lone short flag without significantly changing parsing!\n  if (!shortFlag && /^-[^-]$/.test(longFlag)) {\n    shortFlag = longFlag;\n    longFlag = undefined;\n  }\n  return { shortFlag, longFlag };\n}\n\nexports.Option = Option;\nexports.DualOptions = DualOptions;\n", "const maxDistance = 3;\n\nfunction editDistance(a, b) {\n  // https://en.wikipedia.org/wiki/Damerau\u2013Levenshtein_distance\n  // Calculating optimal string alignment distance, no substring is edited more than once.\n  // (Simple implementation.)\n\n  // Quick early exit, return worst case.\n  if (Math.abs(a.length - b.length) > maxDistance)\n    return Math.max(a.length, b.length);\n\n  // distance between prefix substrings of a and b\n  const d = [];\n\n  // pure deletions turn a into empty string\n  for (let i = 0; i <= a.length; i++) {\n    d[i] = [i];\n  }\n  // pure insertions turn empty string into b\n  for (let j = 0; j <= b.length; j++) {\n    d[0][j] = j;\n  }\n\n  // fill matrix\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      let cost = 1;\n      if (a[i - 1] === b[j - 1]) {\n        cost = 0;\n      } else {\n        cost = 1;\n      }\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost, // substitution\n      );\n      // transposition\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n      }\n    }\n  }\n\n  return d[a.length][b.length];\n}\n\n/**\n * Find close matches, restricted to same number of edits.\n *\n * @param {string} word\n * @param {string[]} candidates\n * @returns {string}\n */\n\nfunction suggestSimilar(word, candidates) {\n  if (!candidates || candidates.length === 0) return '';\n  // remove possible duplicates\n  candidates = Array.from(new Set(candidates));\n\n  const searchingOptions = word.startsWith('--');\n  if (searchingOptions) {\n    word = word.slice(2);\n    candidates = candidates.map((candidate) => candidate.slice(2));\n  }\n\n  let similar = [];\n  let bestDistance = maxDistance;\n  const minSimilarity = 0.4;\n  candidates.forEach((candidate) => {\n    if (candidate.length <= 1) return; // no one character guesses\n\n    const distance = editDistance(word, candidate);\n    const length = Math.max(word.length, candidate.length);\n    const similarity = (length - distance) / length;\n    if (similarity > minSimilarity) {\n      if (distance < bestDistance) {\n        // better edit distance, throw away previous worse matches\n        bestDistance = distance;\n        similar = [candidate];\n      } else if (distance === bestDistance) {\n        similar.push(candidate);\n      }\n    }\n  });\n\n  similar.sort((a, b) => a.localeCompare(b));\n  if (searchingOptions) {\n    similar = similar.map((candidate) => `--${candidate}`);\n  }\n\n  if (similar.length > 1) {\n    return `\\n(Did you mean one of ${similar.join(', ')}?)`;\n  }\n  if (similar.length === 1) {\n    return `\\n(Did you mean ${similar[0]}?)`;\n  }\n  return '';\n}\n\nexports.suggestSimilar = suggestSimilar;\n", "const EventEmitter = require('node:events').EventEmitter;\nconst childProcess = require('node:child_process');\nconst path = require('node:path');\nconst fs = require('node:fs');\nconst process = require('node:process');\n\nconst { Argument, humanReadableArgName } = require('./argument.js');\nconst { CommanderError } = require('./error.js');\nconst { Help } = require('./help.js');\nconst { Option, DualOptions } = require('./option.js');\nconst { suggestSimilar } = require('./suggestSimilar');\n\nclass Command extends EventEmitter {\n  /**\n   * Initialize a new `Command`.\n   *\n   * @param {string} [name]\n   */\n\n  constructor(name) {\n    super();\n    /** @type {Command[]} */\n    this.commands = [];\n    /** @type {Option[]} */\n    this.options = [];\n    this.parent = null;\n    this._allowUnknownOption = false;\n    this._allowExcessArguments = true;\n    /** @type {Argument[]} */\n    this.registeredArguments = [];\n    this._args = this.registeredArguments; // deprecated old name\n    /** @type {string[]} */\n    this.args = []; // cli args with options removed\n    this.rawArgs = [];\n    this.processedArgs = []; // like .args but after custom processing and collecting variadic\n    this._scriptPath = null;\n    this._name = name || '';\n    this._optionValues = {};\n    this._optionValueSources = {}; // default, env, cli etc\n    this._storeOptionsAsProperties = false;\n    this._actionHandler = null;\n    this._executableHandler = false;\n    this._executableFile = null; // custom name for executable\n    this._executableDir = null; // custom search directory for subcommands\n    this._defaultCommandName = null;\n    this._exitCallback = null;\n    this._aliases = [];\n    this._combineFlagAndOptionalValue = true;\n    this._description = '';\n    this._summary = '';\n    this._argsDescription = undefined; // legacy\n    this._enablePositionalOptions = false;\n    this._passThroughOptions = false;\n    this._lifeCycleHooks = {}; // a hash of arrays\n    /** @type {(boolean | string)} */\n    this._showHelpAfterError = false;\n    this._showSuggestionAfterError = true;\n\n    // see .configureOutput() for docs\n    this._outputConfiguration = {\n      writeOut: (str) => process.stdout.write(str),\n      writeErr: (str) => process.stderr.write(str),\n      getOutHelpWidth: () =>\n        process.stdout.isTTY ? process.stdout.columns : undefined,\n      getErrHelpWidth: () =>\n        process.stderr.isTTY ? process.stderr.columns : undefined,\n      outputError: (str, write) => write(str),\n    };\n\n    this._hidden = false;\n    /** @type {(Option | null | undefined)} */\n    this._helpOption = undefined; // Lazy created on demand. May be null if help option is disabled.\n    this._addImplicitHelpCommand = undefined; // undecided whether true or false yet, not inherited\n    /** @type {Command} */\n    this._helpCommand = undefined; // lazy initialised, inherited\n    this._helpConfiguration = {};\n  }\n\n  /**\n   * Copy settings that are useful to have in common across root command and subcommands.\n   *\n   * (Used internally when adding a command using `.command()` so subcommands inherit parent settings.)\n   *\n   * @param {Command} sourceCommand\n   * @return {Command} `this` command for chaining\n   */\n  copyInheritedSettings(sourceCommand) {\n    this._outputConfiguration = sourceCommand._outputConfiguration;\n    this._helpOption = sourceCommand._helpOption;\n    this._helpCommand = sourceCommand._helpCommand;\n    this._helpConfiguration = sourceCommand._helpConfiguration;\n    this._exitCallback = sourceCommand._exitCallback;\n    this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;\n    this._combineFlagAndOptionalValue =\n      sourceCommand._combineFlagAndOptionalValue;\n    this._allowExcessArguments = sourceCommand._allowExcessArguments;\n    this._enablePositionalOptions = sourceCommand._enablePositionalOptions;\n    this._showHelpAfterError = sourceCommand._showHelpAfterError;\n    this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;\n\n    return this;\n  }\n\n  /**\n   * @returns {Command[]}\n   * @private\n   */\n\n  _getCommandAndAncestors() {\n    const result = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    for (let command = this; command; command = command.parent) {\n      result.push(command);\n    }\n    return result;\n  }\n\n  /**\n   * Define a command.\n   *\n   * There are two styles of command: pay attention to where to put the description.\n   *\n   * @example\n   * // Command implemented using action handler (description is supplied separately to `.command`)\n   * program\n   *   .command('clone <source> [destination]')\n   *   .description('clone a repository into a newly created directory')\n   *   .action((source, destination) => {\n   *     console.log('clone command called');\n   *   });\n   *\n   * // Command implemented using separate executable file (description is second parameter to `.command`)\n   * program\n   *   .command('start <service>', 'start named service')\n   *   .command('stop [service]', 'stop named service, or all if no name supplied');\n   *\n   * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n   * @param {(object | string)} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n   * @param {object} [execOpts] - configuration options (for executable)\n   * @return {Command} returns new command for action handler, or `this` for executable command\n   */\n\n  command(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n    let desc = actionOptsOrExecDesc;\n    let opts = execOpts;\n    if (typeof desc === 'object' && desc !== null) {\n      opts = desc;\n      desc = null;\n    }\n    opts = opts || {};\n    const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);\n\n    const cmd = this.createCommand(name);\n    if (desc) {\n      cmd.description(desc);\n      cmd._executableHandler = true;\n    }\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    cmd._hidden = !!(opts.noHelp || opts.hidden); // noHelp is deprecated old name for hidden\n    cmd._executableFile = opts.executableFile || null; // Custom name for executable file, set missing to null to match constructor\n    if (args) cmd.arguments(args);\n    this._registerCommand(cmd);\n    cmd.parent = this;\n    cmd.copyInheritedSettings(this);\n\n    if (desc) return this;\n    return cmd;\n  }\n\n  /**\n   * Factory routine to create a new unattached command.\n   *\n   * See .command() for creating an attached subcommand, which uses this routine to\n   * create the command. You can override createCommand to customise subcommands.\n   *\n   * @param {string} [name]\n   * @return {Command} new command\n   */\n\n  createCommand(name) {\n    return new Command(name);\n  }\n\n  /**\n   * You can customise the help with a subclass of Help by overriding createHelp,\n   * or by overriding Help properties using configureHelp().\n   *\n   * @return {Help}\n   */\n\n  createHelp() {\n    return Object.assign(new Help(), this.configureHelp());\n  }\n\n  /**\n   * You can customise the help by overriding Help properties using configureHelp(),\n   * or with a subclass of Help by overriding createHelp().\n   *\n   * @param {object} [configuration] - configuration options\n   * @return {(Command | object)} `this` command for chaining, or stored configuration\n   */\n\n  configureHelp(configuration) {\n    if (configuration === undefined) return this._helpConfiguration;\n\n    this._helpConfiguration = configuration;\n    return this;\n  }\n\n  /**\n   * The default output goes to stdout and stderr. You can customise this for special\n   * applications. You can also customise the display of errors by overriding outputError.\n   *\n   * The configuration properties are all functions:\n   *\n   *     // functions to change where being written, stdout and stderr\n   *     writeOut(str)\n   *     writeErr(str)\n   *     // matching functions to specify width for wrapping help\n   *     getOutHelpWidth()\n   *     getErrHelpWidth()\n   *     // functions based on what is being written out\n   *     outputError(str, write) // used for displaying errors, and not used for displaying help\n   *\n   * @param {object} [configuration] - configuration options\n   * @return {(Command | object)} `this` command for chaining, or stored configuration\n   */\n\n  configureOutput(configuration) {\n    if (configuration === undefined) return this._outputConfiguration;\n\n    Object.assign(this._outputConfiguration, configuration);\n    return this;\n  }\n\n  /**\n   * Display the help or a custom message after an error occurs.\n   *\n   * @param {(boolean|string)} [displayHelp]\n   * @return {Command} `this` command for chaining\n   */\n  showHelpAfterError(displayHelp = true) {\n    if (typeof displayHelp !== 'string') displayHelp = !!displayHelp;\n    this._showHelpAfterError = displayHelp;\n    return this;\n  }\n\n  /**\n   * Display suggestion of similar commands for unknown commands, or options for unknown options.\n   *\n   * @param {boolean} [displaySuggestion]\n   * @return {Command} `this` command for chaining\n   */\n  showSuggestionAfterError(displaySuggestion = true) {\n    this._showSuggestionAfterError = !!displaySuggestion;\n    return this;\n  }\n\n  /**\n   * Add a prepared subcommand.\n   *\n   * See .command() for creating an attached subcommand which inherits settings from its parent.\n   *\n   * @param {Command} cmd - new subcommand\n   * @param {object} [opts] - configuration options\n   * @return {Command} `this` command for chaining\n   */\n\n  addCommand(cmd, opts) {\n    if (!cmd._name) {\n      throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);\n    }\n\n    opts = opts || {};\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    if (opts.noHelp || opts.hidden) cmd._hidden = true; // modifying passed command due to existing implementation\n\n    this._registerCommand(cmd);\n    cmd.parent = this;\n    cmd._checkForBrokenPassThrough();\n\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached argument.\n   *\n   * See .argument() for creating an attached argument, which uses this routine to\n   * create the argument. You can override createArgument to return a custom argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @return {Argument} new argument\n   */\n\n  createArgument(name, description) {\n    return new Argument(name, description);\n  }\n\n  /**\n   * Define argument syntax for command.\n   *\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @example\n   * program.argument('<input-file>');\n   * program.argument('[output-file]');\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @param {(Function|*)} [fn] - custom argument processing function\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n  argument(name, description, fn, defaultValue) {\n    const argument = this.createArgument(name, description);\n    if (typeof fn === 'function') {\n      argument.default(defaultValue).argParser(fn);\n    } else {\n      argument.default(fn);\n    }\n    this.addArgument(argument);\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding multiple at once (without descriptions).\n   *\n   * See also .argument().\n   *\n   * @example\n   * program.arguments('<cmd> [env]');\n   *\n   * @param {string} names\n   * @return {Command} `this` command for chaining\n   */\n\n  arguments(names) {\n    names\n      .trim()\n      .split(/ +/)\n      .forEach((detail) => {\n        this.argument(detail);\n      });\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding a prepared argument.\n   *\n   * @param {Argument} argument\n   * @return {Command} `this` command for chaining\n   */\n  addArgument(argument) {\n    const previousArgument = this.registeredArguments.slice(-1)[0];\n    if (previousArgument && previousArgument.variadic) {\n      throw new Error(\n        `only the last argument can be variadic '${previousArgument.name()}'`,\n      );\n    }\n    if (\n      argument.required &&\n      argument.defaultValue !== undefined &&\n      argument.parseArg === undefined\n    ) {\n      throw new Error(\n        `a default value for a required argument is never used: '${argument.name()}'`,\n      );\n    }\n    this.registeredArguments.push(argument);\n    return this;\n  }\n\n  /**\n   * Customise or override default help command. By default a help command is automatically added if your command has subcommands.\n   *\n   * @example\n   *    program.helpCommand('help [cmd]');\n   *    program.helpCommand('help [cmd]', 'show help');\n   *    program.helpCommand(false); // suppress default help command\n   *    program.helpCommand(true); // add help command even if no subcommands\n   *\n   * @param {string|boolean} enableOrNameAndArgs - enable with custom name and/or arguments, or boolean to override whether added\n   * @param {string} [description] - custom description\n   * @return {Command} `this` command for chaining\n   */\n\n  helpCommand(enableOrNameAndArgs, description) {\n    if (typeof enableOrNameAndArgs === 'boolean') {\n      this._addImplicitHelpCommand = enableOrNameAndArgs;\n      return this;\n    }\n\n    enableOrNameAndArgs = enableOrNameAndArgs ?? 'help [command]';\n    const [, helpName, helpArgs] = enableOrNameAndArgs.match(/([^ ]+) *(.*)/);\n    const helpDescription = description ?? 'display help for command';\n\n    const helpCommand = this.createCommand(helpName);\n    helpCommand.helpOption(false);\n    if (helpArgs) helpCommand.arguments(helpArgs);\n    if (helpDescription) helpCommand.description(helpDescription);\n\n    this._addImplicitHelpCommand = true;\n    this._helpCommand = helpCommand;\n\n    return this;\n  }\n\n  /**\n   * Add prepared custom help command.\n   *\n   * @param {(Command|string|boolean)} helpCommand - custom help command, or deprecated enableOrNameAndArgs as for `.helpCommand()`\n   * @param {string} [deprecatedDescription] - deprecated custom description used with custom name only\n   * @return {Command} `this` command for chaining\n   */\n  addHelpCommand(helpCommand, deprecatedDescription) {\n    // If not passed an object, call through to helpCommand for backwards compatibility,\n    // as addHelpCommand was originally used like helpCommand is now.\n    if (typeof helpCommand !== 'object') {\n      this.helpCommand(helpCommand, deprecatedDescription);\n      return this;\n    }\n\n    this._addImplicitHelpCommand = true;\n    this._helpCommand = helpCommand;\n    return this;\n  }\n\n  /**\n   * Lazy create help command.\n   *\n   * @return {(Command|null)}\n   * @package\n   */\n  _getHelpCommand() {\n    const hasImplicitHelpCommand =\n      this._addImplicitHelpCommand ??\n      (this.commands.length &&\n        !this._actionHandler &&\n        !this._findCommand('help'));\n\n    if (hasImplicitHelpCommand) {\n      if (this._helpCommand === undefined) {\n        this.helpCommand(undefined, undefined); // use default name and description\n      }\n      return this._helpCommand;\n    }\n    return null;\n  }\n\n  /**\n   * Add hook for life cycle event.\n   *\n   * @param {string} event\n   * @param {Function} listener\n   * @return {Command} `this` command for chaining\n   */\n\n  hook(event, listener) {\n    const allowedValues = ['preSubcommand', 'preAction', 'postAction'];\n    if (!allowedValues.includes(event)) {\n      throw new Error(`Unexpected value for event passed to hook : '${event}'.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    if (this._lifeCycleHooks[event]) {\n      this._lifeCycleHooks[event].push(listener);\n    } else {\n      this._lifeCycleHooks[event] = [listener];\n    }\n    return this;\n  }\n\n  /**\n   * Register callback to use as replacement for calling process.exit.\n   *\n   * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n   * @return {Command} `this` command for chaining\n   */\n\n  exitOverride(fn) {\n    if (fn) {\n      this._exitCallback = fn;\n    } else {\n      this._exitCallback = (err) => {\n        if (err.code !== 'commander.executeSubCommandAsync') {\n          throw err;\n        } else {\n          // Async callback from spawn events, not useful to throw.\n        }\n      };\n    }\n    return this;\n  }\n\n  /**\n   * Call process.exit, and _exitCallback if defined.\n   *\n   * @param {number} exitCode exit code for using with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @return never\n   * @private\n   */\n\n  _exit(exitCode, code, message) {\n    if (this._exitCallback) {\n      this._exitCallback(new CommanderError(exitCode, code, message));\n      // Expecting this line is not reached.\n    }\n    process.exit(exitCode);\n  }\n\n  /**\n   * Register callback `fn` for the command.\n   *\n   * @example\n   * program\n   *   .command('serve')\n   *   .description('start service')\n   *   .action(function() {\n   *      // do work here\n   *   });\n   *\n   * @param {Function} fn\n   * @return {Command} `this` command for chaining\n   */\n\n  action(fn) {\n    const listener = (args) => {\n      // The .action callback takes an extra parameter which is the command or options.\n      const expectedArgsCount = this.registeredArguments.length;\n      const actionArgs = args.slice(0, expectedArgsCount);\n      if (this._storeOptionsAsProperties) {\n        actionArgs[expectedArgsCount] = this; // backwards compatible \"options\"\n      } else {\n        actionArgs[expectedArgsCount] = this.opts();\n      }\n      actionArgs.push(this);\n\n      return fn.apply(this, actionArgs);\n    };\n    this._actionHandler = listener;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached option.\n   *\n   * See .option() for creating an attached option, which uses this routine to\n   * create the option. You can override createOption to return a custom option.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @return {Option} new option\n   */\n\n  createOption(flags, description) {\n    return new Option(flags, description);\n  }\n\n  /**\n   * Wrap parseArgs to catch 'commander.invalidArgument'.\n   *\n   * @param {(Option | Argument)} target\n   * @param {string} value\n   * @param {*} previous\n   * @param {string} invalidArgumentMessage\n   * @private\n   */\n\n  _callParseArg(target, value, previous, invalidArgumentMessage) {\n    try {\n      return target.parseArg(value, previous);\n    } catch (err) {\n      if (err.code === 'commander.invalidArgument') {\n        const message = `${invalidArgumentMessage} ${err.message}`;\n        this.error(message, { exitCode: err.exitCode, code: err.code });\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Check for option flag conflicts.\n   * Register option if no conflicts found, or throw on conflict.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  _registerOption(option) {\n    const matchingOption =\n      (option.short && this._findOption(option.short)) ||\n      (option.long && this._findOption(option.long));\n    if (matchingOption) {\n      const matchingFlag =\n        option.long && this._findOption(option.long)\n          ? option.long\n          : option.short;\n      throw new Error(`Cannot add option '${option.flags}'${this._name && ` to command '${this._name}'`} due to conflicting flag '${matchingFlag}'\n-  already used by option '${matchingOption.flags}'`);\n    }\n\n    this.options.push(option);\n  }\n\n  /**\n   * Check for command name and alias conflicts with existing commands.\n   * Register command if no conflicts found, or throw on conflict.\n   *\n   * @param {Command} command\n   * @private\n   */\n\n  _registerCommand(command) {\n    const knownBy = (cmd) => {\n      return [cmd.name()].concat(cmd.aliases());\n    };\n\n    const alreadyUsed = knownBy(command).find((name) =>\n      this._findCommand(name),\n    );\n    if (alreadyUsed) {\n      const existingCmd = knownBy(this._findCommand(alreadyUsed)).join('|');\n      const newCmd = knownBy(command).join('|');\n      throw new Error(\n        `cannot add command '${newCmd}' as already have command '${existingCmd}'`,\n      );\n    }\n\n    this.commands.push(command);\n  }\n\n  /**\n   * Add an option.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addOption(option) {\n    this._registerOption(option);\n\n    const oname = option.name();\n    const name = option.attributeName();\n\n    // store default value\n    if (option.negate) {\n      // --no-foo is special and defaults foo to true, unless a --foo option is already defined\n      const positiveLongFlag = option.long.replace(/^--no-/, '--');\n      if (!this._findOption(positiveLongFlag)) {\n        this.setOptionValueWithSource(\n          name,\n          option.defaultValue === undefined ? true : option.defaultValue,\n          'default',\n        );\n      }\n    } else if (option.defaultValue !== undefined) {\n      this.setOptionValueWithSource(name, option.defaultValue, 'default');\n    }\n\n    // handler for cli and env supplied values\n    const handleOptionValue = (val, invalidValueMessage, valueSource) => {\n      // val is null for optional option used without an optional-argument.\n      // val is undefined for boolean and negated option.\n      if (val == null && option.presetArg !== undefined) {\n        val = option.presetArg;\n      }\n\n      // custom processing\n      const oldValue = this.getOptionValue(name);\n      if (val !== null && option.parseArg) {\n        val = this._callParseArg(option, val, oldValue, invalidValueMessage);\n      } else if (val !== null && option.variadic) {\n        val = option._concatValue(val, oldValue);\n      }\n\n      // Fill-in appropriate missing values. Long winded but easy to follow.\n      if (val == null) {\n        if (option.negate) {\n          val = false;\n        } else if (option.isBoolean() || option.optional) {\n          val = true;\n        } else {\n          val = ''; // not normal, parseArg might have failed or be a mock function for testing\n        }\n      }\n      this.setOptionValueWithSource(name, val, valueSource);\n    };\n\n    this.on('option:' + oname, (val) => {\n      const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;\n      handleOptionValue(val, invalidValueMessage, 'cli');\n    });\n\n    if (option.envVar) {\n      this.on('optionEnv:' + oname, (val) => {\n        const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;\n        handleOptionValue(val, invalidValueMessage, 'env');\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Internal implementation shared by .option() and .requiredOption()\n   *\n   * @return {Command} `this` command for chaining\n   * @private\n   */\n  _optionEx(config, flags, description, fn, defaultValue) {\n    if (typeof flags === 'object' && flags instanceof Option) {\n      throw new Error(\n        'To add an Option object use addOption() instead of option() or requiredOption()',\n      );\n    }\n    const option = this.createOption(flags, description);\n    option.makeOptionMandatory(!!config.mandatory);\n    if (typeof fn === 'function') {\n      option.default(defaultValue).argParser(fn);\n    } else if (fn instanceof RegExp) {\n      // deprecated\n      const regex = fn;\n      fn = (val, def) => {\n        const m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n      option.default(defaultValue).argParser(fn);\n    } else {\n      option.default(fn);\n    }\n\n    return this.addOption(option);\n  }\n\n  /**\n   * Define option with `flags`, `description`, and optional argument parsing function or `defaultValue` or both.\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space. A required\n   * option-argument is indicated by `<>` and an optional option-argument by `[]`.\n   *\n   * See the README for more details, and see also addOption() and requiredOption().\n   *\n   * @example\n   * program\n   *     .option('-p, --pepper', 'add pepper')\n   *     .option('-p, --pizza-type <TYPE>', 'type of pizza') // required option-argument\n   *     .option('-c, --cheese [CHEESE]', 'add extra cheese', 'mozzarella') // optional option-argument with default\n   *     .option('-t, --tip <VALUE>', 'add tip to purchase cost', parseFloat) // custom parse function\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {(Function|*)} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  option(flags, description, parseArg, defaultValue) {\n    return this._optionEx({}, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n   * Add a required option which must have a value after parsing. This usually means\n   * the option must be specified on the command line. (Otherwise the same as .option().)\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {(Function|*)} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  requiredOption(flags, description, parseArg, defaultValue) {\n    return this._optionEx(\n      { mandatory: true },\n      flags,\n      description,\n      parseArg,\n      defaultValue,\n    );\n  }\n\n  /**\n   * Alter parsing of short flags with optional values.\n   *\n   * @example\n   * // for `.option('-f,--flag [value]'):\n   * program.combineFlagAndOptionalValue(true);  // `-f80` is treated like `--flag=80`, this is the default behaviour\n   * program.combineFlagAndOptionalValue(false) // `-fb` is treated like `-f -b`\n   *\n   * @param {boolean} [combine] - if `true` or omitted, an optional value can be specified directly after the flag.\n   * @return {Command} `this` command for chaining\n   */\n  combineFlagAndOptionalValue(combine = true) {\n    this._combineFlagAndOptionalValue = !!combine;\n    return this;\n  }\n\n  /**\n   * Allow unknown options on the command line.\n   *\n   * @param {boolean} [allowUnknown] - if `true` or omitted, no error will be thrown for unknown options.\n   * @return {Command} `this` command for chaining\n   */\n  allowUnknownOption(allowUnknown = true) {\n    this._allowUnknownOption = !!allowUnknown;\n    return this;\n  }\n\n  /**\n   * Allow excess command-arguments on the command line. Pass false to make excess arguments an error.\n   *\n   * @param {boolean} [allowExcess] - if `true` or omitted, no error will be thrown for excess arguments.\n   * @return {Command} `this` command for chaining\n   */\n  allowExcessArguments(allowExcess = true) {\n    this._allowExcessArguments = !!allowExcess;\n    return this;\n  }\n\n  /**\n   * Enable positional options. Positional means global options are specified before subcommands which lets\n   * subcommands reuse the same option names, and also enables subcommands to turn on passThroughOptions.\n   * The default behaviour is non-positional and global options may appear anywhere on the command line.\n   *\n   * @param {boolean} [positional]\n   * @return {Command} `this` command for chaining\n   */\n  enablePositionalOptions(positional = true) {\n    this._enablePositionalOptions = !!positional;\n    return this;\n  }\n\n  /**\n   * Pass through options that come after command-arguments rather than treat them as command-options,\n   * so actual command-options come before command-arguments. Turning this on for a subcommand requires\n   * positional options to have been enabled on the program (parent commands).\n   * The default behaviour is non-positional and options may appear before or after command-arguments.\n   *\n   * @param {boolean} [passThrough] for unknown options.\n   * @return {Command} `this` command for chaining\n   */\n  passThroughOptions(passThrough = true) {\n    this._passThroughOptions = !!passThrough;\n    this._checkForBrokenPassThrough();\n    return this;\n  }\n\n  /**\n   * @private\n   */\n\n  _checkForBrokenPassThrough() {\n    if (\n      this.parent &&\n      this._passThroughOptions &&\n      !this.parent._enablePositionalOptions\n    ) {\n      throw new Error(\n        `passThroughOptions cannot be used for '${this._name}' without turning on enablePositionalOptions for parent command(s)`,\n      );\n    }\n  }\n\n  /**\n   * Whether to store option values as properties on command object,\n   * or store separately (specify false). In both cases the option values can be accessed using .opts().\n   *\n   * @param {boolean} [storeAsProperties=true]\n   * @return {Command} `this` command for chaining\n   */\n\n  storeOptionsAsProperties(storeAsProperties = true) {\n    if (this.options.length) {\n      throw new Error('call .storeOptionsAsProperties() before adding options');\n    }\n    if (Object.keys(this._optionValues).length) {\n      throw new Error(\n        'call .storeOptionsAsProperties() before setting option values',\n      );\n    }\n    this._storeOptionsAsProperties = !!storeAsProperties;\n    return this;\n  }\n\n  /**\n   * Retrieve option value.\n   *\n   * @param {string} key\n   * @return {object} value\n   */\n\n  getOptionValue(key) {\n    if (this._storeOptionsAsProperties) {\n      return this[key];\n    }\n    return this._optionValues[key];\n  }\n\n  /**\n   * Store option value.\n   *\n   * @param {string} key\n   * @param {object} value\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValue(key, value) {\n    return this.setOptionValueWithSource(key, value, undefined);\n  }\n\n  /**\n   * Store option value and where the value came from.\n   *\n   * @param {string} key\n   * @param {object} value\n   * @param {string} source - expected values are default/config/env/cli/implied\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValueWithSource(key, value, source) {\n    if (this._storeOptionsAsProperties) {\n      this[key] = value;\n    } else {\n      this._optionValues[key] = value;\n    }\n    this._optionValueSources[key] = source;\n    return this;\n  }\n\n  /**\n   * Get source of option value.\n   * Expected values are default | config | env | cli | implied\n   *\n   * @param {string} key\n   * @return {string}\n   */\n\n  getOptionValueSource(key) {\n    return this._optionValueSources[key];\n  }\n\n  /**\n   * Get source of option value. See also .optsWithGlobals().\n   * Expected values are default | config | env | cli | implied\n   *\n   * @param {string} key\n   * @return {string}\n   */\n\n  getOptionValueSourceWithGlobals(key) {\n    // global overwrites local, like optsWithGlobals\n    let source;\n    this._getCommandAndAncestors().forEach((cmd) => {\n      if (cmd.getOptionValueSource(key) !== undefined) {\n        source = cmd.getOptionValueSource(key);\n      }\n    });\n    return source;\n  }\n\n  /**\n   * Get user arguments from implied or explicit arguments.\n   * Side-effects: set _scriptPath if args included script. Used for default program name, and subcommand searches.\n   *\n   * @private\n   */\n\n  _prepareUserArgs(argv, parseOptions) {\n    if (argv !== undefined && !Array.isArray(argv)) {\n      throw new Error('first parameter to parse must be array or undefined');\n    }\n    parseOptions = parseOptions || {};\n\n    // auto-detect argument conventions if nothing supplied\n    if (argv === undefined && parseOptions.from === undefined) {\n      if (process.versions?.electron) {\n        parseOptions.from = 'electron';\n      }\n      // check node specific options for scenarios where user CLI args follow executable without scriptname\n      const execArgv = process.execArgv ?? [];\n      if (\n        execArgv.includes('-e') ||\n        execArgv.includes('--eval') ||\n        execArgv.includes('-p') ||\n        execArgv.includes('--print')\n      ) {\n        parseOptions.from = 'eval'; // internal usage, not documented\n      }\n    }\n\n    // default to using process.argv\n    if (argv === undefined) {\n      argv = process.argv;\n    }\n    this.rawArgs = argv.slice();\n\n    // extract the user args and scriptPath\n    let userArgs;\n    switch (parseOptions.from) {\n      case undefined:\n      case 'node':\n        this._scriptPath = argv[1];\n        userArgs = argv.slice(2);\n        break;\n      case 'electron':\n        // @ts-ignore: because defaultApp is an unknown property\n        if (process.defaultApp) {\n          this._scriptPath = argv[1];\n          userArgs = argv.slice(2);\n        } else {\n          userArgs = argv.slice(1);\n        }\n        break;\n      case 'user':\n        userArgs = argv.slice(0);\n        break;\n      case 'eval':\n        userArgs = argv.slice(1);\n        break;\n      default:\n        throw new Error(\n          `unexpected parse option { from: '${parseOptions.from}' }`,\n        );\n    }\n\n    // Find default name for program from arguments.\n    if (!this._name && this._scriptPath)\n      this.nameFromFilename(this._scriptPath);\n    this._name = this._name || 'program';\n\n    return userArgs;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Use parseAsync instead of parse if any of your action handlers are async.\n   *\n   * Call with no parameters to parse `process.argv`. Detects Electron and special node options like `node --eval`. Easy mode!\n   *\n   * Or call with an array of strings to parse, and optionally where the user arguments start by specifying where the arguments are `from`:\n   * - `'node'`: default, `argv[0]` is the application and `argv[1]` is the script being run, with user arguments after that\n   * - `'electron'`: `argv[0]` is the application and `argv[1]` varies depending on whether the electron application is packaged\n   * - `'user'`: just user arguments\n   *\n   * @example\n   * program.parse(); // parse process.argv and auto-detect electron and special node flags\n   * program.parse(process.argv); // assume argv[0] is app and argv[1] is script\n   * program.parse(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv] - optional, defaults to process.argv\n   * @param {object} [parseOptions] - optionally specify style of options with from: node/user/electron\n   * @param {string} [parseOptions.from] - where the args are from: 'node', 'user', 'electron'\n   * @return {Command} `this` command for chaining\n   */\n\n  parse(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Call with no parameters to parse `process.argv`. Detects Electron and special node options like `node --eval`. Easy mode!\n   *\n   * Or call with an array of strings to parse, and optionally where the user arguments start by specifying where the arguments are `from`:\n   * - `'node'`: default, `argv[0]` is the application and `argv[1]` is the script being run, with user arguments after that\n   * - `'electron'`: `argv[0]` is the application and `argv[1]` varies depending on whether the electron application is packaged\n   * - `'user'`: just user arguments\n   *\n   * @example\n   * await program.parseAsync(); // parse process.argv and auto-detect electron and special node flags\n   * await program.parseAsync(process.argv); // assume argv[0] is app and argv[1] is script\n   * await program.parseAsync(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv]\n   * @param {object} [parseOptions]\n   * @param {string} parseOptions.from - where the args are from: 'node', 'user', 'electron'\n   * @return {Promise}\n   */\n\n  async parseAsync(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    await this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Execute a sub-command executable.\n   *\n   * @private\n   */\n\n  _executeSubCommand(subcommand, args) {\n    args = args.slice();\n    let launchWithNode = false; // Use node for source targets so do not need to get permissions correct, and on Windows.\n    const sourceExt = ['.js', '.ts', '.tsx', '.mjs', '.cjs'];\n\n    function findFile(baseDir, baseName) {\n      // Look for specified file\n      const localBin = path.resolve(baseDir, baseName);\n      if (fs.existsSync(localBin)) return localBin;\n\n      // Stop looking if candidate already has an expected extension.\n      if (sourceExt.includes(path.extname(baseName))) return undefined;\n\n      // Try all the extensions.\n      const foundExt = sourceExt.find((ext) =>\n        fs.existsSync(`${localBin}${ext}`),\n      );\n      if (foundExt) return `${localBin}${foundExt}`;\n\n      return undefined;\n    }\n\n    // Not checking for help first. Unlikely to have mandatory and executable, and can't robustly test for help flags in external command.\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // executableFile and executableDir might be full path, or just a name\n    let executableFile =\n      subcommand._executableFile || `${this._name}-${subcommand._name}`;\n    let executableDir = this._executableDir || '';\n    if (this._scriptPath) {\n      let resolvedScriptPath; // resolve possible symlink for installed npm binary\n      try {\n        resolvedScriptPath = fs.realpathSync(this._scriptPath);\n      } catch (err) {\n        resolvedScriptPath = this._scriptPath;\n      }\n      executableDir = path.resolve(\n        path.dirname(resolvedScriptPath),\n        executableDir,\n      );\n    }\n\n    // Look for a local file in preference to a command in PATH.\n    if (executableDir) {\n      let localFile = findFile(executableDir, executableFile);\n\n      // Legacy search using prefix of script name instead of command name\n      if (!localFile && !subcommand._executableFile && this._scriptPath) {\n        const legacyName = path.basename(\n          this._scriptPath,\n          path.extname(this._scriptPath),\n        );\n        if (legacyName !== this._name) {\n          localFile = findFile(\n            executableDir,\n            `${legacyName}-${subcommand._name}`,\n          );\n        }\n      }\n      executableFile = localFile || executableFile;\n    }\n\n    launchWithNode = sourceExt.includes(path.extname(executableFile));\n\n    let proc;\n    if (process.platform !== 'win32') {\n      if (launchWithNode) {\n        args.unshift(executableFile);\n        // add executable arguments to spawn\n        args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n        proc = childProcess.spawn(process.argv[0], args, { stdio: 'inherit' });\n      } else {\n        proc = childProcess.spawn(executableFile, args, { stdio: 'inherit' });\n      }\n    } else {\n      args.unshift(executableFile);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n      proc = childProcess.spawn(process.execPath, args, { stdio: 'inherit' });\n    }\n\n    if (!proc.killed) {\n      // testing mainly to avoid leak warnings during unit tests with mocked spawn\n      const signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n      signals.forEach((signal) => {\n        process.on(signal, () => {\n          if (proc.killed === false && proc.exitCode === null) {\n            // @ts-ignore because signals not typed to known strings\n            proc.kill(signal);\n          }\n        });\n      });\n    }\n\n    // By default terminate process when spawned process terminates.\n    const exitCallback = this._exitCallback;\n    proc.on('close', (code) => {\n      code = code ?? 1; // code is null if spawned process terminated due to a signal\n      if (!exitCallback) {\n        process.exit(code);\n      } else {\n        exitCallback(\n          new CommanderError(\n            code,\n            'commander.executeSubCommandAsync',\n            '(close)',\n          ),\n        );\n      }\n    });\n    proc.on('error', (err) => {\n      // @ts-ignore: because err.code is an unknown property\n      if (err.code === 'ENOENT') {\n        const executableDirMessage = executableDir\n          ? `searched for local subcommand relative to directory '${executableDir}'`\n          : 'no directory for search for local subcommand, use .executableDir() to supply a custom directory';\n        const executableMissing = `'${executableFile}' does not exist\n - if '${subcommand._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${executableDirMessage}`;\n        throw new Error(executableMissing);\n        // @ts-ignore: because err.code is an unknown property\n      } else if (err.code === 'EACCES') {\n        throw new Error(`'${executableFile}' not executable`);\n      }\n      if (!exitCallback) {\n        process.exit(1);\n      } else {\n        const wrappedError = new CommanderError(\n          1,\n          'commander.executeSubCommandAsync',\n          '(error)',\n        );\n        wrappedError.nestedError = err;\n        exitCallback(wrappedError);\n      }\n    });\n\n    // Store the reference to the child process\n    this.runningCommand = proc;\n  }\n\n  /**\n   * @private\n   */\n\n  _dispatchSubcommand(commandName, operands, unknown) {\n    const subCommand = this._findCommand(commandName);\n    if (!subCommand) this.help({ error: true });\n\n    let promiseChain;\n    promiseChain = this._chainOrCallSubCommandHook(\n      promiseChain,\n      subCommand,\n      'preSubcommand',\n    );\n    promiseChain = this._chainOrCall(promiseChain, () => {\n      if (subCommand._executableHandler) {\n        this._executeSubCommand(subCommand, operands.concat(unknown));\n      } else {\n        return subCommand._parseCommand(operands, unknown);\n      }\n    });\n    return promiseChain;\n  }\n\n  /**\n   * Invoke help directly if possible, or dispatch if necessary.\n   * e.g. help foo\n   *\n   * @private\n   */\n\n  _dispatchHelpCommand(subcommandName) {\n    if (!subcommandName) {\n      this.help();\n    }\n    const subCommand = this._findCommand(subcommandName);\n    if (subCommand && !subCommand._executableHandler) {\n      subCommand.help();\n    }\n\n    // Fallback to parsing the help flag to invoke the help.\n    return this._dispatchSubcommand(\n      subcommandName,\n      [],\n      [this._getHelpOption()?.long ?? this._getHelpOption()?.short ?? '--help'],\n    );\n  }\n\n  /**\n   * Check this.args against expected this.registeredArguments.\n   *\n   * @private\n   */\n\n  _checkNumberOfArguments() {\n    // too few\n    this.registeredArguments.forEach((arg, i) => {\n      if (arg.required && this.args[i] == null) {\n        this.missingArgument(arg.name());\n      }\n    });\n    // too many\n    if (\n      this.registeredArguments.length > 0 &&\n      this.registeredArguments[this.registeredArguments.length - 1].variadic\n    ) {\n      return;\n    }\n    if (this.args.length > this.registeredArguments.length) {\n      this._excessArguments(this.args);\n    }\n  }\n\n  /**\n   * Process this.args using this.registeredArguments and save as this.processedArgs!\n   *\n   * @private\n   */\n\n  _processArguments() {\n    const myParseArg = (argument, value, previous) => {\n      // Extra processing for nice error message on parsing failure.\n      let parsedValue = value;\n      if (value !== null && argument.parseArg) {\n        const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;\n        parsedValue = this._callParseArg(\n          argument,\n          value,\n          previous,\n          invalidValueMessage,\n        );\n      }\n      return parsedValue;\n    };\n\n    this._checkNumberOfArguments();\n\n    const processedArgs = [];\n    this.registeredArguments.forEach((declaredArg, index) => {\n      let value = declaredArg.defaultValue;\n      if (declaredArg.variadic) {\n        // Collect together remaining arguments for passing together as an array.\n        if (index < this.args.length) {\n          value = this.args.slice(index);\n          if (declaredArg.parseArg) {\n            value = value.reduce((processed, v) => {\n              return myParseArg(declaredArg, v, processed);\n            }, declaredArg.defaultValue);\n          }\n        } else if (value === undefined) {\n          value = [];\n        }\n      } else if (index < this.args.length) {\n        value = this.args[index];\n        if (declaredArg.parseArg) {\n          value = myParseArg(declaredArg, value, declaredArg.defaultValue);\n        }\n      }\n      processedArgs[index] = value;\n    });\n    this.processedArgs = processedArgs;\n  }\n\n  /**\n   * Once we have a promise we chain, but call synchronously until then.\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {Function} fn\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCall(promise, fn) {\n    // thenable\n    if (promise && promise.then && typeof promise.then === 'function') {\n      // already have a promise, chain callback\n      return promise.then(() => fn());\n    }\n    // callback might return a promise\n    return fn();\n  }\n\n  /**\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {string} event\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCallHooks(promise, event) {\n    let result = promise;\n    const hooks = [];\n    this._getCommandAndAncestors()\n      .reverse()\n      .filter((cmd) => cmd._lifeCycleHooks[event] !== undefined)\n      .forEach((hookedCommand) => {\n        hookedCommand._lifeCycleHooks[event].forEach((callback) => {\n          hooks.push({ hookedCommand, callback });\n        });\n      });\n    if (event === 'postAction') {\n      hooks.reverse();\n    }\n\n    hooks.forEach((hookDetail) => {\n      result = this._chainOrCall(result, () => {\n        return hookDetail.callback(hookDetail.hookedCommand, this);\n      });\n    });\n    return result;\n  }\n\n  /**\n   *\n   * @param {(Promise|undefined)} promise\n   * @param {Command} subCommand\n   * @param {string} event\n   * @return {(Promise|undefined)}\n   * @private\n   */\n\n  _chainOrCallSubCommandHook(promise, subCommand, event) {\n    let result = promise;\n    if (this._lifeCycleHooks[event] !== undefined) {\n      this._lifeCycleHooks[event].forEach((hook) => {\n        result = this._chainOrCall(result, () => {\n          return hook(this, subCommand);\n        });\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Process arguments in context of this command.\n   * Returns action result, in case it is a promise.\n   *\n   * @private\n   */\n\n  _parseCommand(operands, unknown) {\n    const parsed = this.parseOptions(unknown);\n    this._parseOptionsEnv(); // after cli, so parseArg not called on both cli and env\n    this._parseOptionsImplied();\n    operands = operands.concat(parsed.operands);\n    unknown = parsed.unknown;\n    this.args = operands.concat(unknown);\n\n    if (operands && this._findCommand(operands[0])) {\n      return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);\n    }\n    if (\n      this._getHelpCommand() &&\n      operands[0] === this._getHelpCommand().name()\n    ) {\n      return this._dispatchHelpCommand(operands[1]);\n    }\n    if (this._defaultCommandName) {\n      this._outputHelpIfRequested(unknown); // Run the help for default command from parent rather than passing to default command\n      return this._dispatchSubcommand(\n        this._defaultCommandName,\n        operands,\n        unknown,\n      );\n    }\n    if (\n      this.commands.length &&\n      this.args.length === 0 &&\n      !this._actionHandler &&\n      !this._defaultCommandName\n    ) {\n      // probably missing subcommand and no handler, user needs help (and exit)\n      this.help({ error: true });\n    }\n\n    this._outputHelpIfRequested(parsed.unknown);\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // We do not always call this check to avoid masking a \"better\" error, like unknown command.\n    const checkForUnknownOptions = () => {\n      if (parsed.unknown.length > 0) {\n        this.unknownOption(parsed.unknown[0]);\n      }\n    };\n\n    const commandEvent = `command:${this.name()}`;\n    if (this._actionHandler) {\n      checkForUnknownOptions();\n      this._processArguments();\n\n      let promiseChain;\n      promiseChain = this._chainOrCallHooks(promiseChain, 'preAction');\n      promiseChain = this._chainOrCall(promiseChain, () =>\n        this._actionHandler(this.processedArgs),\n      );\n      if (this.parent) {\n        promiseChain = this._chainOrCall(promiseChain, () => {\n          this.parent.emit(commandEvent, operands, unknown); // legacy\n        });\n      }\n      promiseChain = this._chainOrCallHooks(promiseChain, 'postAction');\n      return promiseChain;\n    }\n    if (this.parent && this.parent.listenerCount(commandEvent)) {\n      checkForUnknownOptions();\n      this._processArguments();\n      this.parent.emit(commandEvent, operands, unknown); // legacy\n    } else if (operands.length) {\n      if (this._findCommand('*')) {\n        // legacy default command\n        return this._dispatchSubcommand('*', operands, unknown);\n      }\n      if (this.listenerCount('command:*')) {\n        // skip option check, emit event for possible misspelling suggestion\n        this.emit('command:*', operands, unknown);\n      } else if (this.commands.length) {\n        this.unknownCommand();\n      } else {\n        checkForUnknownOptions();\n        this._processArguments();\n      }\n    } else if (this.commands.length) {\n      checkForUnknownOptions();\n      // This command has subcommands and nothing hooked up at this level, so display help (and exit).\n      this.help({ error: true });\n    } else {\n      checkForUnknownOptions();\n      this._processArguments();\n      // fall through for caller to handle after calling .parse()\n    }\n  }\n\n  /**\n   * Find matching command.\n   *\n   * @private\n   * @return {Command | undefined}\n   */\n  _findCommand(name) {\n    if (!name) return undefined;\n    return this.commands.find(\n      (cmd) => cmd._name === name || cmd._aliases.includes(name),\n    );\n  }\n\n  /**\n   * Return an option matching `arg` if any.\n   *\n   * @param {string} arg\n   * @return {Option}\n   * @package\n   */\n\n  _findOption(arg) {\n    return this.options.find((option) => option.is(arg));\n  }\n\n  /**\n   * Display an error message if a mandatory option does not have a value.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @private\n   */\n\n  _checkForMissingMandatoryOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd.options.forEach((anOption) => {\n        if (\n          anOption.mandatory &&\n          cmd.getOptionValue(anOption.attributeName()) === undefined\n        ) {\n          cmd.missingMandatoryOptionValue(anOption);\n        }\n      });\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together in this.\n   *\n   * @private\n   */\n  _checkForConflictingLocalOptions() {\n    const definedNonDefaultOptions = this.options.filter((option) => {\n      const optionKey = option.attributeName();\n      if (this.getOptionValue(optionKey) === undefined) {\n        return false;\n      }\n      return this.getOptionValueSource(optionKey) !== 'default';\n    });\n\n    const optionsWithConflicting = definedNonDefaultOptions.filter(\n      (option) => option.conflictsWith.length > 0,\n    );\n\n    optionsWithConflicting.forEach((option) => {\n      const conflictingAndDefined = definedNonDefaultOptions.find((defined) =>\n        option.conflictsWith.includes(defined.attributeName()),\n      );\n      if (conflictingAndDefined) {\n        this._conflictingOption(option, conflictingAndDefined);\n      }\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @private\n   */\n  _checkForConflictingOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd._checkForConflictingLocalOptions();\n    });\n  }\n\n  /**\n   * Parse options from `argv` removing known options,\n   * and return argv split into operands and unknown arguments.\n   *\n   * Examples:\n   *\n   *     argv => operands, unknown\n   *     --known kkk op => [op], []\n   *     op --known kkk => [op], []\n   *     sub --unknown uuu op => [sub], [--unknown uuu op]\n   *     sub -- --unknown uuu op => [sub --unknown uuu op], []\n   *\n   * @param {string[]} argv\n   * @return {{operands: string[], unknown: string[]}}\n   */\n\n  parseOptions(argv) {\n    const operands = []; // operands, not options or values\n    const unknown = []; // first unknown option and remaining unknown args\n    let dest = operands;\n    const args = argv.slice();\n\n    function maybeOption(arg) {\n      return arg.length > 1 && arg[0] === '-';\n    }\n\n    // parse options\n    let activeVariadicOption = null;\n    while (args.length) {\n      const arg = args.shift();\n\n      // literal\n      if (arg === '--') {\n        if (dest === unknown) dest.push(arg);\n        dest.push(...args);\n        break;\n      }\n\n      if (activeVariadicOption && !maybeOption(arg)) {\n        this.emit(`option:${activeVariadicOption.name()}`, arg);\n        continue;\n      }\n      activeVariadicOption = null;\n\n      if (maybeOption(arg)) {\n        const option = this._findOption(arg);\n        // recognised option, call listener to assign value with possible custom processing\n        if (option) {\n          if (option.required) {\n            const value = args.shift();\n            if (value === undefined) this.optionMissingArgument(option);\n            this.emit(`option:${option.name()}`, value);\n          } else if (option.optional) {\n            let value = null;\n            // historical behaviour is optional value is following arg unless an option\n            if (args.length > 0 && !maybeOption(args[0])) {\n              value = args.shift();\n            }\n            this.emit(`option:${option.name()}`, value);\n          } else {\n            // boolean flag\n            this.emit(`option:${option.name()}`);\n          }\n          activeVariadicOption = option.variadic ? option : null;\n          continue;\n        }\n      }\n\n      // Look for combo options following single dash, eat first one if known.\n      if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n        const option = this._findOption(`-${arg[1]}`);\n        if (option) {\n          if (\n            option.required ||\n            (option.optional && this._combineFlagAndOptionalValue)\n          ) {\n            // option with value following in same argument\n            this.emit(`option:${option.name()}`, arg.slice(2));\n          } else {\n            // boolean option, emit and put back remainder of arg for further processing\n            this.emit(`option:${option.name()}`);\n            args.unshift(`-${arg.slice(2)}`);\n          }\n          continue;\n        }\n      }\n\n      // Look for known long flag with value, like --foo=bar\n      if (/^--[^=]+=/.test(arg)) {\n        const index = arg.indexOf('=');\n        const option = this._findOption(arg.slice(0, index));\n        if (option && (option.required || option.optional)) {\n          this.emit(`option:${option.name()}`, arg.slice(index + 1));\n          continue;\n        }\n      }\n\n      // Not a recognised option by this command.\n      // Might be a command-argument, or subcommand option, or unknown option, or help command or option.\n\n      // An unknown option means further arguments also classified as unknown so can be reprocessed by subcommands.\n      if (maybeOption(arg)) {\n        dest = unknown;\n      }\n\n      // If using positionalOptions, stop processing our options at subcommand.\n      if (\n        (this._enablePositionalOptions || this._passThroughOptions) &&\n        operands.length === 0 &&\n        unknown.length === 0\n      ) {\n        if (this._findCommand(arg)) {\n          operands.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        } else if (\n          this._getHelpCommand() &&\n          arg === this._getHelpCommand().name()\n        ) {\n          operands.push(arg);\n          if (args.length > 0) operands.push(...args);\n          break;\n        } else if (this._defaultCommandName) {\n          unknown.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        }\n      }\n\n      // If using passThroughOptions, stop processing options at first command-argument.\n      if (this._passThroughOptions) {\n        dest.push(arg);\n        if (args.length > 0) dest.push(...args);\n        break;\n      }\n\n      // add arg\n      dest.push(arg);\n    }\n\n    return { operands, unknown };\n  }\n\n  /**\n   * Return an object containing local option values as key-value pairs.\n   *\n   * @return {object}\n   */\n  opts() {\n    if (this._storeOptionsAsProperties) {\n      // Preserve original behaviour so backwards compatible when still using properties\n      const result = {};\n      const len = this.options.length;\n\n      for (let i = 0; i < len; i++) {\n        const key = this.options[i].attributeName();\n        result[key] =\n          key === this._versionOptionName ? this._version : this[key];\n      }\n      return result;\n    }\n\n    return this._optionValues;\n  }\n\n  /**\n   * Return an object containing merged local and global option values as key-value pairs.\n   *\n   * @return {object}\n   */\n  optsWithGlobals() {\n    // globals overwrite locals\n    return this._getCommandAndAncestors().reduce(\n      (combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()),\n      {},\n    );\n  }\n\n  /**\n   * Display error message and exit (or call exitOverride).\n   *\n   * @param {string} message\n   * @param {object} [errorOptions]\n   * @param {string} [errorOptions.code] - an id string representing the error\n   * @param {number} [errorOptions.exitCode] - used with process.exit\n   */\n  error(message, errorOptions) {\n    // output handling\n    this._outputConfiguration.outputError(\n      `${message}\\n`,\n      this._outputConfiguration.writeErr,\n    );\n    if (typeof this._showHelpAfterError === 'string') {\n      this._outputConfiguration.writeErr(`${this._showHelpAfterError}\\n`);\n    } else if (this._showHelpAfterError) {\n      this._outputConfiguration.writeErr('\\n');\n      this.outputHelp({ error: true });\n    }\n\n    // exit handling\n    const config = errorOptions || {};\n    const exitCode = config.exitCode || 1;\n    const code = config.code || 'commander.error';\n    this._exit(exitCode, code, message);\n  }\n\n  /**\n   * Apply any option related environment variables, if option does\n   * not have a value from cli or client code.\n   *\n   * @private\n   */\n  _parseOptionsEnv() {\n    this.options.forEach((option) => {\n      if (option.envVar && option.envVar in process.env) {\n        const optionKey = option.attributeName();\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n        if (\n          this.getOptionValue(optionKey) === undefined ||\n          ['default', 'config', 'env'].includes(\n            this.getOptionValueSource(optionKey),\n          )\n        ) {\n          if (option.required || option.optional) {\n            // option can take a value\n            // keep very simple, optional always takes value\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n          } else {\n            // boolean\n            // keep very simple, only care that envVar defined and not the value\n            this.emit(`optionEnv:${option.name()}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply any implied option values, if option is undefined or default value.\n   *\n   * @private\n   */\n  _parseOptionsImplied() {\n    const dualHelper = new DualOptions(this.options);\n    const hasCustomOptionValue = (optionKey) => {\n      return (\n        this.getOptionValue(optionKey) !== undefined &&\n        !['default', 'implied'].includes(this.getOptionValueSource(optionKey))\n      );\n    };\n    this.options\n      .filter(\n        (option) =>\n          option.implied !== undefined &&\n          hasCustomOptionValue(option.attributeName()) &&\n          dualHelper.valueFromOption(\n            this.getOptionValue(option.attributeName()),\n            option,\n          ),\n      )\n      .forEach((option) => {\n        Object.keys(option.implied)\n          .filter((impliedKey) => !hasCustomOptionValue(impliedKey))\n          .forEach((impliedKey) => {\n            this.setOptionValueWithSource(\n              impliedKey,\n              option.implied[impliedKey],\n              'implied',\n            );\n          });\n      });\n  }\n\n  /**\n   * Argument `name` is missing.\n   *\n   * @param {string} name\n   * @private\n   */\n\n  missingArgument(name) {\n    const message = `error: missing required argument '${name}'`;\n    this.error(message, { code: 'commander.missingArgument' });\n  }\n\n  /**\n   * `Option` is missing an argument.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  optionMissingArgument(option) {\n    const message = `error: option '${option.flags}' argument missing`;\n    this.error(message, { code: 'commander.optionMissingArgument' });\n  }\n\n  /**\n   * `Option` does not have a value, and is a mandatory option.\n   *\n   * @param {Option} option\n   * @private\n   */\n\n  missingMandatoryOptionValue(option) {\n    const message = `error: required option '${option.flags}' not specified`;\n    this.error(message, { code: 'commander.missingMandatoryOptionValue' });\n  }\n\n  /**\n   * `Option` conflicts with another option.\n   *\n   * @param {Option} option\n   * @param {Option} conflictingOption\n   * @private\n   */\n  _conflictingOption(option, conflictingOption) {\n    // The calling code does not know whether a negated option is the source of the\n    // value, so do some work to take an educated guess.\n    const findBestOptionFromValue = (option) => {\n      const optionKey = option.attributeName();\n      const optionValue = this.getOptionValue(optionKey);\n      const negativeOption = this.options.find(\n        (target) => target.negate && optionKey === target.attributeName(),\n      );\n      const positiveOption = this.options.find(\n        (target) => !target.negate && optionKey === target.attributeName(),\n      );\n      if (\n        negativeOption &&\n        ((negativeOption.presetArg === undefined && optionValue === false) ||\n          (negativeOption.presetArg !== undefined &&\n            optionValue === negativeOption.presetArg))\n      ) {\n        return negativeOption;\n      }\n      return positiveOption || option;\n    };\n\n    const getErrorMessage = (option) => {\n      const bestOption = findBestOptionFromValue(option);\n      const optionKey = bestOption.attributeName();\n      const source = this.getOptionValueSource(optionKey);\n      if (source === 'env') {\n        return `environment variable '${bestOption.envVar}'`;\n      }\n      return `option '${bestOption.flags}'`;\n    };\n\n    const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;\n    this.error(message, { code: 'commander.conflictingOption' });\n  }\n\n  /**\n   * Unknown option `flag`.\n   *\n   * @param {string} flag\n   * @private\n   */\n\n  unknownOption(flag) {\n    if (this._allowUnknownOption) return;\n    let suggestion = '';\n\n    if (flag.startsWith('--') && this._showSuggestionAfterError) {\n      // Looping to pick up the global options too\n      let candidateFlags = [];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let command = this;\n      do {\n        const moreFlags = command\n          .createHelp()\n          .visibleOptions(command)\n          .filter((option) => option.long)\n          .map((option) => option.long);\n        candidateFlags = candidateFlags.concat(moreFlags);\n        command = command.parent;\n      } while (command && !command._enablePositionalOptions);\n      suggestion = suggestSimilar(flag, candidateFlags);\n    }\n\n    const message = `error: unknown option '${flag}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownOption' });\n  }\n\n  /**\n   * Excess arguments, more than expected.\n   *\n   * @param {string[]} receivedArgs\n   * @private\n   */\n\n  _excessArguments(receivedArgs) {\n    if (this._allowExcessArguments) return;\n\n    const expected = this.registeredArguments.length;\n    const s = expected === 1 ? '' : 's';\n    const forSubcommand = this.parent ? ` for '${this.name()}'` : '';\n    const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s} but got ${receivedArgs.length}.`;\n    this.error(message, { code: 'commander.excessArguments' });\n  }\n\n  /**\n   * Unknown command.\n   *\n   * @private\n   */\n\n  unknownCommand() {\n    const unknownName = this.args[0];\n    let suggestion = '';\n\n    if (this._showSuggestionAfterError) {\n      const candidateNames = [];\n      this.createHelp()\n        .visibleCommands(this)\n        .forEach((command) => {\n          candidateNames.push(command.name());\n          // just visible alias\n          if (command.alias()) candidateNames.push(command.alias());\n        });\n      suggestion = suggestSimilar(unknownName, candidateNames);\n    }\n\n    const message = `error: unknown command '${unknownName}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownCommand' });\n  }\n\n  /**\n   * Get or set the program version.\n   *\n   * This method auto-registers the \"-V, --version\" option which will print the version number.\n   *\n   * You can optionally supply the flags and description to override the defaults.\n   *\n   * @param {string} [str]\n   * @param {string} [flags]\n   * @param {string} [description]\n   * @return {(this | string | undefined)} `this` command for chaining, or version string if no arguments\n   */\n\n  version(str, flags, description) {\n    if (str === undefined) return this._version;\n    this._version = str;\n    flags = flags || '-V, --version';\n    description = description || 'output the version number';\n    const versionOption = this.createOption(flags, description);\n    this._versionOptionName = versionOption.attributeName();\n    this._registerOption(versionOption);\n\n    this.on('option:' + versionOption.name(), () => {\n      this._outputConfiguration.writeOut(`${str}\\n`);\n      this._exit(0, 'commander.version', str);\n    });\n    return this;\n  }\n\n  /**\n   * Set the description.\n   *\n   * @param {string} [str]\n   * @param {object} [argsDescription]\n   * @return {(string|Command)}\n   */\n  description(str, argsDescription) {\n    if (str === undefined && argsDescription === undefined)\n      return this._description;\n    this._description = str;\n    if (argsDescription) {\n      this._argsDescription = argsDescription;\n    }\n    return this;\n  }\n\n  /**\n   * Set the summary. Used when listed as subcommand of parent.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n  summary(str) {\n    if (str === undefined) return this._summary;\n    this._summary = str;\n    return this;\n  }\n\n  /**\n   * Set an alias for the command.\n   *\n   * You may call more than once to add multiple aliases. Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string} [alias]\n   * @return {(string|Command)}\n   */\n\n  alias(alias) {\n    if (alias === undefined) return this._aliases[0]; // just return first, for backwards compatibility\n\n    /** @type {Command} */\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let command = this;\n    if (\n      this.commands.length !== 0 &&\n      this.commands[this.commands.length - 1]._executableHandler\n    ) {\n      // assume adding alias for last added executable subcommand, rather than this\n      command = this.commands[this.commands.length - 1];\n    }\n\n    if (alias === command._name)\n      throw new Error(\"Command alias can't be the same as its name\");\n    const matchingCommand = this.parent?._findCommand(alias);\n    if (matchingCommand) {\n      // c.f. _registerCommand\n      const existingCmd = [matchingCommand.name()]\n        .concat(matchingCommand.aliases())\n        .join('|');\n      throw new Error(\n        `cannot add alias '${alias}' to command '${this.name()}' as already have command '${existingCmd}'`,\n      );\n    }\n\n    command._aliases.push(alias);\n    return this;\n  }\n\n  /**\n   * Set aliases for the command.\n   *\n   * Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string[]} [aliases]\n   * @return {(string[]|Command)}\n   */\n\n  aliases(aliases) {\n    // Getter for the array of aliases is the main reason for having aliases() in addition to alias().\n    if (aliases === undefined) return this._aliases;\n\n    aliases.forEach((alias) => this.alias(alias));\n    return this;\n  }\n\n  /**\n   * Set / get the command usage `str`.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n\n  usage(str) {\n    if (str === undefined) {\n      if (this._usage) return this._usage;\n\n      const args = this.registeredArguments.map((arg) => {\n        return humanReadableArgName(arg);\n      });\n      return []\n        .concat(\n          this.options.length || this._helpOption !== null ? '[options]' : [],\n          this.commands.length ? '[command]' : [],\n          this.registeredArguments.length ? args : [],\n        )\n        .join(' ');\n    }\n\n    this._usage = str;\n    return this;\n  }\n\n  /**\n   * Get or set the name of the command.\n   *\n   * @param {string} [str]\n   * @return {(string|Command)}\n   */\n\n  name(str) {\n    if (str === undefined) return this._name;\n    this._name = str;\n    return this;\n  }\n\n  /**\n   * Set the name of the command from script filename, such as process.argv[1],\n   * or require.main.filename, or __filename.\n   *\n   * (Used internally and public although not documented in README.)\n   *\n   * @example\n   * program.nameFromFilename(require.main.filename);\n   *\n   * @param {string} filename\n   * @return {Command}\n   */\n\n  nameFromFilename(filename) {\n    this._name = path.basename(filename, path.extname(filename));\n\n    return this;\n  }\n\n  /**\n   * Get or set the directory for searching for executable subcommands of this command.\n   *\n   * @example\n   * program.executableDir(__dirname);\n   * // or\n   * program.executableDir('subcommands');\n   *\n   * @param {string} [path]\n   * @return {(string|null|Command)}\n   */\n\n  executableDir(path) {\n    if (path === undefined) return this._executableDir;\n    this._executableDir = path;\n    return this;\n  }\n\n  /**\n   * Return program help documentation.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to wrap for stderr instead of stdout\n   * @return {string}\n   */\n\n  helpInformation(contextOptions) {\n    const helper = this.createHelp();\n    if (helper.helpWidth === undefined) {\n      helper.helpWidth =\n        contextOptions && contextOptions.error\n          ? this._outputConfiguration.getErrHelpWidth()\n          : this._outputConfiguration.getOutHelpWidth();\n    }\n    return helper.formatHelp(this, helper);\n  }\n\n  /**\n   * @private\n   */\n\n  _getHelpContext(contextOptions) {\n    contextOptions = contextOptions || {};\n    const context = { error: !!contextOptions.error };\n    let write;\n    if (context.error) {\n      write = (arg) => this._outputConfiguration.writeErr(arg);\n    } else {\n      write = (arg) => this._outputConfiguration.writeOut(arg);\n    }\n    context.write = contextOptions.write || write;\n    context.command = this;\n    return context;\n  }\n\n  /**\n   * Output help information for this command.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean } | Function} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  outputHelp(contextOptions) {\n    let deprecatedCallback;\n    if (typeof contextOptions === 'function') {\n      deprecatedCallback = contextOptions;\n      contextOptions = undefined;\n    }\n    const context = this._getHelpContext(contextOptions);\n\n    this._getCommandAndAncestors()\n      .reverse()\n      .forEach((command) => command.emit('beforeAllHelp', context));\n    this.emit('beforeHelp', context);\n\n    let helpInformation = this.helpInformation(context);\n    if (deprecatedCallback) {\n      helpInformation = deprecatedCallback(helpInformation);\n      if (\n        typeof helpInformation !== 'string' &&\n        !Buffer.isBuffer(helpInformation)\n      ) {\n        throw new Error('outputHelp callback must return a string or a Buffer');\n      }\n    }\n    context.write(helpInformation);\n\n    if (this._getHelpOption()?.long) {\n      this.emit(this._getHelpOption().long); // deprecated\n    }\n    this.emit('afterHelp', context);\n    this._getCommandAndAncestors().forEach((command) =>\n      command.emit('afterAllHelp', context),\n    );\n  }\n\n  /**\n   * You can pass in flags and a description to customise the built-in help option.\n   * Pass in false to disable the built-in help option.\n   *\n   * @example\n   * program.helpOption('-?, --help' 'show help'); // customise\n   * program.helpOption(false); // disable\n   *\n   * @param {(string | boolean)} flags\n   * @param {string} [description]\n   * @return {Command} `this` command for chaining\n   */\n\n  helpOption(flags, description) {\n    // Support disabling built-in help option.\n    if (typeof flags === 'boolean') {\n      if (flags) {\n        this._helpOption = this._helpOption ?? undefined; // preserve existing option\n      } else {\n        this._helpOption = null; // disable\n      }\n      return this;\n    }\n\n    // Customise flags and description.\n    flags = flags ?? '-h, --help';\n    description = description ?? 'display help for command';\n    this._helpOption = this.createOption(flags, description);\n\n    return this;\n  }\n\n  /**\n   * Lazy create help option.\n   * Returns null if has been disabled with .helpOption(false).\n   *\n   * @returns {(Option | null)} the help option\n   * @package\n   */\n  _getHelpOption() {\n    // Lazy create help option on demand.\n    if (this._helpOption === undefined) {\n      this.helpOption(undefined, undefined);\n    }\n    return this._helpOption;\n  }\n\n  /**\n   * Supply your own option to use for the built-in help option.\n   * This is an alternative to using helpOption() to customise the flags and description etc.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addHelpOption(option) {\n    this._helpOption = option;\n    return this;\n  }\n\n  /**\n   * Output help information and exit.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  help(contextOptions) {\n    this.outputHelp(contextOptions);\n    let exitCode = process.exitCode || 0;\n    if (\n      exitCode === 0 &&\n      contextOptions &&\n      typeof contextOptions !== 'function' &&\n      contextOptions.error\n    ) {\n      exitCode = 1;\n    }\n    // message: do not have all displayed text available so only passing placeholder.\n    this._exit(exitCode, 'commander.help', '(outputHelp)');\n  }\n\n  /**\n   * Add additional text to be displayed with the built-in help.\n   *\n   * Position is 'before' or 'after' to affect just this command,\n   * and 'beforeAll' or 'afterAll' to affect this command and all its subcommands.\n   *\n   * @param {string} position - before or after built-in help\n   * @param {(string | Function)} text - string to add, or a function returning a string\n   * @return {Command} `this` command for chaining\n   */\n  addHelpText(position, text) {\n    const allowedValues = ['beforeAll', 'before', 'after', 'afterAll'];\n    if (!allowedValues.includes(position)) {\n      throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    const helpEvent = `${position}Help`;\n    this.on(helpEvent, (context) => {\n      let helpStr;\n      if (typeof text === 'function') {\n        helpStr = text({ error: context.error, command: context.command });\n      } else {\n        helpStr = text;\n      }\n      // Ignore falsy value when nothing to output.\n      if (helpStr) {\n        context.write(`${helpStr}\\n`);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Output help information if help flags specified\n   *\n   * @param {Array} args - array of options to search for help flags\n   * @private\n   */\n\n  _outputHelpIfRequested(args) {\n    const helpOption = this._getHelpOption();\n    const helpRequested = helpOption && args.find((arg) => helpOption.is(arg));\n    if (helpRequested) {\n      this.outputHelp();\n      // (Do not have all displayed text available so only passing placeholder.)\n      this._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n    }\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    if (!arg.startsWith('--inspect')) {\n      return arg;\n    }\n    let debugOption;\n    let debugHost = '127.0.0.1';\n    let debugPort = '9229';\n    let match;\n    if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n      // e.g. --inspect\n      debugOption = match[1];\n    } else if (\n      (match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null\n    ) {\n      debugOption = match[1];\n      if (/^\\d+$/.test(match[3])) {\n        // e.g. --inspect=1234\n        debugPort = match[3];\n      } else {\n        // e.g. --inspect=localhost\n        debugHost = match[3];\n      }\n    } else if (\n      (match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null\n    ) {\n      // e.g. --inspect=localhost:1234\n      debugOption = match[1];\n      debugHost = match[3];\n      debugPort = match[4];\n    }\n\n    if (debugOption && debugPort !== '0') {\n      return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n    }\n    return arg;\n  });\n}\n\nexports.Command = Command;\n", "const { Argument } = require('./lib/argument.js');\nconst { Command } = require('./lib/command.js');\nconst { CommanderError, InvalidArgumentError } = require('./lib/error.js');\nconst { Help } = require('./lib/help.js');\nconst { Option } = require('./lib/option.js');\n\nexports.program = new Command();\n\nexports.createCommand = (name) => new Command(name);\nexports.createOption = (flags, description) => new Option(flags, description);\nexports.createArgument = (name, description) => new Argument(name, description);\n\n/**\n * Expose classes\n */\n\nexports.Command = Command;\nexports.Option = Option;\nexports.Argument = Argument;\nexports.Help = Help;\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\nexports.InvalidOptionArgumentError = InvalidArgumentError; // Deprecated\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n", "var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n", "const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n", "'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n", "'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n", "'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n    // It's slightly altered to disable JS backtracking to avoid hanging on specially crafted input\n    // Please see https://github.com/moxystudio/node-cross-spawn/pull/160 for more information\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(?=(\\\\+?)?)\\1\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(?=(\\\\+?)?)\\1$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n", "'use strict';\nmodule.exports = /^#!(.*)/;\n", "'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n", "'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n", "'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n", "'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed);\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n", "'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n", "import commander from './index.js';\n\n// wrapper to provide named exports for ESM.\nexport const {\n  program,\n  createCommand,\n  createArgument,\n  createOption,\n  CommanderError,\n  InvalidArgumentError,\n  InvalidOptionArgumentError, // deprecated old name\n  Command,\n  Argument,\n  Option,\n  Help,\n} = commander;\n", "// src/lib/config.ts\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport yaml from \"js-yaml\";\nimport { z } from \"zod\";\n\nexport const HL_ROOT = \"/home/felipecsl/prj/apps\";\n\nexport const ConfigSchema = z.object({\n  app: z.string(),\n  image: z.string(),\n  domain: z.string(),\n  servicePort: z.number().int().positive(),\n  resolver: z.string().default(\"myresolver\"),\n  network: z.string().default(\"traefik_proxy\"),\n  platforms: z.string().default(\"linux/amd64\"),\n  health: z.object({\n    url: z.string().url(),\n    interval: z.string().default(\"2s\"),\n    timeout: z.string().default(\"45s\"),\n  }),\n  migrations: z.object({\n    command: z.array(z.string()).default([\"bin/rails\", \"db:migrate\"]),\n    env: z.record(z.string()).default({}),\n  }),\n  secrets: z.array(z.string()).default([]),\n});\nexport type HLConfig = z.infer<typeof ConfigSchema>;\n\nexport async function loadConfig(app: string): Promise<HLConfig> {\n  const p = path.join(HL_ROOT, app, \"homelab.yml\");\n  const txt = await fs.readFile(p, \"utf8\");\n  const raw = yaml.load(txt) as any;\n  const cfg = ConfigSchema.parse(raw);\n  return cfg;\n}\n\nexport const appDir = (app: string) => path.join(HL_ROOT, app);\nexport const envFile = (app: string) => path.join(HL_ROOT, app, \".env\");\n\n// basic \u201C2s/45s\u201D \u2192 ms\nexport function parseDuration(s: string): number {\n  const m = s.match(/^(\\d+)(ms|s|m)$/);\n  if (!m) throw new Error(`bad duration: ${s}`);\n  const n = Number(m[1]);\n  return m[2] === \"ms\" ? n : m[2] === \"s\" ? n * 1000 : n * 60_000;\n}\n", "\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '\u2192') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn\u2019t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  \u21D2 ns-plain-safe-out\n//                             c = flow-in   \u21D2 ns-plain-safe-in\n//                             c = block-key \u21D2 ns-plain-safe-out\n//                             c = flow-key  \u21D2 ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - \u201C:\u201D - \u201C#\u201D )\n//                            | ( /* An ns-char preceding */ \u201C#\u201D )\n//                            | ( \u201C:\u201D /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( \u201C?\u201D | \u201C:\u201D | \u201C-\u201D ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // \u201C-\u201D | \u201C?\u201D | \u201C:\u201D | \u201C,\u201D | \u201C[\u201D | \u201C]\u201D | \u201C{\u201D | \u201C}\u201D\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | \u201C#\u201D | \u201C&\u201D | \u201C*\u201D | \u201C!\u201D | \u201C|\u201D | \u201C=\u201D | \u201C>\u201D | \u201C'\u201D | \u201C\"\u201D\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | \u201C%\u201D | \u201C@\u201D | \u201C`\u201D)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    \u2022 No ending newline => unaffected; already using strip \"-\" chomping.\n//    \u2022 Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth \u2264 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines\u2014\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | \u201C-\u201D\n      // [39] ns-uri-char     ::=  \u201C%\u201D ns-hex-digit ns-hex-digit | ns-word-char | \u201C#\u201D\n      //                         | \u201C;\u201D | \u201C/\u201D | \u201C?\u201D | \u201C:\u201D | \u201C@\u201D | \u201C&\u201D | \u201C=\u201D | \u201C+\u201D | \u201C$\u201D | \u201C,\u201D\n      //                         | \u201C_\u201D | \u201C.\u201D | \u201C!\u201D | \u201C~\u201D | \u201C*\u201D | \u201C'\u201D | \u201C(\u201D | \u201C)\u201D | \u201C[\u201D | \u201C]\u201D\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n", "import {fileURLToPath} from 'node:url';\n\n// Allow some arguments/options to be either a file path string or a file URL\nexport const safeNormalizeFileUrl = (file, name) => {\n\tconst fileString = normalizeFileUrl(normalizeDenoExecPath(file));\n\n\tif (typeof fileString !== 'string') {\n\t\tthrow new TypeError(`${name} must be a string or a file URL: ${fileString}.`);\n\t}\n\n\treturn fileString;\n};\n\n// In Deno node:process execPath is a special object, not just a string:\n// https://github.com/denoland/deno/blob/f460188e583f00144000aa0d8ade08218d47c3c1/ext/node/polyfills/process.ts#L344\nconst normalizeDenoExecPath = file => isDenoExecPath(file)\n\t? file.toString()\n\t: file;\n\nexport const isDenoExecPath = file => typeof file !== 'string'\n\t&& file\n\t&& Object.getPrototypeOf(file) === String.prototype;\n\n// Same but also allows other values, e.g. `boolean` for the `shell` option\nexport const normalizeFileUrl = file => file instanceof URL ? fileURLToPath(file) : file;\n", "import isPlainObject from 'is-plain-obj';\nimport {safeNormalizeFileUrl} from '../arguments/file-url.js';\n\n// The command `arguments` and `options` are both optional.\n// This also does basic validation on them and on the command file.\nexport const normalizeParameters = (rawFile, rawArguments = [], rawOptions = {}) => {\n\tconst filePath = safeNormalizeFileUrl(rawFile, 'First argument');\n\tconst [commandArguments, options] = isPlainObject(rawArguments)\n\t\t? [[], rawArguments]\n\t\t: [rawArguments, rawOptions];\n\n\tif (!Array.isArray(commandArguments)) {\n\t\tthrow new TypeError(`Second argument must be either an array of arguments or an options object: ${commandArguments}`);\n\t}\n\n\tif (commandArguments.some(commandArgument => typeof commandArgument === 'object' && commandArgument !== null)) {\n\t\tthrow new TypeError(`Second argument must be an array of strings: ${commandArguments}`);\n\t}\n\n\tconst normalizedArguments = commandArguments.map(String);\n\tconst nullByteArgument = normalizedArguments.find(normalizedArgument => normalizedArgument.includes('\\0'));\n\tif (nullByteArgument !== undefined) {\n\t\tthrow new TypeError(`Arguments cannot contain null bytes (\"\\\\0\"): ${nullByteArgument}`);\n\t}\n\n\tif (!isPlainObject(options)) {\n\t\tthrow new TypeError(`Last argument must be an options object: ${options}`);\n\t}\n\n\treturn [filePath, normalizedArguments, options];\n};\n", "import {ChildProcess} from 'node:child_process';\nimport isPlainObject from 'is-plain-obj';\nimport {isUint8Array, uint8ArrayToString} from '../utils/uint-array.js';\n\n// Check whether the template string syntax is being used\nexport const isTemplateString = templates => Array.isArray(templates) && Array.isArray(templates.raw);\n\n// Convert execa`file ...commandArguments` to execa(file, commandArguments)\nexport const parseTemplates = (templates, expressions) => {\n\tlet tokens = [];\n\n\tfor (const [index, template] of templates.entries()) {\n\t\ttokens = parseTemplate({\n\t\t\ttemplates,\n\t\t\texpressions,\n\t\t\ttokens,\n\t\t\tindex,\n\t\t\ttemplate,\n\t\t});\n\t}\n\n\tif (tokens.length === 0) {\n\t\tthrow new TypeError('Template script must not be empty');\n\t}\n\n\tconst [file, ...commandArguments] = tokens;\n\treturn [file, commandArguments, {}];\n};\n\nconst parseTemplate = ({templates, expressions, tokens, index, template}) => {\n\tif (template === undefined) {\n\t\tthrow new TypeError(`Invalid backslash sequence: ${templates.raw[index]}`);\n\t}\n\n\tconst {nextTokens, leadingWhitespaces, trailingWhitespaces} = splitByWhitespaces(template, templates.raw[index]);\n\tconst newTokens = concatTokens(tokens, nextTokens, leadingWhitespaces);\n\n\tif (index === expressions.length) {\n\t\treturn newTokens;\n\t}\n\n\tconst expression = expressions[index];\n\tconst expressionTokens = Array.isArray(expression)\n\t\t? expression.map(expression => parseExpression(expression))\n\t\t: [parseExpression(expression)];\n\treturn concatTokens(newTokens, expressionTokens, trailingWhitespaces);\n};\n\n// Like `string.split(/[ \\t\\r\\n]+/)` except newlines and tabs are:\n//  - ignored when input as a backslash sequence like: `echo foo\\n bar`\n//  - not ignored when input directly\n// The only way to distinguish those in JavaScript is to use a tagged template and compare:\n//  - the first array argument, which does not escape backslash sequences\n//  - its `raw` property, which escapes them\nconst splitByWhitespaces = (template, rawTemplate) => {\n\tif (rawTemplate.length === 0) {\n\t\treturn {nextTokens: [], leadingWhitespaces: false, trailingWhitespaces: false};\n\t}\n\n\tconst nextTokens = [];\n\tlet templateStart = 0;\n\tconst leadingWhitespaces = DELIMITERS.has(rawTemplate[0]);\n\n\tfor (\n\t\tlet templateIndex = 0, rawIndex = 0;\n\t\ttemplateIndex < template.length;\n\t\ttemplateIndex += 1, rawIndex += 1\n\t) {\n\t\tconst rawCharacter = rawTemplate[rawIndex];\n\t\tif (DELIMITERS.has(rawCharacter)) {\n\t\t\tif (templateStart !== templateIndex) {\n\t\t\t\tnextTokens.push(template.slice(templateStart, templateIndex));\n\t\t\t}\n\n\t\t\ttemplateStart = templateIndex + 1;\n\t\t} else if (rawCharacter === '\\\\') {\n\t\t\tconst nextRawCharacter = rawTemplate[rawIndex + 1];\n\t\t\tif (nextRawCharacter === '\\n') {\n\t\t\t\t// Handles escaped newlines in templates\n\t\t\t\ttemplateIndex -= 1;\n\t\t\t\trawIndex += 1;\n\t\t\t} else if (nextRawCharacter === 'u' && rawTemplate[rawIndex + 2] === '{') {\n\t\t\t\trawIndex = rawTemplate.indexOf('}', rawIndex + 3);\n\t\t\t} else {\n\t\t\t\trawIndex += ESCAPE_LENGTH[nextRawCharacter] ?? 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst trailingWhitespaces = templateStart === template.length;\n\tif (!trailingWhitespaces) {\n\t\tnextTokens.push(template.slice(templateStart));\n\t}\n\n\treturn {nextTokens, leadingWhitespaces, trailingWhitespaces};\n};\n\nconst DELIMITERS = new Set([' ', '\\t', '\\r', '\\n']);\n\n// Number of characters in backslash escape sequences: \\0 \\xXX or \\uXXXX\n// \\cX is allowed in RegExps but not in strings\n// Octal sequences are not allowed in strict mode\nconst ESCAPE_LENGTH = {x: 3, u: 5};\n\nconst concatTokens = (tokens, nextTokens, isSeparated) => isSeparated\n\t|| tokens.length === 0\n\t|| nextTokens.length === 0\n\t? [...tokens, ...nextTokens]\n\t: [\n\t\t...tokens.slice(0, -1),\n\t\t`${tokens.at(-1)}${nextTokens[0]}`,\n\t\t...nextTokens.slice(1),\n\t];\n\n// Handle `${expression}` inside the template string syntax\nconst parseExpression = expression => {\n\tconst typeOfExpression = typeof expression;\n\n\tif (typeOfExpression === 'string') {\n\t\treturn expression;\n\t}\n\n\tif (typeOfExpression === 'number') {\n\t\treturn String(expression);\n\t}\n\n\tif (isPlainObject(expression) && ('stdout' in expression || 'isMaxBuffer' in expression)) {\n\t\treturn getSubprocessResult(expression);\n\t}\n\n\tif (expression instanceof ChildProcess || Object.prototype.toString.call(expression) === '[object Promise]') {\n\t\t// eslint-disable-next-line no-template-curly-in-string\n\t\tthrow new TypeError('Unexpected subprocess in template expression. Please use ${await subprocess} instead of ${subprocess}.');\n\t}\n\n\tthrow new TypeError(`Unexpected \"${typeOfExpression}\" in template expression`);\n};\n\nconst getSubprocessResult = ({stdout}) => {\n\tif (typeof stdout === 'string') {\n\t\treturn stdout;\n\t}\n\n\tif (isUint8Array(stdout)) {\n\t\treturn uint8ArrayToString(stdout);\n\t}\n\n\tif (stdout === undefined) {\n\t\tthrow new TypeError('Missing result.stdout in template expression. This is probably due to the previous subprocess\\' \"stdout\" option.');\n\t}\n\n\tthrow new TypeError(`Unexpected \"${typeof stdout}\" stdout in template expression`);\n};\n", "import {StringDecoder} from 'node:string_decoder';\n\nconst {toString: objectToString} = Object.prototype;\n\nexport const isArrayBuffer = value => objectToString.call(value) === '[object ArrayBuffer]';\n\n// Is either Uint8Array or Buffer\nexport const isUint8Array = value => objectToString.call(value) === '[object Uint8Array]';\n\nexport const bufferToUint8Array = buffer => new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n\nconst textEncoder = new TextEncoder();\nconst stringToUint8Array = string => textEncoder.encode(string);\n\nconst textDecoder = new TextDecoder();\nexport const uint8ArrayToString = uint8Array => textDecoder.decode(uint8Array);\n\nexport const joinToString = (uint8ArraysOrStrings, encoding) => {\n\tconst strings = uint8ArraysToStrings(uint8ArraysOrStrings, encoding);\n\treturn strings.join('');\n};\n\nconst uint8ArraysToStrings = (uint8ArraysOrStrings, encoding) => {\n\tif (encoding === 'utf8' && uint8ArraysOrStrings.every(uint8ArrayOrString => typeof uint8ArrayOrString === 'string')) {\n\t\treturn uint8ArraysOrStrings;\n\t}\n\n\tconst decoder = new StringDecoder(encoding);\n\tconst strings = uint8ArraysOrStrings\n\t\t.map(uint8ArrayOrString => typeof uint8ArrayOrString === 'string'\n\t\t\t? stringToUint8Array(uint8ArrayOrString)\n\t\t\t: uint8ArrayOrString)\n\t\t.map(uint8Array => decoder.write(uint8Array));\n\tconst finalString = decoder.end();\n\treturn finalString === '' ? strings : [...strings, finalString];\n};\n\nexport const joinToUint8Array = uint8ArraysOrStrings => {\n\tif (uint8ArraysOrStrings.length === 1 && isUint8Array(uint8ArraysOrStrings[0])) {\n\t\treturn uint8ArraysOrStrings[0];\n\t}\n\n\treturn concatUint8Arrays(stringsToUint8Arrays(uint8ArraysOrStrings));\n};\n\nconst stringsToUint8Arrays = uint8ArraysOrStrings => uint8ArraysOrStrings.map(uint8ArrayOrString => typeof uint8ArrayOrString === 'string'\n\t? stringToUint8Array(uint8ArrayOrString)\n\t: uint8ArrayOrString);\n\nexport const concatUint8Arrays = uint8Arrays => {\n\tconst result = new Uint8Array(getJoinLength(uint8Arrays));\n\n\tlet index = 0;\n\tfor (const uint8Array of uint8Arrays) {\n\t\tresult.set(uint8Array, index);\n\t\tindex += uint8Array.length;\n\t}\n\n\treturn result;\n};\n\nconst getJoinLength = uint8Arrays => {\n\tlet joinLength = 0;\n\tfor (const uint8Array of uint8Arrays) {\n\t\tjoinLength += uint8Array.length;\n\t}\n\n\treturn joinLength;\n};\n", "import {spawnSync} from 'node:child_process';\nimport {handleCommand} from '../arguments/command.js';\nimport {normalizeOptions} from '../arguments/options.js';\nimport {concatenateShell} from '../arguments/shell.js';\nimport {makeError, makeEarlyError, makeSuccessResult} from '../return/result.js';\nimport {handleResult} from '../return/reject.js';\nimport {handleStdioSync} from '../stdio/handle-sync.js';\nimport {stripNewline} from '../io/strip-newline.js';\nimport {addInputOptionsSync} from '../io/input-sync.js';\nimport {transformOutputSync} from '../io/output-sync.js';\nimport {getMaxBufferSync} from '../io/max-buffer.js';\nimport {getAllSync} from '../resolve/all-sync.js';\nimport {getExitResultSync} from '../resolve/exit-sync.js';\n\n// Main shared logic for all sync methods: `execaSync()`, `$.sync()`\nexport const execaCoreSync = (rawFile, rawArguments, rawOptions) => {\n\tconst {file, commandArguments, command, escapedCommand, startTime, verboseInfo, options, fileDescriptors} = handleSyncArguments(rawFile, rawArguments, rawOptions);\n\tconst result = spawnSubprocessSync({\n\t\tfile,\n\t\tcommandArguments,\n\t\toptions,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tverboseInfo,\n\t\tfileDescriptors,\n\t\tstartTime,\n\t});\n\treturn handleResult(result, verboseInfo, options);\n};\n\n// Compute arguments to pass to `child_process.spawnSync()`\nconst handleSyncArguments = (rawFile, rawArguments, rawOptions) => {\n\tconst {command, escapedCommand, startTime, verboseInfo} = handleCommand(rawFile, rawArguments, rawOptions);\n\tconst syncOptions = normalizeSyncOptions(rawOptions);\n\tconst {file, commandArguments, options} = normalizeOptions(rawFile, rawArguments, syncOptions);\n\tvalidateSyncOptions(options);\n\tconst fileDescriptors = handleStdioSync(options, verboseInfo);\n\treturn {\n\t\tfile,\n\t\tcommandArguments,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstartTime,\n\t\tverboseInfo,\n\t\toptions,\n\t\tfileDescriptors,\n\t};\n};\n\n// Options normalization logic specific to sync methods\nconst normalizeSyncOptions = options => options.node && !options.ipc ? {...options, ipc: false} : options;\n\n// Options validation logic specific to sync methods\nconst validateSyncOptions = ({ipc, ipcInput, detached, cancelSignal}) => {\n\tif (ipcInput) {\n\t\tthrowInvalidSyncOption('ipcInput');\n\t}\n\n\tif (ipc) {\n\t\tthrowInvalidSyncOption('ipc: true');\n\t}\n\n\tif (detached) {\n\t\tthrowInvalidSyncOption('detached: true');\n\t}\n\n\tif (cancelSignal) {\n\t\tthrowInvalidSyncOption('cancelSignal');\n\t}\n};\n\nconst throwInvalidSyncOption = value => {\n\tthrow new TypeError(`The \"${value}\" option cannot be used with synchronous methods.`);\n};\n\nconst spawnSubprocessSync = ({file, commandArguments, options, command, escapedCommand, verboseInfo, fileDescriptors, startTime}) => {\n\tconst syncResult = runSubprocessSync({\n\t\tfile,\n\t\tcommandArguments,\n\t\toptions,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tfileDescriptors,\n\t\tstartTime,\n\t});\n\tif (syncResult.failed) {\n\t\treturn syncResult;\n\t}\n\n\tconst {resultError, exitCode, signal, timedOut, isMaxBuffer} = getExitResultSync(syncResult, options);\n\tconst {output, error = resultError} = transformOutputSync({\n\t\tfileDescriptors,\n\t\tsyncResult,\n\t\toptions,\n\t\tisMaxBuffer,\n\t\tverboseInfo,\n\t});\n\tconst stdio = output.map((stdioOutput, fdNumber) => stripNewline(stdioOutput, options, fdNumber));\n\tconst all = stripNewline(getAllSync(output, options), options, 'all');\n\treturn getSyncResult({\n\t\terror,\n\t\texitCode,\n\t\tsignal,\n\t\ttimedOut,\n\t\tisMaxBuffer,\n\t\tstdio,\n\t\tall,\n\t\toptions,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstartTime,\n\t});\n};\n\nconst runSubprocessSync = ({file, commandArguments, options, command, escapedCommand, fileDescriptors, startTime}) => {\n\ttry {\n\t\taddInputOptionsSync(fileDescriptors, options);\n\t\tconst normalizedOptions = normalizeSpawnSyncOptions(options);\n\t\treturn spawnSync(...concatenateShell(file, commandArguments, normalizedOptions));\n\t} catch (error) {\n\t\treturn makeEarlyError({\n\t\t\terror,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tfileDescriptors,\n\t\t\toptions,\n\t\t\tstartTime,\n\t\t\tisSync: true,\n\t\t});\n\t}\n};\n\n// The `encoding` option is handled by Execa, not by `child_process.spawnSync()`\nconst normalizeSpawnSyncOptions = ({encoding, maxBuffer, ...options}) => ({...options, encoding: 'buffer', maxBuffer: getMaxBufferSync(maxBuffer)});\n\nconst getSyncResult = ({error, exitCode, signal, timedOut, isMaxBuffer, stdio, all, options, command, escapedCommand, startTime}) => error === undefined\n\t? makeSuccessResult({\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstdio,\n\t\tall,\n\t\tipcOutput: [],\n\t\toptions,\n\t\tstartTime,\n\t})\n\t: makeError({\n\t\terror,\n\t\tcommand,\n\t\tescapedCommand,\n\t\ttimedOut,\n\t\tisCanceled: false,\n\t\tisGracefullyCanceled: false,\n\t\tisMaxBuffer,\n\t\tisForcefullyTerminated: false,\n\t\texitCode,\n\t\tsignal,\n\t\tstdio,\n\t\tall,\n\t\tipcOutput: [],\n\t\toptions,\n\t\tstartTime,\n\t\tisSync: true,\n\t});\n", "import {debuglog} from 'node:util';\nimport isPlainObject from 'is-plain-obj';\nimport {STANDARD_STREAMS_ALIASES} from '../utils/standard-stream.js';\n\n// Some options can have different values for `stdout`/`stderr`/`fd3`.\n// This normalizes those to array of values.\n// For example, `{verbose: {stdout: 'none', stderr: 'full'}}` becomes `{verbose: ['none', 'none', 'full']}`\nexport const normalizeFdSpecificOptions = options => {\n\tconst optionsCopy = {...options};\n\n\tfor (const optionName of FD_SPECIFIC_OPTIONS) {\n\t\toptionsCopy[optionName] = normalizeFdSpecificOption(options, optionName);\n\t}\n\n\treturn optionsCopy;\n};\n\nexport const normalizeFdSpecificOption = (options, optionName) => {\n\tconst optionBaseArray = Array.from({length: getStdioLength(options) + 1});\n\tconst optionArray = normalizeFdSpecificValue(options[optionName], optionBaseArray, optionName);\n\treturn addDefaultValue(optionArray, optionName);\n};\n\nconst getStdioLength = ({stdio}) => Array.isArray(stdio)\n\t? Math.max(stdio.length, STANDARD_STREAMS_ALIASES.length)\n\t: STANDARD_STREAMS_ALIASES.length;\n\nconst normalizeFdSpecificValue = (optionValue, optionArray, optionName) => isPlainObject(optionValue)\n\t? normalizeOptionObject(optionValue, optionArray, optionName)\n\t: optionArray.fill(optionValue);\n\nconst normalizeOptionObject = (optionValue, optionArray, optionName) => {\n\tfor (const fdName of Object.keys(optionValue).sort(compareFdName)) {\n\t\tfor (const fdNumber of parseFdName(fdName, optionName, optionArray)) {\n\t\t\toptionArray[fdNumber] = optionValue[fdName];\n\t\t}\n\t}\n\n\treturn optionArray;\n};\n\n// Ensure priority order when setting both `stdout`/`stderr`, `fd1`/`fd2`, and `all`\nconst compareFdName = (fdNameA, fdNameB) => getFdNameOrder(fdNameA) < getFdNameOrder(fdNameB) ? 1 : -1;\n\nconst getFdNameOrder = fdName => {\n\tif (fdName === 'stdout' || fdName === 'stderr') {\n\t\treturn 0;\n\t}\n\n\treturn fdName === 'all' ? 2 : 1;\n};\n\nconst parseFdName = (fdName, optionName, optionArray) => {\n\tif (fdName === 'ipc') {\n\t\treturn [optionArray.length - 1];\n\t}\n\n\tconst fdNumber = parseFd(fdName);\n\tif (fdNumber === undefined || fdNumber === 0) {\n\t\tthrow new TypeError(`\"${optionName}.${fdName}\" is invalid.\nIt must be \"${optionName}.stdout\", \"${optionName}.stderr\", \"${optionName}.all\", \"${optionName}.ipc\", or \"${optionName}.fd3\", \"${optionName}.fd4\" (and so on).`);\n\t}\n\n\tif (fdNumber >= optionArray.length) {\n\t\tthrow new TypeError(`\"${optionName}.${fdName}\" is invalid: that file descriptor does not exist.\nPlease set the \"stdio\" option to ensure that file descriptor exists.`);\n\t}\n\n\treturn fdNumber === 'all' ? [1, 2] : [fdNumber];\n};\n\n// Use the same syntax for fd-specific options and the `from`/`to` options\nexport const parseFd = fdName => {\n\tif (fdName === 'all') {\n\t\treturn fdName;\n\t}\n\n\tif (STANDARD_STREAMS_ALIASES.includes(fdName)) {\n\t\treturn STANDARD_STREAMS_ALIASES.indexOf(fdName);\n\t}\n\n\tconst regexpResult = FD_REGEXP.exec(fdName);\n\tif (regexpResult !== null) {\n\t\treturn Number(regexpResult[1]);\n\t}\n};\n\nconst FD_REGEXP = /^fd(\\d+)$/;\n\nconst addDefaultValue = (optionArray, optionName) => optionArray.map(optionValue => optionValue === undefined\n\t? DEFAULT_OPTIONS[optionName]\n\t: optionValue);\n\n// Default value for the `verbose` option\nconst verboseDefault = debuglog('execa').enabled ? 'full' : 'none';\n\nconst DEFAULT_OPTIONS = {\n\tlines: false,\n\tbuffer: true,\n\tmaxBuffer: 1000 * 1000 * 100,\n\tverbose: verboseDefault,\n\tstripFinalNewline: true,\n};\n\n// List of options which can have different values for `stdout`/`stderr`\nexport const FD_SPECIFIC_OPTIONS = ['lines', 'buffer', 'maxBuffer', 'verbose', 'stripFinalNewline'];\n\n// Retrieve fd-specific option\nexport const getFdSpecificValue = (optionArray, fdNumber) => fdNumber === 'ipc'\n\t? optionArray.at(-1)\n\t: optionArray[fdNumber];\n", "import process from 'node:process';\n\nexport const isStandardStream = stream => STANDARD_STREAMS.includes(stream);\nexport const STANDARD_STREAMS = [process.stdin, process.stdout, process.stderr];\nexport const STANDARD_STREAMS_ALIASES = ['stdin', 'stdout', 'stderr'];\nexport const getStreamName = fdNumber => STANDARD_STREAMS_ALIASES[fdNumber] ?? `stdio[${fdNumber}]`;\n", "import {getFdSpecificValue} from '../arguments/specific.js';\n\n// The `verbose` option can have different values for `stdout`/`stderr`\nexport const isVerbose = ({verbose}, fdNumber) => getFdVerbose(verbose, fdNumber) !== 'none';\n\n// Whether IPC and output and logged\nexport const isFullVerbose = ({verbose}, fdNumber) => !['none', 'short'].includes(getFdVerbose(verbose, fdNumber));\n\n// The `verbose` option can be a function to customize logging\nexport const getVerboseFunction = ({verbose}, fdNumber) => {\n\tconst fdVerbose = getFdVerbose(verbose, fdNumber);\n\treturn isVerboseFunction(fdVerbose) ? fdVerbose : undefined;\n};\n\n// When using `verbose: {stdout, stderr, fd3, ipc}`:\n//  - `verbose.stdout|stderr|fd3` is used for 'output'\n//  - `verbose.ipc` is only used for 'ipc'\n//  - highest `verbose.*` value is used for 'command', 'error' and 'duration'\nconst getFdVerbose = (verbose, fdNumber) => fdNumber === undefined\n\t? getFdGenericVerbose(verbose)\n\t: getFdSpecificValue(verbose, fdNumber);\n\n// When using `verbose: {stdout, stderr, fd3, ipc}` and logging is not specific to a file descriptor.\n// We then use the highest `verbose.*` value, using the following order:\n//  - function > 'full' > 'short' > 'none'\n//  - if several functions are defined: stdout > stderr > fd3 > ipc\nconst getFdGenericVerbose = verbose => verbose.find(fdVerbose => isVerboseFunction(fdVerbose))\n\t?? VERBOSE_VALUES.findLast(fdVerbose => verbose.includes(fdVerbose));\n\n// Whether the `verbose` option is customized using a function\nexport const isVerboseFunction = fdVerbose => typeof fdVerbose === 'function';\n\nexport const VERBOSE_VALUES = ['none', 'short', 'full'];\n", "import {inspect} from 'node:util';\nimport {escapeLines} from '../arguments/escape.js';\nimport {defaultVerboseFunction} from './default.js';\nimport {applyVerboseOnLines} from './custom.js';\n\n// This prints on stderr.\n// If the subprocess prints on stdout and is using `stdout: 'inherit'`,\n// there is a chance both writes will compete (introducing a race condition).\n// This means their respective order is not deterministic.\n// In particular, this means the verbose command lines might be after the start of the subprocess output.\n// Using synchronous I/O does not solve this problem.\n// However, this only seems to happen when the stdout/stderr target\n// (e.g. a terminal) is being written to by many subprocesses at once, which is unlikely in real scenarios.\nexport const verboseLog = ({type, verboseMessage, fdNumber, verboseInfo, result}) => {\n\tconst verboseObject = getVerboseObject({type, result, verboseInfo});\n\tconst printedLines = getPrintedLines(verboseMessage, verboseObject);\n\tconst finalLines = applyVerboseOnLines(printedLines, verboseInfo, fdNumber);\n\tif (finalLines !== '') {\n\t\tconsole.warn(finalLines.slice(0, -1));\n\t}\n};\n\nconst getVerboseObject = ({\n\ttype,\n\tresult,\n\tverboseInfo: {escapedCommand, commandId, rawOptions: {piped = false, ...options}},\n}) => ({\n\ttype,\n\tescapedCommand,\n\tcommandId: `${commandId}`,\n\ttimestamp: new Date(),\n\tpiped,\n\tresult,\n\toptions,\n});\n\nconst getPrintedLines = (verboseMessage, verboseObject) => verboseMessage\n\t.split('\\n')\n\t.map(message => getPrintedLine({...verboseObject, message}));\n\nconst getPrintedLine = verboseObject => {\n\tconst verboseLine = defaultVerboseFunction(verboseObject);\n\treturn {verboseLine, verboseObject};\n};\n\n// Serialize any type to a line string, for logging\nexport const serializeVerboseMessage = message => {\n\tconst messageString = typeof message === 'string' ? message : inspect(message);\n\tconst escapedMessage = escapeLines(messageString);\n\treturn escapedMessage.replaceAll('\\t', ' '.repeat(TAB_SIZE));\n};\n\n// Same as `util.inspect()`\nconst TAB_SIZE = 2;\n", "import {platform} from 'node:process';\nimport {stripVTControlCharacters} from 'node:util';\n\n// Compute `result.command` and `result.escapedCommand`\nexport const joinCommand = (filePath, rawArguments) => {\n\tconst fileAndArguments = [filePath, ...rawArguments];\n\tconst command = fileAndArguments.join(' ');\n\tconst escapedCommand = fileAndArguments\n\t\t.map(fileAndArgument => quoteString(escapeControlCharacters(fileAndArgument)))\n\t\t.join(' ');\n\treturn {command, escapedCommand};\n};\n\n// Remove ANSI sequences and escape control characters and newlines\nexport const escapeLines = lines => stripVTControlCharacters(lines)\n\t.split('\\n')\n\t.map(line => escapeControlCharacters(line))\n\t.join('\\n');\n\nconst escapeControlCharacters = line => line.replaceAll(SPECIAL_CHAR_REGEXP, character => escapeControlCharacter(character));\n\nconst escapeControlCharacter = character => {\n\tconst commonEscape = COMMON_ESCAPES[character];\n\tif (commonEscape !== undefined) {\n\t\treturn commonEscape;\n\t}\n\n\tconst codepoint = character.codePointAt(0);\n\tconst codepointHex = codepoint.toString(16);\n\treturn codepoint <= ASTRAL_START\n\t\t? `\\\\u${codepointHex.padStart(4, '0')}`\n\t\t: `\\\\U${codepointHex}`;\n};\n\n// Characters that would create issues when printed are escaped using the \\u or \\U notation.\n// Those include control characters and newlines.\n// The \\u and \\U notation is Bash specific, but there is no way to do this in a shell-agnostic way.\n// Some shells do not even have a way to print those characters in an escaped fashion.\n// Therefore, we prioritize printing those safely, instead of allowing those to be copy-pasted.\n// List of Unicode character categories: https://www.fileformat.info/info/unicode/category/index.htm\nconst getSpecialCharRegExp = () => {\n\ttry {\n\t\t// This throws when using Node.js without ICU support.\n\t\t// When using a RegExp literal, this would throw at parsing-time, instead of runtime.\n\t\t// eslint-disable-next-line prefer-regex-literals\n\t\treturn new RegExp('\\\\p{Separator}|\\\\p{Other}', 'gu');\n\t} catch {\n\t\t// Similar to the above RegExp, but works even when Node.js has been built without ICU support.\n\t\t// Unlike the above RegExp, it only covers whitespaces and C0/C1 control characters.\n\t\t// It does not cover some edge cases, such as Unicode reserved characters.\n\t\t// See https://github.com/sindresorhus/execa/issues/1143\n\t\t// eslint-disable-next-line no-control-regex\n\t\treturn /[\\s\\u0000-\\u001F\\u007F-\\u009F\\u00AD]/g;\n\t}\n};\n\nconst SPECIAL_CHAR_REGEXP = getSpecialCharRegExp();\n\n// Accepted by $'...' in Bash.\n// Exclude \\a \\e \\v which are accepted in Bash but not in JavaScript (except \\v) and JSON.\nconst COMMON_ESCAPES = {\n\t' ': ' ',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t',\n};\n\n// Up until that codepoint, \\u notation can be used instead of \\U\nconst ASTRAL_START = 65_535;\n\n// Some characters are shell-specific, i.e. need to be escaped when the command is copy-pasted then run.\n// Escaping is shell-specific. We cannot know which shell is used: `process.platform` detection is not enough.\n// For example, Windows users could be using `cmd.exe`, Powershell or Bash for Windows which all use different escaping.\n// We use '...' on Unix, which is POSIX shell compliant and escape all characters but ' so this is fairly safe.\n// On Windows, we assume cmd.exe is used and escape with \"...\", which also works with Powershell.\nconst quoteString = escapedArgument => {\n\tif (NO_ESCAPE_REGEXP.test(escapedArgument)) {\n\t\treturn escapedArgument;\n\t}\n\n\treturn platform === 'win32'\n\t\t? `\"${escapedArgument.replaceAll('\"', '\"\"')}\"`\n\t\t: `'${escapedArgument.replaceAll('\\'', '\\'\\\\\\'\\'')}'`;\n};\n\nconst NO_ESCAPE_REGEXP = /^[\\w./-]+$/;\n", "import process from 'node:process';\n\nexport default function isUnicodeSupported() {\n\tconst {env} = process;\n\tconst {TERM, TERM_PROGRAM} = env;\n\n\tif (process.platform !== 'win32') {\n\t\treturn TERM !== 'linux'; // Linux console (kernel)\n\t}\n\n\treturn Boolean(env.WT_SESSION) // Windows Terminal\n\t\t|| Boolean(env.TERMINUS_SUBLIME) // Terminus (<0.2.27)\n\t\t|| env.ConEmuTask === '{cmd::Cmder}' // ConEmu and cmder\n\t\t|| TERM_PROGRAM === 'Terminus-Sublime'\n\t\t|| TERM_PROGRAM === 'vscode'\n\t\t|| TERM === 'xterm-256color'\n\t\t|| TERM === 'alacritty'\n\t\t|| TERM === 'rxvt-unicode'\n\t\t|| TERM === 'rxvt-unicode-256color'\n\t\t|| env.TERMINAL_EMULATOR === 'JetBrains-JediTerm';\n}\n", "import isUnicodeSupported from 'is-unicode-supported';\n\nconst common = {\n\tcircleQuestionMark: '(?)',\n\tquestionMarkPrefix: '(?)',\n\tsquare: '\u2588',\n\tsquareDarkShade: '\u2593',\n\tsquareMediumShade: '\u2592',\n\tsquareLightShade: '\u2591',\n\tsquareTop: '\u2580',\n\tsquareBottom: '\u2584',\n\tsquareLeft: '\u258C',\n\tsquareRight: '\u2590',\n\tsquareCenter: '\u25A0',\n\tbullet: '\u25CF',\n\tdot: '\u2024',\n\tellipsis: '\u2026',\n\tpointerSmall: '\u203A',\n\ttriangleUp: '\u25B2',\n\ttriangleUpSmall: '\u25B4',\n\ttriangleDown: '\u25BC',\n\ttriangleDownSmall: '\u25BE',\n\ttriangleLeftSmall: '\u25C2',\n\ttriangleRightSmall: '\u25B8',\n\thome: '\u2302',\n\theart: '\u2665',\n\tmusicNote: '\u266A',\n\tmusicNoteBeamed: '\u266B',\n\tarrowUp: '\u2191',\n\tarrowDown: '\u2193',\n\tarrowLeft: '\u2190',\n\tarrowRight: '\u2192',\n\tarrowLeftRight: '\u2194',\n\tarrowUpDown: '\u2195',\n\talmostEqual: '\u2248',\n\tnotEqual: '\u2260',\n\tlessOrEqual: '\u2264',\n\tgreaterOrEqual: '\u2265',\n\tidentical: '\u2261',\n\tinfinity: '\u221E',\n\tsubscriptZero: '\u2080',\n\tsubscriptOne: '\u2081',\n\tsubscriptTwo: '\u2082',\n\tsubscriptThree: '\u2083',\n\tsubscriptFour: '\u2084',\n\tsubscriptFive: '\u2085',\n\tsubscriptSix: '\u2086',\n\tsubscriptSeven: '\u2087',\n\tsubscriptEight: '\u2088',\n\tsubscriptNine: '\u2089',\n\toneHalf: '\u00BD',\n\toneThird: '\u2153',\n\toneQuarter: '\u00BC',\n\toneFifth: '\u2155',\n\toneSixth: '\u2159',\n\toneEighth: '\u215B',\n\ttwoThirds: '\u2154',\n\ttwoFifths: '\u2156',\n\tthreeQuarters: '\u00BE',\n\tthreeFifths: '\u2157',\n\tthreeEighths: '\u215C',\n\tfourFifths: '\u2158',\n\tfiveSixths: '\u215A',\n\tfiveEighths: '\u215D',\n\tsevenEighths: '\u215E',\n\tline: '\u2500',\n\tlineBold: '\u2501',\n\tlineDouble: '\u2550',\n\tlineDashed0: '\u2504',\n\tlineDashed1: '\u2505',\n\tlineDashed2: '\u2508',\n\tlineDashed3: '\u2509',\n\tlineDashed4: '\u254C',\n\tlineDashed5: '\u254D',\n\tlineDashed6: '\u2574',\n\tlineDashed7: '\u2576',\n\tlineDashed8: '\u2578',\n\tlineDashed9: '\u257A',\n\tlineDashed10: '\u257C',\n\tlineDashed11: '\u257E',\n\tlineDashed12: '\u2212',\n\tlineDashed13: '\u2013',\n\tlineDashed14: '\u2010',\n\tlineDashed15: '\u2043',\n\tlineVertical: '\u2502',\n\tlineVerticalBold: '\u2503',\n\tlineVerticalDouble: '\u2551',\n\tlineVerticalDashed0: '\u2506',\n\tlineVerticalDashed1: '\u2507',\n\tlineVerticalDashed2: '\u250A',\n\tlineVerticalDashed3: '\u250B',\n\tlineVerticalDashed4: '\u254E',\n\tlineVerticalDashed5: '\u254F',\n\tlineVerticalDashed6: '\u2575',\n\tlineVerticalDashed7: '\u2577',\n\tlineVerticalDashed8: '\u2579',\n\tlineVerticalDashed9: '\u257B',\n\tlineVerticalDashed10: '\u257D',\n\tlineVerticalDashed11: '\u257F',\n\tlineDownLeft: '\u2510',\n\tlineDownLeftArc: '\u256E',\n\tlineDownBoldLeftBold: '\u2513',\n\tlineDownBoldLeft: '\u2512',\n\tlineDownLeftBold: '\u2511',\n\tlineDownDoubleLeftDouble: '\u2557',\n\tlineDownDoubleLeft: '\u2556',\n\tlineDownLeftDouble: '\u2555',\n\tlineDownRight: '\u250C',\n\tlineDownRightArc: '\u256D',\n\tlineDownBoldRightBold: '\u250F',\n\tlineDownBoldRight: '\u250E',\n\tlineDownRightBold: '\u250D',\n\tlineDownDoubleRightDouble: '\u2554',\n\tlineDownDoubleRight: '\u2553',\n\tlineDownRightDouble: '\u2552',\n\tlineUpLeft: '\u2518',\n\tlineUpLeftArc: '\u256F',\n\tlineUpBoldLeftBold: '\u251B',\n\tlineUpBoldLeft: '\u251A',\n\tlineUpLeftBold: '\u2519',\n\tlineUpDoubleLeftDouble: '\u255D',\n\tlineUpDoubleLeft: '\u255C',\n\tlineUpLeftDouble: '\u255B',\n\tlineUpRight: '\u2514',\n\tlineUpRightArc: '\u2570',\n\tlineUpBoldRightBold: '\u2517',\n\tlineUpBoldRight: '\u2516',\n\tlineUpRightBold: '\u2515',\n\tlineUpDoubleRightDouble: '\u255A',\n\tlineUpDoubleRight: '\u2559',\n\tlineUpRightDouble: '\u2558',\n\tlineUpDownLeft: '\u2524',\n\tlineUpBoldDownBoldLeftBold: '\u252B',\n\tlineUpBoldDownBoldLeft: '\u2528',\n\tlineUpDownLeftBold: '\u2525',\n\tlineUpBoldDownLeftBold: '\u2529',\n\tlineUpDownBoldLeftBold: '\u252A',\n\tlineUpDownBoldLeft: '\u2527',\n\tlineUpBoldDownLeft: '\u2526',\n\tlineUpDoubleDownDoubleLeftDouble: '\u2563',\n\tlineUpDoubleDownDoubleLeft: '\u2562',\n\tlineUpDownLeftDouble: '\u2561',\n\tlineUpDownRight: '\u251C',\n\tlineUpBoldDownBoldRightBold: '\u2523',\n\tlineUpBoldDownBoldRight: '\u2520',\n\tlineUpDownRightBold: '\u251D',\n\tlineUpBoldDownRightBold: '\u2521',\n\tlineUpDownBoldRightBold: '\u2522',\n\tlineUpDownBoldRight: '\u251F',\n\tlineUpBoldDownRight: '\u251E',\n\tlineUpDoubleDownDoubleRightDouble: '\u2560',\n\tlineUpDoubleDownDoubleRight: '\u255F',\n\tlineUpDownRightDouble: '\u255E',\n\tlineDownLeftRight: '\u252C',\n\tlineDownBoldLeftBoldRightBold: '\u2533',\n\tlineDownLeftBoldRightBold: '\u252F',\n\tlineDownBoldLeftRight: '\u2530',\n\tlineDownBoldLeftBoldRight: '\u2531',\n\tlineDownBoldLeftRightBold: '\u2532',\n\tlineDownLeftRightBold: '\u252E',\n\tlineDownLeftBoldRight: '\u252D',\n\tlineDownDoubleLeftDoubleRightDouble: '\u2566',\n\tlineDownDoubleLeftRight: '\u2565',\n\tlineDownLeftDoubleRightDouble: '\u2564',\n\tlineUpLeftRight: '\u2534',\n\tlineUpBoldLeftBoldRightBold: '\u253B',\n\tlineUpLeftBoldRightBold: '\u2537',\n\tlineUpBoldLeftRight: '\u2538',\n\tlineUpBoldLeftBoldRight: '\u2539',\n\tlineUpBoldLeftRightBold: '\u253A',\n\tlineUpLeftRightBold: '\u2536',\n\tlineUpLeftBoldRight: '\u2535',\n\tlineUpDoubleLeftDoubleRightDouble: '\u2569',\n\tlineUpDoubleLeftRight: '\u2568',\n\tlineUpLeftDoubleRightDouble: '\u2567',\n\tlineUpDownLeftRight: '\u253C',\n\tlineUpBoldDownBoldLeftBoldRightBold: '\u254B',\n\tlineUpDownBoldLeftBoldRightBold: '\u2548',\n\tlineUpBoldDownLeftBoldRightBold: '\u2547',\n\tlineUpBoldDownBoldLeftRightBold: '\u254A',\n\tlineUpBoldDownBoldLeftBoldRight: '\u2549',\n\tlineUpBoldDownLeftRight: '\u2540',\n\tlineUpDownBoldLeftRight: '\u2541',\n\tlineUpDownLeftBoldRight: '\u253D',\n\tlineUpDownLeftRightBold: '\u253E',\n\tlineUpBoldDownBoldLeftRight: '\u2542',\n\tlineUpDownLeftBoldRightBold: '\u253F',\n\tlineUpBoldDownLeftBoldRight: '\u2543',\n\tlineUpBoldDownLeftRightBold: '\u2544',\n\tlineUpDownBoldLeftBoldRight: '\u2545',\n\tlineUpDownBoldLeftRightBold: '\u2546',\n\tlineUpDoubleDownDoubleLeftDoubleRightDouble: '\u256C',\n\tlineUpDoubleDownDoubleLeftRight: '\u256B',\n\tlineUpDownLeftDoubleRightDouble: '\u256A',\n\tlineCross: '\u2573',\n\tlineBackslash: '\u2572',\n\tlineSlash: '\u2571',\n};\n\nconst specialMainSymbols = {\n\ttick: '\u2714',\n\tinfo: '\u2139',\n\twarning: '\u26A0',\n\tcross: '\u2718',\n\tsquareSmall: '\u25FB',\n\tsquareSmallFilled: '\u25FC',\n\tcircle: '\u25EF',\n\tcircleFilled: '\u25C9',\n\tcircleDotted: '\u25CC',\n\tcircleDouble: '\u25CE',\n\tcircleCircle: '\u24DE',\n\tcircleCross: '\u24E7',\n\tcirclePipe: '\u24BE',\n\tradioOn: '\u25C9',\n\tradioOff: '\u25EF',\n\tcheckboxOn: '\u2612',\n\tcheckboxOff: '\u2610',\n\tcheckboxCircleOn: '\u24E7',\n\tcheckboxCircleOff: '\u24BE',\n\tpointer: '\u276F',\n\ttriangleUpOutline: '\u25B3',\n\ttriangleLeft: '\u25C0',\n\ttriangleRight: '\u25B6',\n\tlozenge: '\u25C6',\n\tlozengeOutline: '\u25C7',\n\thamburger: '\u2630',\n\tsmiley: '\u32E1',\n\tmustache: '\u0DF4',\n\tstar: '\u2605',\n\tplay: '\u25B6',\n\tnodejs: '\u2B22',\n\toneSeventh: '\u2150',\n\toneNinth: '\u2151',\n\toneTenth: '\u2152',\n};\n\nconst specialFallbackSymbols = {\n\ttick: '\u221A',\n\tinfo: 'i',\n\twarning: '\u203C',\n\tcross: '\u00D7',\n\tsquareSmall: '\u25A1',\n\tsquareSmallFilled: '\u25A0',\n\tcircle: '( )',\n\tcircleFilled: '(*)',\n\tcircleDotted: '( )',\n\tcircleDouble: '( )',\n\tcircleCircle: '(\u25CB)',\n\tcircleCross: '(\u00D7)',\n\tcirclePipe: '(\u2502)',\n\tradioOn: '(*)',\n\tradioOff: '( )',\n\tcheckboxOn: '[\u00D7]',\n\tcheckboxOff: '[ ]',\n\tcheckboxCircleOn: '(\u00D7)',\n\tcheckboxCircleOff: '( )',\n\tpointer: '>',\n\ttriangleUpOutline: '\u2206',\n\ttriangleLeft: '\u25C4',\n\ttriangleRight: '\u25BA',\n\tlozenge: '\u2666',\n\tlozengeOutline: '\u25CA',\n\thamburger: '\u2261',\n\tsmiley: '\u263A',\n\tmustache: '\u250C\u2500\u2510',\n\tstar: '\u2736',\n\tplay: '\u25BA',\n\tnodejs: '\u2666',\n\toneSeventh: '1/7',\n\toneNinth: '1/9',\n\toneTenth: '1/10',\n};\n\nexport const mainSymbols = {...common, ...specialMainSymbols};\nexport const fallbackSymbols = {...common, ...specialFallbackSymbols};\n\nconst shouldUseMain = isUnicodeSupported();\nconst figures = shouldUseMain ? mainSymbols : fallbackSymbols;\nexport default figures;\n\nconst replacements = Object.entries(specialMainSymbols);\n\n// On terminals which do not support Unicode symbols, substitute them to other symbols\nexport const replaceSymbols = (string, {useFallback = !shouldUseMain} = {}) => {\n\tif (useFallback) {\n\t\tfor (const [key, mainSymbol] of replacements) {\n\t\t\tstring = string.replaceAll(mainSymbol, fallbackSymbols[key]);\n\t\t}\n\t}\n\n\treturn string;\n};\n", "import tty from 'node:tty';\n\n// eslint-disable-next-line no-warning-comments\n// TODO: Use a better method when it's added to Node.js (https://github.com/nodejs/node/pull/40240)\n// Lots of optionals here to support Deno.\nconst hasColors = tty?.WriteStream?.prototype?.hasColors?.() ?? false;\n\nconst format = (open, close) => {\n\tif (!hasColors) {\n\t\treturn input => input;\n\t}\n\n\tconst openCode = `\\u001B[${open}m`;\n\tconst closeCode = `\\u001B[${close}m`;\n\n\treturn input => {\n\t\tconst string = input + ''; // eslint-disable-line no-implicit-coercion -- This is faster.\n\t\tlet index = string.indexOf(closeCode);\n\n\t\tif (index === -1) {\n\t\t\t// Note: Intentionally not using string interpolation for performance reasons.\n\t\t\treturn openCode + string + closeCode;\n\t\t}\n\n\t\t// Handle nested colors.\n\n\t\t// We could have done this, but it's too slow (as of Node.js 22).\n\t\t// return openCode + string.replaceAll(closeCode, (close === 22 ? closeCode : '') + openCode) + closeCode;\n\n\t\tlet result = openCode;\n\t\tlet lastIndex = 0;\n\n\t\t// SGR 22 resets both bold (1) and dim (2). When we encounter a nested\n\t\t// close for styles that use 22, we need to re-open the outer style.\n\t\tconst reopenOnNestedClose = close === 22;\n\t\tconst replaceCode = (reopenOnNestedClose ? closeCode : '') + openCode;\n\n\t\twhile (index !== -1) {\n\t\t\tresult += string.slice(lastIndex, index) + replaceCode;\n\t\t\tlastIndex = index + closeCode.length;\n\t\t\tindex = string.indexOf(closeCode, lastIndex);\n\t\t}\n\n\t\tresult += string.slice(lastIndex) + closeCode;\n\n\t\treturn result;\n\t};\n};\n\nexport const reset = format(0, 0);\nexport const bold = format(1, 22);\nexport const dim = format(2, 22);\nexport const italic = format(3, 23);\nexport const underline = format(4, 24);\nexport const overline = format(53, 55);\nexport const inverse = format(7, 27);\nexport const hidden = format(8, 28);\nexport const strikethrough = format(9, 29);\n\nexport const black = format(30, 39);\nexport const red = format(31, 39);\nexport const green = format(32, 39);\nexport const yellow = format(33, 39);\nexport const blue = format(34, 39);\nexport const magenta = format(35, 39);\nexport const cyan = format(36, 39);\nexport const white = format(37, 39);\nexport const gray = format(90, 39);\n\nexport const bgBlack = format(40, 49);\nexport const bgRed = format(41, 49);\nexport const bgGreen = format(42, 49);\nexport const bgYellow = format(43, 49);\nexport const bgBlue = format(44, 49);\nexport const bgMagenta = format(45, 49);\nexport const bgCyan = format(46, 49);\nexport const bgWhite = format(47, 49);\nexport const bgGray = format(100, 49);\n\nexport const redBright = format(91, 39);\nexport const greenBright = format(92, 39);\nexport const yellowBright = format(93, 39);\nexport const blueBright = format(94, 39);\nexport const magentaBright = format(95, 39);\nexport const cyanBright = format(96, 39);\nexport const whiteBright = format(97, 39);\n\nexport const bgRedBright = format(101, 49);\nexport const bgGreenBright = format(102, 49);\nexport const bgYellowBright = format(103, 49);\nexport const bgBlueBright = format(104, 49);\nexport const bgMagentaBright = format(105, 49);\nexport const bgCyanBright = format(106, 49);\nexport const bgWhiteBright = format(107, 49);\n", "import figures from 'figures';\nimport {\n\tgray,\n\tbold,\n\tredBright,\n\tyellowBright,\n} from 'yoctocolors';\n\n// Default when `verbose` is not a function\nexport const defaultVerboseFunction = ({\n\ttype,\n\tmessage,\n\ttimestamp,\n\tpiped,\n\tcommandId,\n\tresult: {failed = false} = {},\n\toptions: {reject = true},\n}) => {\n\tconst timestampString = serializeTimestamp(timestamp);\n\tconst icon = ICONS[type]({failed, reject, piped});\n\tconst color = COLORS[type]({reject});\n\treturn `${gray(`[${timestampString}]`)} ${gray(`[${commandId}]`)} ${color(icon)} ${color(message)}`;\n};\n\n// Prepending the timestamp allows debugging the slow paths of a subprocess\nconst serializeTimestamp = timestamp => `${padField(timestamp.getHours(), 2)}:${padField(timestamp.getMinutes(), 2)}:${padField(timestamp.getSeconds(), 2)}.${padField(timestamp.getMilliseconds(), 3)}`;\n\nconst padField = (field, padding) => String(field).padStart(padding, '0');\n\nconst getFinalIcon = ({failed, reject}) => {\n\tif (!failed) {\n\t\treturn figures.tick;\n\t}\n\n\treturn reject ? figures.cross : figures.warning;\n};\n\nconst ICONS = {\n\tcommand: ({piped}) => piped ? '|' : '$',\n\toutput: () => ' ',\n\tipc: () => '*',\n\terror: getFinalIcon,\n\tduration: getFinalIcon,\n};\n\nconst identity = string => string;\n\nconst COLORS = {\n\tcommand: () => bold,\n\toutput: () => identity,\n\tipc: () => identity,\n\terror: ({reject}) => reject ? redBright : yellowBright,\n\tduration: () => gray,\n};\n", "import {getVerboseFunction} from './values.js';\n\n// Apply the `verbose` function on each line\nexport const applyVerboseOnLines = (printedLines, verboseInfo, fdNumber) => {\n\tconst verboseFunction = getVerboseFunction(verboseInfo, fdNumber);\n\treturn printedLines\n\t\t.map(({verboseLine, verboseObject}) => applyVerboseFunction(verboseLine, verboseObject, verboseFunction))\n\t\t.filter(printedLine => printedLine !== undefined)\n\t\t.map(printedLine => appendNewline(printedLine))\n\t\t.join('');\n};\n\nconst applyVerboseFunction = (verboseLine, verboseObject, verboseFunction) => {\n\tif (verboseFunction === undefined) {\n\t\treturn verboseLine;\n\t}\n\n\tconst printedLine = verboseFunction(verboseLine, verboseObject);\n\tif (typeof printedLine === 'string') {\n\t\treturn printedLine;\n\t}\n};\n\nconst appendNewline = printedLine => printedLine.endsWith('\\n')\n\t? printedLine\n\t: `${printedLine}\\n`;\n", "import {isVerbose} from './values.js';\nimport {verboseLog} from './log.js';\n\n// When `verbose` is `short|full|custom`, print each command\nexport const logCommand = (escapedCommand, verboseInfo) => {\n\tif (!isVerbose(verboseInfo)) {\n\t\treturn;\n\t}\n\n\tverboseLog({\n\t\ttype: 'command',\n\t\tverboseMessage: escapedCommand,\n\t\tverboseInfo,\n\t});\n};\n", "import {isVerbose, VERBOSE_VALUES, isVerboseFunction} from './values.js';\n\n// Information computed before spawning, used by the `verbose` option\nexport const getVerboseInfo = (verbose, escapedCommand, rawOptions) => {\n\tvalidateVerbose(verbose);\n\tconst commandId = getCommandId(verbose);\n\treturn {\n\t\tverbose,\n\t\tescapedCommand,\n\t\tcommandId,\n\t\trawOptions,\n\t};\n};\n\nconst getCommandId = verbose => isVerbose({verbose}) ? COMMAND_ID++ : undefined;\n\n// Prepending the `pid` is useful when multiple commands print their output at the same time.\n// However, we cannot use the real PID since this is not available with `child_process.spawnSync()`.\n// Also, we cannot use the real PID if we want to print it before `child_process.spawn()` is run.\n// As a pro, it is shorter than a normal PID and never re-uses the same id.\n// As a con, it cannot be used to send signals.\nlet COMMAND_ID = 0n;\n\nconst validateVerbose = verbose => {\n\tfor (const fdVerbose of verbose) {\n\t\tif (fdVerbose === false) {\n\t\t\tthrow new TypeError('The \"verbose: false\" option was renamed to \"verbose: \\'none\\'\".');\n\t\t}\n\n\t\tif (fdVerbose === true) {\n\t\t\tthrow new TypeError('The \"verbose: true\" option was renamed to \"verbose: \\'short\\'\".');\n\t\t}\n\n\t\tif (!VERBOSE_VALUES.includes(fdVerbose) && !isVerboseFunction(fdVerbose)) {\n\t\t\tconst allowedValues = VERBOSE_VALUES.map(allowedValue => `'${allowedValue}'`).join(', ');\n\t\t\tthrow new TypeError(`The \"verbose\" option must not be ${fdVerbose}. Allowed values are: ${allowedValues} or a function.`);\n\t\t}\n\t}\n};\n", "import {hrtime} from 'node:process';\n\n// Start counting time before spawning the subprocess\nexport const getStartTime = () => hrtime.bigint();\n\n// Compute duration after the subprocess ended.\n// Printed by the `verbose` option.\nexport const getDurationMs = startTime => Number(hrtime.bigint() - startTime) / 1e6;\n", "import {logCommand} from '../verbose/start.js';\nimport {getVerboseInfo} from '../verbose/info.js';\nimport {getStartTime} from '../return/duration.js';\nimport {joinCommand} from './escape.js';\nimport {normalizeFdSpecificOption} from './specific.js';\n\n// Compute `result.command`, `result.escapedCommand` and `verbose`-related information\nexport const handleCommand = (filePath, rawArguments, rawOptions) => {\n\tconst startTime = getStartTime();\n\tconst {command, escapedCommand} = joinCommand(filePath, rawArguments);\n\tconst verbose = normalizeFdSpecificOption(rawOptions, 'verbose');\n\tconst verboseInfo = getVerboseInfo(verbose, escapedCommand, {...rawOptions});\n\tlogCommand(escapedCommand, verboseInfo);\n\treturn {\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstartTime,\n\t\tverboseInfo,\n\t};\n};\n", "import path from 'node:path';\nimport process from 'node:process';\nimport crossSpawn from 'cross-spawn';\nimport {npmRunPathEnv} from 'npm-run-path';\nimport {normalizeForceKillAfterDelay} from '../terminate/kill.js';\nimport {normalizeKillSignal} from '../terminate/signal.js';\nimport {validateCancelSignal} from '../terminate/cancel.js';\nimport {validateGracefulCancel} from '../terminate/graceful.js';\nimport {validateTimeout} from '../terminate/timeout.js';\nimport {handleNodeOption} from '../methods/node.js';\nimport {validateIpcInputOption} from '../ipc/ipc-input.js';\nimport {validateEncoding, BINARY_ENCODINGS} from './encoding-option.js';\nimport {normalizeCwd} from './cwd.js';\nimport {normalizeFileUrl} from './file-url.js';\nimport {normalizeFdSpecificOptions} from './specific.js';\n\n// Normalize the options object, and sometimes also the file paths and arguments.\n// Applies default values, validate allowed options, normalize them.\nexport const normalizeOptions = (filePath, rawArguments, rawOptions) => {\n\trawOptions.cwd = normalizeCwd(rawOptions.cwd);\n\tconst [processedFile, processedArguments, processedOptions] = handleNodeOption(filePath, rawArguments, rawOptions);\n\n\tconst {command: file, args: commandArguments, options: initialOptions} = crossSpawn._parse(processedFile, processedArguments, processedOptions);\n\n\tconst fdOptions = normalizeFdSpecificOptions(initialOptions);\n\tconst options = addDefaultOptions(fdOptions);\n\tvalidateTimeout(options);\n\tvalidateEncoding(options);\n\tvalidateIpcInputOption(options);\n\tvalidateCancelSignal(options);\n\tvalidateGracefulCancel(options);\n\toptions.shell = normalizeFileUrl(options.shell);\n\toptions.env = getEnv(options);\n\toptions.killSignal = normalizeKillSignal(options.killSignal);\n\toptions.forceKillAfterDelay = normalizeForceKillAfterDelay(options.forceKillAfterDelay);\n\toptions.lines = options.lines.map((lines, fdNumber) => lines && !BINARY_ENCODINGS.has(options.encoding) && options.buffer[fdNumber]);\n\n\tif (process.platform === 'win32' && path.basename(file, '.exe') === 'cmd') {\n\t\t// #116\n\t\tcommandArguments.unshift('/q');\n\t}\n\n\treturn {file, commandArguments, options};\n};\n\nconst addDefaultOptions = ({\n\textendEnv = true,\n\tpreferLocal = false,\n\tcwd,\n\tlocalDir: localDirectory = cwd,\n\tencoding = 'utf8',\n\treject = true,\n\tcleanup = true,\n\tall = false,\n\twindowsHide = true,\n\tkillSignal = 'SIGTERM',\n\tforceKillAfterDelay = true,\n\tgracefulCancel = false,\n\tipcInput,\n\tipc = ipcInput !== undefined || gracefulCancel,\n\tserialization = 'advanced',\n\t...options\n}) => ({\n\t...options,\n\textendEnv,\n\tpreferLocal,\n\tcwd,\n\tlocalDirectory,\n\tencoding,\n\treject,\n\tcleanup,\n\tall,\n\twindowsHide,\n\tkillSignal,\n\tforceKillAfterDelay,\n\tgracefulCancel,\n\tipcInput,\n\tipc,\n\tserialization,\n});\n\nconst getEnv = ({env: envOption, extendEnv, preferLocal, node, localDirectory, nodePath}) => {\n\tconst env = extendEnv ? {...process.env, ...envOption} : envOption;\n\n\tif (preferLocal || node) {\n\t\treturn npmRunPathEnv({\n\t\t\tenv,\n\t\t\tcwd: localDirectory,\n\t\t\texecPath: nodePath,\n\t\t\tpreferLocal,\n\t\t\taddExecPath: node,\n\t\t});\n\t}\n\n\treturn env;\n};\n", "import process from 'node:process';\nimport path from 'node:path';\nimport pathKey from 'path-key';\nimport {toPath, traversePathUp} from 'unicorn-magic';\n\nexport const npmRunPath = ({\n\tcwd = process.cwd(),\n\tpath: pathOption = process.env[pathKey()],\n\tpreferLocal = true,\n\texecPath = process.execPath,\n\taddExecPath = true,\n} = {}) => {\n\tconst cwdPath = path.resolve(toPath(cwd));\n\tconst result = [];\n\tconst pathParts = pathOption.split(path.delimiter);\n\n\tif (preferLocal) {\n\t\tapplyPreferLocal(result, pathParts, cwdPath);\n\t}\n\n\tif (addExecPath) {\n\t\tapplyExecPath(result, pathParts, execPath, cwdPath);\n\t}\n\n\treturn pathOption === '' || pathOption === path.delimiter\n\t\t? `${result.join(path.delimiter)}${pathOption}`\n\t\t: [...result, pathOption].join(path.delimiter);\n};\n\nconst applyPreferLocal = (result, pathParts, cwdPath) => {\n\tfor (const directory of traversePathUp(cwdPath)) {\n\t\tconst pathPart = path.join(directory, 'node_modules/.bin');\n\t\tif (!pathParts.includes(pathPart)) {\n\t\t\tresult.push(pathPart);\n\t\t}\n\t}\n};\n\n// Ensure the running `node` binary is used\nconst applyExecPath = (result, pathParts, execPath, cwdPath) => {\n\tconst pathPart = path.resolve(cwdPath, toPath(execPath), '..');\n\tif (!pathParts.includes(pathPart)) {\n\t\tresult.push(pathPart);\n\t}\n};\n\nexport const npmRunPathEnv = ({env = process.env, ...options} = {}) => {\n\tenv = {...env};\n\n\tconst pathName = pathKey({env});\n\toptions.path = env[pathName];\n\tenv[pathName] = npmRunPath(options);\n\n\treturn env;\n};\n", "export default function pathKey(options = {}) {\n\tconst {\n\t\tenv = process.env,\n\t\tplatform = process.platform\n\t} = options;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(env).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n}\n", "import {promisify} from 'node:util';\nimport {execFile as execFileCallback, execFileSync as execFileSyncOriginal} from 'node:child_process';\nimport path from 'node:path';\nimport {fileURLToPath} from 'node:url';\n\nconst execFileOriginal = promisify(execFileCallback);\n\nexport function toPath(urlOrPath) {\n\treturn urlOrPath instanceof URL ? fileURLToPath(urlOrPath) : urlOrPath;\n}\n\nexport function rootDirectory(pathInput) {\n\treturn path.parse(toPath(pathInput)).root;\n}\n\nexport function traversePathUp(startPath) {\n\treturn {\n\t\t* [Symbol.iterator]() {\n\t\t\tlet currentPath = path.resolve(toPath(startPath));\n\t\t\tlet previousPath;\n\n\t\t\twhile (previousPath !== currentPath) {\n\t\t\t\tyield currentPath;\n\t\t\t\tpreviousPath = currentPath;\n\t\t\t\tcurrentPath = path.resolve(currentPath, '..');\n\t\t\t}\n\t\t},\n\t};\n}\n\nconst TEN_MEGABYTES_IN_BYTES = 10 * 1024 * 1024;\n\nexport async function execFile(file, arguments_, options = {}) {\n\treturn execFileOriginal(file, arguments_, {\n\t\tmaxBuffer: TEN_MEGABYTES_IN_BYTES,\n\t\t...options,\n\t});\n}\n\nexport function execFileSync(file, arguments_ = [], options = {}) {\n\treturn execFileSyncOriginal(file, arguments_, {\n\t\tmaxBuffer: TEN_MEGABYTES_IN_BYTES,\n\t\tencoding: 'utf8',\n\t\tstdio: 'pipe',\n\t\t...options,\n\t});\n}\n\nexport * from './default.js';\n", "import {setTimeout} from 'node:timers/promises';\nimport {isErrorInstance} from '../return/final-error.js';\nimport {normalizeSignalArgument} from './signal.js';\n\n// Normalize the `forceKillAfterDelay` option\nexport const normalizeForceKillAfterDelay = forceKillAfterDelay => {\n\tif (forceKillAfterDelay === false) {\n\t\treturn forceKillAfterDelay;\n\t}\n\n\tif (forceKillAfterDelay === true) {\n\t\treturn DEFAULT_FORCE_KILL_TIMEOUT;\n\t}\n\n\tif (!Number.isFinite(forceKillAfterDelay) || forceKillAfterDelay < 0) {\n\t\tthrow new TypeError(`Expected the \\`forceKillAfterDelay\\` option to be a non-negative integer, got \\`${forceKillAfterDelay}\\` (${typeof forceKillAfterDelay})`);\n\t}\n\n\treturn forceKillAfterDelay;\n};\n\nconst DEFAULT_FORCE_KILL_TIMEOUT = 1000 * 5;\n\n// Monkey-patches `subprocess.kill()` to add `forceKillAfterDelay` behavior and `.kill(error)`\nexport const subprocessKill = (\n\t{kill, options: {forceKillAfterDelay, killSignal}, onInternalError, context, controller},\n\tsignalOrError,\n\terrorArgument,\n) => {\n\tconst {signal, error} = parseKillArguments(signalOrError, errorArgument, killSignal);\n\temitKillError(error, onInternalError);\n\tconst killResult = kill(signal);\n\tsetKillTimeout({\n\t\tkill,\n\t\tsignal,\n\t\tforceKillAfterDelay,\n\t\tkillSignal,\n\t\tkillResult,\n\t\tcontext,\n\t\tcontroller,\n\t});\n\treturn killResult;\n};\n\nconst parseKillArguments = (signalOrError, errorArgument, killSignal) => {\n\tconst [signal = killSignal, error] = isErrorInstance(signalOrError)\n\t\t? [undefined, signalOrError]\n\t\t: [signalOrError, errorArgument];\n\n\tif (typeof signal !== 'string' && !Number.isInteger(signal)) {\n\t\tthrow new TypeError(`The first argument must be an error instance or a signal name string/integer: ${String(signal)}`);\n\t}\n\n\tif (error !== undefined && !isErrorInstance(error)) {\n\t\tthrow new TypeError(`The second argument is optional. If specified, it must be an error instance: ${error}`);\n\t}\n\n\treturn {signal: normalizeSignalArgument(signal), error};\n};\n\n// Fails right away when calling `subprocess.kill(error)`.\n// Does not wait for actual signal termination.\n// Uses a deferred promise instead of the `error` event on the subprocess, as this is less intrusive.\nconst emitKillError = (error, onInternalError) => {\n\tif (error !== undefined) {\n\t\tonInternalError.reject(error);\n\t}\n};\n\nconst setKillTimeout = async ({kill, signal, forceKillAfterDelay, killSignal, killResult, context, controller}) => {\n\tif (signal === killSignal && killResult) {\n\t\tkillOnTimeout({\n\t\t\tkill,\n\t\t\tforceKillAfterDelay,\n\t\t\tcontext,\n\t\t\tcontrollerSignal: controller.signal,\n\t\t});\n\t}\n};\n\n// Forcefully terminate a subprocess after a timeout\nexport const killOnTimeout = async ({kill, forceKillAfterDelay, context, controllerSignal}) => {\n\tif (forceKillAfterDelay === false) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait setTimeout(forceKillAfterDelay, undefined, {signal: controllerSignal});\n\t\tif (kill('SIGKILL')) {\n\t\t\tcontext.isForcefullyTerminated ??= true;\n\t\t}\n\t} catch {}\n};\n", "// When the subprocess fails, this is the error instance being returned.\n// If another error instance is being thrown, it is kept as `error.cause`.\nexport const getFinalError = (originalError, message, isSync) => {\n\tconst ErrorClass = isSync ? ExecaSyncError : ExecaError;\n\tconst options = originalError instanceof DiscardedError ? {} : {cause: originalError};\n\treturn new ErrorClass(message, options);\n};\n\n// Indicates that the error is used only to interrupt control flow, but not in the return value\nexport class DiscardedError extends Error {}\n\n// Proper way to set `error.name`: it should be inherited and non-enumerable\nconst setErrorName = (ErrorClass, value) => {\n\tObject.defineProperty(ErrorClass.prototype, 'name', {\n\t\tvalue,\n\t\twritable: true,\n\t\tenumerable: false,\n\t\tconfigurable: true,\n\t});\n\tObject.defineProperty(ErrorClass.prototype, execaErrorSymbol, {\n\t\tvalue: true,\n\t\twritable: false,\n\t\tenumerable: false,\n\t\tconfigurable: false,\n\t});\n};\n\n// Unlike `instanceof`, this works across realms\nexport const isExecaError = error => isErrorInstance(error) && execaErrorSymbol in error;\n\nconst execaErrorSymbol = Symbol('isExecaError');\n\nexport const isErrorInstance = value => Object.prototype.toString.call(value) === '[object Error]';\n\n// We use two different Error classes for async/sync methods since they have slightly different shape and types\nexport class ExecaError extends Error {}\nsetErrorName(ExecaError, ExecaError.name);\n\nexport class ExecaSyncError extends Error {}\nsetErrorName(ExecaSyncError, ExecaSyncError.name);\n", "import {constants} from 'node:os';\nimport {signalsByName} from 'human-signals';\n\n// Normalize signals for comparison purpose.\n// Also validate the signal exists.\nexport const normalizeKillSignal = killSignal => {\n\tconst optionName = 'option `killSignal`';\n\tif (killSignal === 0) {\n\t\tthrow new TypeError(`Invalid ${optionName}: 0 cannot be used.`);\n\t}\n\n\treturn normalizeSignal(killSignal, optionName);\n};\n\nexport const normalizeSignalArgument = signal => signal === 0\n\t? signal\n\t: normalizeSignal(signal, '`subprocess.kill()`\\'s argument');\n\nconst normalizeSignal = (signalNameOrInteger, optionName) => {\n\tif (Number.isInteger(signalNameOrInteger)) {\n\t\treturn normalizeSignalInteger(signalNameOrInteger, optionName);\n\t}\n\n\tif (typeof signalNameOrInteger === 'string') {\n\t\treturn normalizeSignalName(signalNameOrInteger, optionName);\n\t}\n\n\tthrow new TypeError(`Invalid ${optionName} ${String(signalNameOrInteger)}: it must be a string or an integer.\\n${getAvailableSignals()}`);\n};\n\nconst normalizeSignalInteger = (signalInteger, optionName) => {\n\tif (signalsIntegerToName.has(signalInteger)) {\n\t\treturn signalsIntegerToName.get(signalInteger);\n\t}\n\n\tthrow new TypeError(`Invalid ${optionName} ${signalInteger}: this signal integer does not exist.\\n${getAvailableSignals()}`);\n};\n\nconst getSignalsIntegerToName = () => new Map(Object.entries(constants.signals)\n\t.reverse()\n\t.map(([signalName, signalInteger]) => [signalInteger, signalName]));\n\nconst signalsIntegerToName = getSignalsIntegerToName();\n\nconst normalizeSignalName = (signalName, optionName) => {\n\tif (signalName in constants.signals) {\n\t\treturn signalName;\n\t}\n\n\tif (signalName.toUpperCase() in constants.signals) {\n\t\tthrow new TypeError(`Invalid ${optionName} '${signalName}': please rename it to '${signalName.toUpperCase()}'.`);\n\t}\n\n\tthrow new TypeError(`Invalid ${optionName} '${signalName}': this signal name does not exist.\\n${getAvailableSignals()}`);\n};\n\nconst getAvailableSignals = () => `Available signal names: ${getAvailableSignalNames()}.\nAvailable signal numbers: ${getAvailableSignalIntegers()}.`;\n\nconst getAvailableSignalNames = () => Object.keys(constants.signals)\n\t.sort()\n\t.map(signalName => `'${signalName}'`)\n\t.join(', ');\n\nconst getAvailableSignalIntegers = () => [...new Set(Object.values(constants.signals)\n\t.sort((signalInteger, signalIntegerTwo) => signalInteger - signalIntegerTwo))]\n\t.join(', ');\n\n// Human-friendly description of a signal\nexport const getSignalDescription = signal => signalsByName[signal].description;\n", "import{constants}from\"node:os\";\n\nimport{SIGRTMAX}from\"./realtime.js\";\nimport{getSignals}from\"./signals.js\";\n\n\n\nconst getSignalsByName=()=>{\nconst signals=getSignals();\nreturn Object.fromEntries(signals.map(getSignalByName))\n};\n\nconst getSignalByName=({\nname,\nnumber,\ndescription,\nsupported,\naction,\nforced,\nstandard\n})=>[name,{name,number,description,supported,action,forced,standard}];\n\nexport const signalsByName=getSignalsByName();\n\n\n\n\nconst getSignalsByNumber=()=>{\nconst signals=getSignals();\nconst length=SIGRTMAX+1;\nconst signalsA=Array.from({length},(value,number)=>\ngetSignalByNumber(number,signals)\n);\nreturn Object.assign({},...signalsA)\n};\n\nconst getSignalByNumber=(number,signals)=>{\nconst signal=findSignalByNumber(number,signals);\n\nif(signal===undefined){\nreturn{}\n}\n\nconst{name,description,supported,action,forced,standard}=signal;\nreturn{\n[number]:{\nname,\nnumber,\ndescription,\nsupported,\naction,\nforced,\nstandard\n}\n}\n};\n\n\n\nconst findSignalByNumber=(number,signals)=>{\nconst signal=signals.find(({name})=>constants.signals[name]===number);\n\nif(signal!==undefined){\nreturn signal\n}\n\nreturn signals.find((signalA)=>signalA.number===number)\n};\n\nexport const signalsByNumber=getSignalsByNumber();", "\nexport const getRealtimeSignals=()=>{\nconst length=SIGRTMAX-SIGRTMIN+1;\nreturn Array.from({length},getRealtimeSignal)\n};\n\nconst getRealtimeSignal=(value,index)=>({\nname:`SIGRT${index+1}`,\nnumber:SIGRTMIN+index,\naction:\"terminate\",\ndescription:\"Application-specific signal (realtime)\",\nstandard:\"posix\"\n});\n\nconst SIGRTMIN=34;\nexport const SIGRTMAX=64;", "import{constants}from\"node:os\";\n\nimport{SIGNALS}from\"./core.js\";\nimport{getRealtimeSignals}from\"./realtime.js\";\n\n\n\nexport const getSignals=()=>{\nconst realtimeSignals=getRealtimeSignals();\nconst signals=[...SIGNALS,...realtimeSignals].map(normalizeSignal);\nreturn signals\n};\n\n\n\n\n\n\n\nconst normalizeSignal=({\nname,\nnumber:defaultNumber,\ndescription,\naction,\nforced=false,\nstandard\n})=>{\nconst{\nsignals:{[name]:constantSignal}\n}=constants;\nconst supported=constantSignal!==undefined;\nconst number=supported?constantSignal:defaultNumber;\nreturn{name,number,description,supported,action,forced,standard}\n};", "\n\nexport const SIGNALS=[\n{\nname:\"SIGHUP\",\nnumber:1,\naction:\"terminate\",\ndescription:\"Terminal closed\",\nstandard:\"posix\"\n},\n{\nname:\"SIGINT\",\nnumber:2,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-C\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGQUIT\",\nnumber:3,\naction:\"core\",\ndescription:\"User interruption with CTRL-\\\\\",\nstandard:\"posix\"\n},\n{\nname:\"SIGILL\",\nnumber:4,\naction:\"core\",\ndescription:\"Invalid machine instruction\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGTRAP\",\nnumber:5,\naction:\"core\",\ndescription:\"Debugger breakpoint\",\nstandard:\"posix\"\n},\n{\nname:\"SIGABRT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGIOT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGBUS\",\nnumber:7,\naction:\"core\",\ndescription:\n\"Bus error due to misaligned, non-existing address or paging error\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGEMT\",\nnumber:7,\naction:\"terminate\",\ndescription:\"Command should be emulated but is not implemented\",\nstandard:\"other\"\n},\n{\nname:\"SIGFPE\",\nnumber:8,\naction:\"core\",\ndescription:\"Floating point arithmetic error\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGKILL\",\nnumber:9,\naction:\"terminate\",\ndescription:\"Forced termination\",\nstandard:\"posix\",\nforced:true\n},\n{\nname:\"SIGUSR1\",\nnumber:10,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"\n},\n{\nname:\"SIGSEGV\",\nnumber:11,\naction:\"core\",\ndescription:\"Segmentation fault\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGUSR2\",\nnumber:12,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"\n},\n{\nname:\"SIGPIPE\",\nnumber:13,\naction:\"terminate\",\ndescription:\"Broken pipe or socket\",\nstandard:\"posix\"\n},\n{\nname:\"SIGALRM\",\nnumber:14,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"posix\"\n},\n{\nname:\"SIGTERM\",\nnumber:15,\naction:\"terminate\",\ndescription:\"Termination\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGSTKFLT\",\nnumber:16,\naction:\"terminate\",\ndescription:\"Stack is empty or overflowed\",\nstandard:\"other\"\n},\n{\nname:\"SIGCHLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"posix\"\n},\n{\nname:\"SIGCLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"other\"\n},\n{\nname:\"SIGCONT\",\nnumber:18,\naction:\"unpause\",\ndescription:\"Unpaused\",\nstandard:\"posix\",\nforced:true\n},\n{\nname:\"SIGSTOP\",\nnumber:19,\naction:\"pause\",\ndescription:\"Paused\",\nstandard:\"posix\",\nforced:true\n},\n{\nname:\"SIGTSTP\",\nnumber:20,\naction:\"pause\",\ndescription:\"Paused using CTRL-Z or \\\"suspend\\\"\",\nstandard:\"posix\"\n},\n{\nname:\"SIGTTIN\",\nnumber:21,\naction:\"pause\",\ndescription:\"Background process cannot read terminal input\",\nstandard:\"posix\"\n},\n{\nname:\"SIGBREAK\",\nnumber:21,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-BREAK\",\nstandard:\"other\"\n},\n{\nname:\"SIGTTOU\",\nnumber:22,\naction:\"pause\",\ndescription:\"Background process cannot write to terminal output\",\nstandard:\"posix\"\n},\n{\nname:\"SIGURG\",\nnumber:23,\naction:\"ignore\",\ndescription:\"Socket received out-of-band data\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGXCPU\",\nnumber:24,\naction:\"core\",\ndescription:\"Process timed out\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGXFSZ\",\nnumber:25,\naction:\"core\",\ndescription:\"File too big\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGVTALRM\",\nnumber:26,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGPROF\",\nnumber:27,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGWINCH\",\nnumber:28,\naction:\"ignore\",\ndescription:\"Terminal window size changed\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGIO\",\nnumber:29,\naction:\"terminate\",\ndescription:\"I/O is available\",\nstandard:\"other\"\n},\n{\nname:\"SIGPOLL\",\nnumber:29,\naction:\"terminate\",\ndescription:\"Watched event\",\nstandard:\"other\"\n},\n{\nname:\"SIGINFO\",\nnumber:29,\naction:\"ignore\",\ndescription:\"Request for process information\",\nstandard:\"other\"\n},\n{\nname:\"SIGPWR\",\nnumber:30,\naction:\"terminate\",\ndescription:\"Device running out of power\",\nstandard:\"systemv\"\n},\n{\nname:\"SIGSYS\",\nnumber:31,\naction:\"core\",\ndescription:\"Invalid system call\",\nstandard:\"other\"\n},\n{\nname:\"SIGUNUSED\",\nnumber:31,\naction:\"terminate\",\ndescription:\"Invalid system call\",\nstandard:\"other\"\n}];", "import {once} from 'node:events';\n\n// Combines `util.aborted()` and `events.addAbortListener()`: promise-based and cleaned up with a stop signal\nexport const onAbortedSignal = async (mainSignal, stopSignal) => {\n\tif (!mainSignal.aborted) {\n\t\tawait once(mainSignal, 'abort', {signal: stopSignal});\n\t}\n};\n", "import {onAbortedSignal} from '../utils/abort-signal.js';\n\n// Validate the `cancelSignal` option\nexport const validateCancelSignal = ({cancelSignal}) => {\n\tif (cancelSignal !== undefined && Object.prototype.toString.call(cancelSignal) !== '[object AbortSignal]') {\n\t\tthrow new Error(`The \\`cancelSignal\\` option must be an AbortSignal: ${String(cancelSignal)}`);\n\t}\n};\n\n// Terminate the subprocess when aborting the `cancelSignal` option and `gracefulSignal` is `false`\nexport const throwOnCancel = ({subprocess, cancelSignal, gracefulCancel, context, controller}) => cancelSignal === undefined || gracefulCancel\n\t? []\n\t: [terminateOnCancel(subprocess, cancelSignal, context, controller)];\n\nconst terminateOnCancel = async (subprocess, cancelSignal, context, {signal}) => {\n\tawait onAbortedSignal(cancelSignal, signal);\n\tcontext.terminationReason ??= 'cancel';\n\tsubprocess.kill();\n\tthrow cancelSignal.reason;\n};\n", "import {scheduler} from 'node:timers/promises';\nimport {sendOneMessage} from './send.js';\nimport {getIpcEmitter} from './forward.js';\nimport {validateConnection, getAbortDisconnectError, throwOnMissingParent} from './validation.js';\n\n// Send an IPC message so the subprocess performs a graceful termination\nexport const sendAbort = (subprocess, message) => {\n\tconst methodName = 'cancelSignal';\n\tvalidateConnection(methodName, false, subprocess.connected);\n\treturn sendOneMessage({\n\t\tanyProcess: subprocess,\n\t\tmethodName,\n\t\tisSubprocess: false,\n\t\twrappedMessage: {type: GRACEFUL_CANCEL_TYPE, message},\n\t\tmessage,\n\t});\n};\n\n// When the signal is being used, start listening for incoming messages.\n// Unbuffering messages takes one microtask to complete, so this must be async.\nexport const getCancelSignal = async ({anyProcess, channel, isSubprocess, ipc}) => {\n\tawait startIpc({\n\t\tanyProcess,\n\t\tchannel,\n\t\tisSubprocess,\n\t\tipc,\n\t});\n\treturn cancelController.signal;\n};\n\nconst startIpc = async ({anyProcess, channel, isSubprocess, ipc}) => {\n\tif (cancelListening) {\n\t\treturn;\n\t}\n\n\tcancelListening = true;\n\n\tif (!ipc) {\n\t\tthrowOnMissingParent();\n\t\treturn;\n\t}\n\n\tif (channel === null) {\n\t\tabortOnDisconnect();\n\t\treturn;\n\t}\n\n\tgetIpcEmitter(anyProcess, channel, isSubprocess);\n\tawait scheduler.yield();\n};\n\nlet cancelListening = false;\n\n// Reception of IPC message to perform a graceful termination\nexport const handleAbort = wrappedMessage => {\n\tif (wrappedMessage?.type !== GRACEFUL_CANCEL_TYPE) {\n\t\treturn false;\n\t}\n\n\tcancelController.abort(wrappedMessage.message);\n\treturn true;\n};\n\nconst GRACEFUL_CANCEL_TYPE = 'execa:ipc:cancel';\n\n// When the current process disconnects early, the subprocess `cancelSignal` is aborted.\n// Otherwise, the signal would never be able to be aborted later on.\nexport const abortOnDisconnect = () => {\n\tcancelController.abort(getAbortDisconnectError());\n};\n\nconst cancelController = new AbortController();\n", "import {promisify} from 'node:util';\nimport {\n\tvalidateIpcMethod,\n\thandleEpipeError,\n\thandleSerializationError,\n\tdisconnect,\n} from './validation.js';\nimport {startSendMessage, endSendMessage} from './outgoing.js';\nimport {handleSendStrict, waitForStrictResponse} from './strict.js';\n\n// Like `[sub]process.send()` but promise-based.\n// We do not `await subprocess` during `.sendMessage()` nor `.getOneMessage()` since those methods are transient.\n// Users would still need to `await subprocess` after the method is done.\n// Also, this would prevent `unhandledRejection` event from being emitted, making it silent.\nexport const sendMessage = ({anyProcess, channel, isSubprocess, ipc}, message, {strict = false} = {}) => {\n\tconst methodName = 'sendMessage';\n\tvalidateIpcMethod({\n\t\tmethodName,\n\t\tisSubprocess,\n\t\tipc,\n\t\tisConnected: anyProcess.connected,\n\t});\n\n\treturn sendMessageAsync({\n\t\tanyProcess,\n\t\tchannel,\n\t\tmethodName,\n\t\tisSubprocess,\n\t\tmessage,\n\t\tstrict,\n\t});\n};\n\nconst sendMessageAsync = async ({anyProcess, channel, methodName, isSubprocess, message, strict}) => {\n\tconst wrappedMessage = handleSendStrict({\n\t\tanyProcess,\n\t\tchannel,\n\t\tisSubprocess,\n\t\tmessage,\n\t\tstrict,\n\t});\n\tconst outgoingMessagesState = startSendMessage(anyProcess, wrappedMessage, strict);\n\ttry {\n\t\tawait sendOneMessage({\n\t\t\tanyProcess,\n\t\t\tmethodName,\n\t\t\tisSubprocess,\n\t\t\twrappedMessage,\n\t\t\tmessage,\n\t\t});\n\t} catch (error) {\n\t\tdisconnect(anyProcess);\n\t\tthrow error;\n\t} finally {\n\t\tendSendMessage(outgoingMessagesState);\n\t}\n};\n\n// Used internally by `cancelSignal`\nexport const sendOneMessage = async ({anyProcess, methodName, isSubprocess, wrappedMessage, message}) => {\n\tconst sendMethod = getSendMethod(anyProcess);\n\n\ttry {\n\t\tawait Promise.all([\n\t\t\twaitForStrictResponse(wrappedMessage, anyProcess, isSubprocess),\n\t\t\tsendMethod(wrappedMessage),\n\t\t]);\n\t} catch (error) {\n\t\thandleEpipeError({error, methodName, isSubprocess});\n\t\thandleSerializationError({\n\t\t\terror,\n\t\t\tmethodName,\n\t\t\tisSubprocess,\n\t\t\tmessage,\n\t\t});\n\t\tthrow error;\n\t}\n};\n\n// [sub]process.send() promisified, memoized\nconst getSendMethod = anyProcess => {\n\tif (PROCESS_SEND_METHODS.has(anyProcess)) {\n\t\treturn PROCESS_SEND_METHODS.get(anyProcess);\n\t}\n\n\tconst sendMethod = promisify(anyProcess.send.bind(anyProcess));\n\tPROCESS_SEND_METHODS.set(anyProcess, sendMethod);\n\treturn sendMethod;\n};\n\nconst PROCESS_SEND_METHODS = new WeakMap();\n", "// Validate the IPC channel is connected before receiving/sending messages\nexport const validateIpcMethod = ({methodName, isSubprocess, ipc, isConnected}) => {\n\tvalidateIpcOption(methodName, isSubprocess, ipc);\n\tvalidateConnection(methodName, isSubprocess, isConnected);\n};\n\n// Better error message when forgetting to set `ipc: true` and using the IPC methods\nconst validateIpcOption = (methodName, isSubprocess, ipc) => {\n\tif (!ipc) {\n\t\tthrow new Error(`${getMethodName(methodName, isSubprocess)} can only be used if the \\`ipc\\` option is \\`true\\`.`);\n\t}\n};\n\n// Better error message when one process does not send/receive messages once the other process has disconnected.\n// This also makes it clear that any buffered messages are lost once either process has disconnected.\n// Also when aborting `cancelSignal` after disconnecting the IPC.\nexport const validateConnection = (methodName, isSubprocess, isConnected) => {\n\tif (!isConnected) {\n\t\tthrow new Error(`${getMethodName(methodName, isSubprocess)} cannot be used: the ${getOtherProcessName(isSubprocess)} has already exited or disconnected.`);\n\t}\n};\n\n// When `getOneMessage()` could not complete due to an early disconnection\nexport const throwOnEarlyDisconnect = isSubprocess => {\n\tthrow new Error(`${getMethodName('getOneMessage', isSubprocess)} could not complete: the ${getOtherProcessName(isSubprocess)} exited or disconnected.`);\n};\n\n// When both processes use `sendMessage()` with `strict` at the same time\nexport const throwOnStrictDeadlockError = isSubprocess => {\n\tthrow new Error(`${getMethodName('sendMessage', isSubprocess)} failed: the ${getOtherProcessName(isSubprocess)} is sending a message too, instead of listening to incoming messages.\nThis can be fixed by both sending a message and listening to incoming messages at the same time:\n\nconst [receivedMessage] = await Promise.all([\n\t${getMethodName('getOneMessage', isSubprocess)},\n\t${getMethodName('sendMessage', isSubprocess, 'message, {strict: true}')},\n]);`);\n};\n\n// When the other process used `strict` but the current process had I/O error calling `sendMessage()` for the response\nexport const getStrictResponseError = (error, isSubprocess) => new Error(`${getMethodName('sendMessage', isSubprocess)} failed when sending an acknowledgment response to the ${getOtherProcessName(isSubprocess)}.`, {cause: error});\n\n// When using `strict` but the other process was not listening for messages\nexport const throwOnMissingStrict = isSubprocess => {\n\tthrow new Error(`${getMethodName('sendMessage', isSubprocess)} failed: the ${getOtherProcessName(isSubprocess)} is not listening to incoming messages.`);\n};\n\n// When using `strict` but the other process disconnected before receiving the message\nexport const throwOnStrictDisconnect = isSubprocess => {\n\tthrow new Error(`${getMethodName('sendMessage', isSubprocess)} failed: the ${getOtherProcessName(isSubprocess)} exited without listening to incoming messages.`);\n};\n\n// When the current process disconnects while the subprocess is listening to `cancelSignal`\nexport const getAbortDisconnectError = () => new Error(`\\`cancelSignal\\` aborted: the ${getOtherProcessName(true)} disconnected.`);\n\n// When the subprocess uses `cancelSignal` but not the current process\nexport const throwOnMissingParent = () => {\n\tthrow new Error('`getCancelSignal()` cannot be used without setting the `cancelSignal` subprocess option.');\n};\n\n// EPIPE can happen when sending a message to a subprocess that is closing but has not disconnected yet\nexport const handleEpipeError = ({error, methodName, isSubprocess}) => {\n\tif (error.code === 'EPIPE') {\n\t\tthrow new Error(`${getMethodName(methodName, isSubprocess)} cannot be used: the ${getOtherProcessName(isSubprocess)} is disconnecting.`, {cause: error});\n\t}\n};\n\n// Better error message when sending messages which cannot be serialized.\n// Works with both `serialization: 'advanced'` and `serialization: 'json'`.\nexport const handleSerializationError = ({error, methodName, isSubprocess, message}) => {\n\tif (isSerializationError(error)) {\n\t\tthrow new Error(`${getMethodName(methodName, isSubprocess)}'s argument type is invalid: the message cannot be serialized: ${String(message)}.`, {cause: error});\n\t}\n};\n\nconst isSerializationError = ({code, message}) => SERIALIZATION_ERROR_CODES.has(code)\n\t|| SERIALIZATION_ERROR_MESSAGES.some(serializationErrorMessage => message.includes(serializationErrorMessage));\n\n// `error.code` set by Node.js when it failed to serialize the message\nconst SERIALIZATION_ERROR_CODES = new Set([\n\t// Message is `undefined`\n\t'ERR_MISSING_ARGS',\n\t// Message is a function, a bigint, a symbol\n\t'ERR_INVALID_ARG_TYPE',\n]);\n\n// `error.message` set by Node.js when it failed to serialize the message\nconst SERIALIZATION_ERROR_MESSAGES = [\n\t// Message is a promise or a proxy, with `serialization: 'advanced'`\n\t'could not be cloned',\n\t// Message has cycles, with `serialization: 'json'`\n\t'circular structure',\n\t// Message has cycles inside toJSON(), with `serialization: 'json'`\n\t'call stack size exceeded',\n];\n\nconst getMethodName = (methodName, isSubprocess, parameters = '') => methodName === 'cancelSignal'\n\t? '`cancelSignal`\\'s `controller.abort()`'\n\t: `${getNamespaceName(isSubprocess)}${methodName}(${parameters})`;\n\nconst getNamespaceName = isSubprocess => isSubprocess ? '' : 'subprocess.';\n\nconst getOtherProcessName = isSubprocess => isSubprocess ? 'parent process' : 'subprocess';\n\n// When any error arises, we disconnect the IPC.\n// Otherwise, it is likely that one of the processes will stop sending/receiving messages.\n// This would leave the other process hanging.\nexport const disconnect = anyProcess => {\n\tif (anyProcess.connected) {\n\t\tanyProcess.disconnect();\n\t}\n};\n", "export const createDeferred = () => {\n\tconst methods = {};\n\tconst promise = new Promise((resolve, reject) => {\n\t\tObject.assign(methods, {resolve, reject});\n\t});\n\treturn Object.assign(promise, methods);\n};\n", "import {parseFd} from './specific.js';\n\n// Retrieve stream targeted by the `to` option\nexport const getToStream = (destination, to = 'stdin') => {\n\tconst isWritable = true;\n\tconst {options, fileDescriptors} = SUBPROCESS_OPTIONS.get(destination);\n\tconst fdNumber = getFdNumber(fileDescriptors, to, isWritable);\n\tconst destinationStream = destination.stdio[fdNumber];\n\n\tif (destinationStream === null) {\n\t\tthrow new TypeError(getInvalidStdioOptionMessage(fdNumber, to, options, isWritable));\n\t}\n\n\treturn destinationStream;\n};\n\n// Retrieve stream targeted by the `from` option\nexport const getFromStream = (source, from = 'stdout') => {\n\tconst isWritable = false;\n\tconst {options, fileDescriptors} = SUBPROCESS_OPTIONS.get(source);\n\tconst fdNumber = getFdNumber(fileDescriptors, from, isWritable);\n\tconst sourceStream = fdNumber === 'all' ? source.all : source.stdio[fdNumber];\n\n\tif (sourceStream === null || sourceStream === undefined) {\n\t\tthrow new TypeError(getInvalidStdioOptionMessage(fdNumber, from, options, isWritable));\n\t}\n\n\treturn sourceStream;\n};\n\n// Keeps track of the options passed to each Execa call\nexport const SUBPROCESS_OPTIONS = new WeakMap();\n\nconst getFdNumber = (fileDescriptors, fdName, isWritable) => {\n\tconst fdNumber = parseFdNumber(fdName, isWritable);\n\tvalidateFdNumber(fdNumber, fdName, isWritable, fileDescriptors);\n\treturn fdNumber;\n};\n\nconst parseFdNumber = (fdName, isWritable) => {\n\tconst fdNumber = parseFd(fdName);\n\tif (fdNumber !== undefined) {\n\t\treturn fdNumber;\n\t}\n\n\tconst {validOptions, defaultValue} = isWritable\n\t\t? {validOptions: '\"stdin\"', defaultValue: 'stdin'}\n\t\t: {validOptions: '\"stdout\", \"stderr\", \"all\"', defaultValue: 'stdout'};\n\tthrow new TypeError(`\"${getOptionName(isWritable)}\" must not be \"${fdName}\".\nIt must be ${validOptions} or \"fd3\", \"fd4\" (and so on).\nIt is optional and defaults to \"${defaultValue}\".`);\n};\n\nconst validateFdNumber = (fdNumber, fdName, isWritable, fileDescriptors) => {\n\tconst fileDescriptor = fileDescriptors[getUsedDescriptor(fdNumber)];\n\tif (fileDescriptor === undefined) {\n\t\tthrow new TypeError(`\"${getOptionName(isWritable)}\" must not be ${fdName}. That file descriptor does not exist.\nPlease set the \"stdio\" option to ensure that file descriptor exists.`);\n\t}\n\n\tif (fileDescriptor.direction === 'input' && !isWritable) {\n\t\tthrow new TypeError(`\"${getOptionName(isWritable)}\" must not be ${fdName}. It must be a readable stream, not writable.`);\n\t}\n\n\tif (fileDescriptor.direction !== 'input' && isWritable) {\n\t\tthrow new TypeError(`\"${getOptionName(isWritable)}\" must not be ${fdName}. It must be a writable stream, not readable.`);\n\t}\n};\n\nconst getInvalidStdioOptionMessage = (fdNumber, fdName, options, isWritable) => {\n\tif (fdNumber === 'all' && !options.all) {\n\t\treturn 'The \"all\" option must be true to use \"from: \\'all\\'\".';\n\t}\n\n\tconst {optionName, optionValue} = getInvalidStdioOption(fdNumber, options);\n\treturn `The \"${optionName}: ${serializeOptionValue(optionValue)}\" option is incompatible with using \"${getOptionName(isWritable)}: ${serializeOptionValue(fdName)}\".\nPlease set this option with \"pipe\" instead.`;\n};\n\nconst getInvalidStdioOption = (fdNumber, {stdin, stdout, stderr, stdio}) => {\n\tconst usedDescriptor = getUsedDescriptor(fdNumber);\n\n\tif (usedDescriptor === 0 && stdin !== undefined) {\n\t\treturn {optionName: 'stdin', optionValue: stdin};\n\t}\n\n\tif (usedDescriptor === 1 && stdout !== undefined) {\n\t\treturn {optionName: 'stdout', optionValue: stdout};\n\t}\n\n\tif (usedDescriptor === 2 && stderr !== undefined) {\n\t\treturn {optionName: 'stderr', optionValue: stderr};\n\t}\n\n\treturn {optionName: `stdio[${usedDescriptor}]`, optionValue: stdio[usedDescriptor]};\n};\n\nconst getUsedDescriptor = fdNumber => fdNumber === 'all' ? 1 : fdNumber;\n\nconst getOptionName = isWritable => isWritable ? 'to' : 'from';\n\nexport const serializeOptionValue = value => {\n\tif (typeof value === 'string') {\n\t\treturn `'${value}'`;\n\t}\n\n\treturn typeof value === 'number' ? `${value}` : 'Stream';\n};\n", "import {once} from 'node:events';\nimport {createDeferred} from '../utils/deferred.js';\nimport {incrementMaxListeners} from '../utils/max-listeners.js';\nimport {sendMessage} from './send.js';\nimport {throwOnMissingStrict, throwOnStrictDisconnect, throwOnStrictDeadlockError} from './validation.js';\nimport {getIpcEmitter} from './forward.js';\nimport {hasMessageListeners} from './outgoing.js';\n\n// When using the `strict` option, wrap the message with metadata during `sendMessage()`\nexport const handleSendStrict = ({anyProcess, channel, isSubprocess, message, strict}) => {\n\tif (!strict) {\n\t\treturn message;\n\t}\n\n\tconst ipcEmitter = getIpcEmitter(anyProcess, channel, isSubprocess);\n\tconst hasListeners = hasMessageListeners(anyProcess, ipcEmitter);\n\treturn {\n\t\tid: count++,\n\t\ttype: REQUEST_TYPE,\n\t\tmessage,\n\t\thasListeners,\n\t};\n};\n\nlet count = 0n;\n\n// Handles when both processes are calling `sendMessage()` with `strict` at the same time.\n// If neither process is listening, this would create a deadlock. We detect it and throw.\nexport const validateStrictDeadlock = (outgoingMessages, wrappedMessage) => {\n\tif (wrappedMessage?.type !== REQUEST_TYPE || wrappedMessage.hasListeners) {\n\t\treturn;\n\t}\n\n\tfor (const {id} of outgoingMessages) {\n\t\tif (id !== undefined) {\n\t\t\tSTRICT_RESPONSES[id].resolve({isDeadlock: true, hasListeners: false});\n\t\t}\n\t}\n};\n\n// The other process then sends the acknowledgment back as a response\nexport const handleStrictRequest = async ({wrappedMessage, anyProcess, channel, isSubprocess, ipcEmitter}) => {\n\tif (wrappedMessage?.type !== REQUEST_TYPE || !anyProcess.connected) {\n\t\treturn wrappedMessage;\n\t}\n\n\tconst {id, message} = wrappedMessage;\n\tconst response = {id, type: RESPONSE_TYPE, message: hasMessageListeners(anyProcess, ipcEmitter)};\n\n\ttry {\n\t\tawait sendMessage({\n\t\t\tanyProcess,\n\t\t\tchannel,\n\t\t\tisSubprocess,\n\t\t\tipc: true,\n\t\t}, response);\n\t} catch (error) {\n\t\tipcEmitter.emit('strict:error', error);\n\t}\n\n\treturn message;\n};\n\n// Reception of the acknowledgment response\nexport const handleStrictResponse = wrappedMessage => {\n\tif (wrappedMessage?.type !== RESPONSE_TYPE) {\n\t\treturn false;\n\t}\n\n\tconst {id, message: hasListeners} = wrappedMessage;\n\tSTRICT_RESPONSES[id]?.resolve({isDeadlock: false, hasListeners});\n\treturn true;\n};\n\n// Wait for the other process to receive the message from `sendMessage()`\nexport const waitForStrictResponse = async (wrappedMessage, anyProcess, isSubprocess) => {\n\tif (wrappedMessage?.type !== REQUEST_TYPE) {\n\t\treturn;\n\t}\n\n\tconst deferred = createDeferred();\n\tSTRICT_RESPONSES[wrappedMessage.id] = deferred;\n\tconst controller = new AbortController();\n\n\ttry {\n\t\tconst {isDeadlock, hasListeners} = await Promise.race([\n\t\t\tdeferred,\n\t\t\tthrowOnDisconnect(anyProcess, isSubprocess, controller),\n\t\t]);\n\n\t\tif (isDeadlock) {\n\t\t\tthrowOnStrictDeadlockError(isSubprocess);\n\t\t}\n\n\t\tif (!hasListeners) {\n\t\t\tthrowOnMissingStrict(isSubprocess);\n\t\t}\n\t} finally {\n\t\tcontroller.abort();\n\t\tdelete STRICT_RESPONSES[wrappedMessage.id];\n\t}\n};\n\nconst STRICT_RESPONSES = {};\n\nconst throwOnDisconnect = async (anyProcess, isSubprocess, {signal}) => {\n\tincrementMaxListeners(anyProcess, 1, signal);\n\tawait once(anyProcess, 'disconnect', {signal});\n\tthrowOnStrictDisconnect(isSubprocess);\n};\n\nconst REQUEST_TYPE = 'execa:ipc:request';\nconst RESPONSE_TYPE = 'execa:ipc:response';\n", "import {addAbortListener} from 'node:events';\n\n// Temporarily increase the maximum number of listeners on an eventEmitter\nexport const incrementMaxListeners = (eventEmitter, maxListenersIncrement, signal) => {\n\tconst maxListeners = eventEmitter.getMaxListeners();\n\tif (maxListeners === 0 || maxListeners === Number.POSITIVE_INFINITY) {\n\t\treturn;\n\t}\n\n\teventEmitter.setMaxListeners(maxListeners + maxListenersIncrement);\n\taddAbortListener(signal, () => {\n\t\teventEmitter.setMaxListeners(eventEmitter.getMaxListeners() - maxListenersIncrement);\n\t});\n};\n", "import {EventEmitter} from 'node:events';\nimport {onMessage, onDisconnect} from './incoming.js';\nimport {undoAddedReferences} from './reference.js';\n\n// Forward the `message` and `disconnect` events from the process and subprocess to a proxy emitter.\n// This prevents the `error` event from stopping IPC.\n// This also allows debouncing the `message` event.\nexport const getIpcEmitter = (anyProcess, channel, isSubprocess) => {\n\tif (IPC_EMITTERS.has(anyProcess)) {\n\t\treturn IPC_EMITTERS.get(anyProcess);\n\t}\n\n\t// Use an `EventEmitter`, like the `process` that is being proxied\n\t// eslint-disable-next-line unicorn/prefer-event-target\n\tconst ipcEmitter = new EventEmitter();\n\tipcEmitter.connected = true;\n\tIPC_EMITTERS.set(anyProcess, ipcEmitter);\n\tforwardEvents({\n\t\tipcEmitter,\n\t\tanyProcess,\n\t\tchannel,\n\t\tisSubprocess,\n\t});\n\treturn ipcEmitter;\n};\n\nconst IPC_EMITTERS = new WeakMap();\n\n// The `message` and `disconnect` events are buffered in the subprocess until the first listener is setup.\n// However, unbuffering happens after one tick, so this give enough time for the caller to setup the listener on the proxy emitter first.\n// See https://github.com/nodejs/node/blob/2aaeaa863c35befa2ebaa98fb7737ec84df4d8e9/lib/internal/child_process.js#L721\nconst forwardEvents = ({ipcEmitter, anyProcess, channel, isSubprocess}) => {\n\tconst boundOnMessage = onMessage.bind(undefined, {\n\t\tanyProcess,\n\t\tchannel,\n\t\tisSubprocess,\n\t\tipcEmitter,\n\t});\n\tanyProcess.on('message', boundOnMessage);\n\tanyProcess.once('disconnect', onDisconnect.bind(undefined, {\n\t\tanyProcess,\n\t\tchannel,\n\t\tisSubprocess,\n\t\tipcEmitter,\n\t\tboundOnMessage,\n\t}));\n\tundoAddedReferences(channel, isSubprocess);\n};\n\n// Check whether there might still be some `message` events to receive\nexport const isConnected = anyProcess => {\n\tconst ipcEmitter = IPC_EMITTERS.get(anyProcess);\n\treturn ipcEmitter === undefined\n\t\t? anyProcess.channel !== null\n\t\t: ipcEmitter.connected;\n};\n", "import {once} from 'node:events';\nimport {scheduler} from 'node:timers/promises';\nimport {waitForOutgoingMessages} from './outgoing.js';\nimport {redoAddedReferences} from './reference.js';\nimport {handleStrictRequest, handleStrictResponse} from './strict.js';\nimport {handleAbort, abortOnDisconnect} from './graceful.js';\n\n// By default, Node.js buffers `message` events.\n//  - Buffering happens when there is a `message` event is emitted but there is no handler.\n//  - As soon as a `message` event handler is set, all buffered `message` events are emitted, emptying the buffer.\n//  - This happens both in the current process and the subprocess.\n//  - See https://github.com/nodejs/node/blob/501546e8f37059cd577041e23941b640d0d4d406/lib/internal/child_process.js#L719\n// This is helpful. Notably, this allows sending messages to a subprocess that's still initializing.\n// However, it has several problems.\n//  - This works with `events.on()` but not `events.once()` since all buffered messages are emitted at once.\n//    For example, users cannot call `await getOneMessage()`/`getEachMessage()` multiple times in a row.\n//  - When a user intentionally starts listening to `message` at a specific point in time, past `message` events are replayed, which might be unexpected.\n//  - Buffering is unlimited, which might lead to an out-of-memory crash.\n//  - This does not work well with multiple consumers.\n//    For example, Execa consumes events with both `result.ipcOutput` and manual IPC calls like `getOneMessage()`.\n//    Since `result.ipcOutput` reads all incoming messages, no buffering happens for manual IPC calls.\n//  - Forgetting to setup a `message` listener, or setting it up too late, is a programming mistake.\n//    The default behavior does not allow users to realize they made that mistake.\n// To solve those problems, instead of buffering messages, we debounce them.\n// The `message` event so it is emitted at most once per macrotask.\nexport const onMessage = async ({anyProcess, channel, isSubprocess, ipcEmitter}, wrappedMessage) => {\n\tif (handleStrictResponse(wrappedMessage) || handleAbort(wrappedMessage)) {\n\t\treturn;\n\t}\n\n\tif (!INCOMING_MESSAGES.has(anyProcess)) {\n\t\tINCOMING_MESSAGES.set(anyProcess, []);\n\t}\n\n\tconst incomingMessages = INCOMING_MESSAGES.get(anyProcess);\n\tincomingMessages.push(wrappedMessage);\n\n\tif (incomingMessages.length > 1) {\n\t\treturn;\n\t}\n\n\twhile (incomingMessages.length > 0) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tawait waitForOutgoingMessages(anyProcess, ipcEmitter, wrappedMessage);\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tawait scheduler.yield();\n\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst message = await handleStrictRequest({\n\t\t\twrappedMessage: incomingMessages[0],\n\t\t\tanyProcess,\n\t\t\tchannel,\n\t\t\tisSubprocess,\n\t\t\tipcEmitter,\n\t\t});\n\n\t\tincomingMessages.shift();\n\t\tipcEmitter.emit('message', message);\n\t\tipcEmitter.emit('message:done');\n\t}\n};\n\n// If the `message` event is currently debounced, the `disconnect` event must wait for it\nexport const onDisconnect = async ({anyProcess, channel, isSubprocess, ipcEmitter, boundOnMessage}) => {\n\tabortOnDisconnect();\n\n\tconst incomingMessages = INCOMING_MESSAGES.get(anyProcess);\n\twhile (incomingMessages?.length > 0) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tawait once(ipcEmitter, 'message:done');\n\t}\n\n\tanyProcess.removeListener('message', boundOnMessage);\n\tredoAddedReferences(channel, isSubprocess);\n\tipcEmitter.connected = false;\n\tipcEmitter.emit('disconnect');\n};\n\nconst INCOMING_MESSAGES = new WeakMap();\n", "// By default, Node.js keeps the subprocess alive while it has a `message` or `disconnect` listener.\n// We replicate the same logic for the events that we proxy.\n// This ensures the subprocess is kept alive while `getOneMessage()` and `getEachMessage()` are ongoing.\n// This is not a problem with `sendMessage()` since Node.js handles that method automatically.\n// We do not use `anyProcess.channel.ref()` since this would prevent the automatic `.channel.refCounted()` Node.js is doing.\n// We keep a reference to `anyProcess.channel` since it might be `null` while `getOneMessage()` or `getEachMessage()` is still processing debounced messages.\n// See https://github.com/nodejs/node/blob/2aaeaa863c35befa2ebaa98fb7737ec84df4d8e9/lib/internal/child_process.js#L547\nexport const addReference = (channel, reference) => {\n\tif (reference) {\n\t\taddReferenceCount(channel);\n\t}\n};\n\nconst addReferenceCount = channel => {\n\tchannel.refCounted();\n};\n\nexport const removeReference = (channel, reference) => {\n\tif (reference) {\n\t\tremoveReferenceCount(channel);\n\t}\n};\n\nconst removeReferenceCount = channel => {\n\tchannel.unrefCounted();\n};\n\n// To proxy events, we setup some global listeners on the `message` and `disconnect` events.\n// Those should not keep the subprocess alive, so we remove the automatic counting that Node.js is doing.\n// See https://github.com/nodejs/node/blob/1b965270a9c273d4cf70e8808e9d28b9ada7844f/lib/child_process.js#L180\nexport const undoAddedReferences = (channel, isSubprocess) => {\n\tif (isSubprocess) {\n\t\tremoveReferenceCount(channel);\n\t\tremoveReferenceCount(channel);\n\t}\n};\n\n// Reverse it during `disconnect`\nexport const redoAddedReferences = (channel, isSubprocess) => {\n\tif (isSubprocess) {\n\t\taddReferenceCount(channel);\n\t\taddReferenceCount(channel);\n\t}\n};\n", "import {createDeferred} from '../utils/deferred.js';\nimport {getFdSpecificValue} from '../arguments/specific.js';\nimport {SUBPROCESS_OPTIONS} from '../arguments/fd-options.js';\nimport {validateStrictDeadlock} from './strict.js';\n\n// When `sendMessage()` is ongoing, any `message` being received waits before being emitted.\n// This allows calling one or multiple `await sendMessage()` followed by `await getOneMessage()`/`await getEachMessage()`.\n// Without running into a race condition when the other process sends a response too fast, before the current process set up a listener.\nexport const startSendMessage = (anyProcess, wrappedMessage, strict) => {\n\tif (!OUTGOING_MESSAGES.has(anyProcess)) {\n\t\tOUTGOING_MESSAGES.set(anyProcess, new Set());\n\t}\n\n\tconst outgoingMessages = OUTGOING_MESSAGES.get(anyProcess);\n\tconst onMessageSent = createDeferred();\n\tconst id = strict ? wrappedMessage.id : undefined;\n\tconst outgoingMessage = {onMessageSent, id};\n\toutgoingMessages.add(outgoingMessage);\n\treturn {outgoingMessages, outgoingMessage};\n};\n\nexport const endSendMessage = ({outgoingMessages, outgoingMessage}) => {\n\toutgoingMessages.delete(outgoingMessage);\n\toutgoingMessage.onMessageSent.resolve();\n};\n\n// Await while `sendMessage()` is ongoing, unless there is already a `message` listener\nexport const waitForOutgoingMessages = async (anyProcess, ipcEmitter, wrappedMessage) => {\n\twhile (!hasMessageListeners(anyProcess, ipcEmitter) && OUTGOING_MESSAGES.get(anyProcess)?.size > 0) {\n\t\tconst outgoingMessages = [...OUTGOING_MESSAGES.get(anyProcess)];\n\t\tvalidateStrictDeadlock(outgoingMessages, wrappedMessage);\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tawait Promise.all(outgoingMessages.map(({onMessageSent}) => onMessageSent));\n\t}\n};\n\nconst OUTGOING_MESSAGES = new WeakMap();\n\n// Whether any `message` listener is setup\nexport const hasMessageListeners = (anyProcess, ipcEmitter) => ipcEmitter.listenerCount('message') > getMinListenerCount(anyProcess);\n\n// When `buffer` is `false`, we set up a `message` listener that should be ignored.\n// That listener is only meant to intercept `strict` acknowledgement responses.\nconst getMinListenerCount = anyProcess => SUBPROCESS_OPTIONS.has(anyProcess)\n\t&& !getFdSpecificValue(SUBPROCESS_OPTIONS.get(anyProcess).options.buffer, 'ipc')\n\t? 1\n\t: 0;\n", "import {onAbortedSignal} from '../utils/abort-signal.js';\nimport {sendAbort} from '../ipc/graceful.js';\nimport {killOnTimeout} from './kill.js';\n\n// Validate the `gracefulCancel` option\nexport const validateGracefulCancel = ({gracefulCancel, cancelSignal, ipc, serialization}) => {\n\tif (!gracefulCancel) {\n\t\treturn;\n\t}\n\n\tif (cancelSignal === undefined) {\n\t\tthrow new Error('The `cancelSignal` option must be defined when setting the `gracefulCancel` option.');\n\t}\n\n\tif (!ipc) {\n\t\tthrow new Error('The `ipc` option cannot be false when setting the `gracefulCancel` option.');\n\t}\n\n\tif (serialization === 'json') {\n\t\tthrow new Error('The `serialization` option cannot be \\'json\\' when setting the `gracefulCancel` option.');\n\t}\n};\n\n// Send abort reason to the subprocess when aborting the `cancelSignal` option and `gracefulCancel` is `true`\nexport const throwOnGracefulCancel = ({\n\tsubprocess,\n\tcancelSignal,\n\tgracefulCancel,\n\tforceKillAfterDelay,\n\tcontext,\n\tcontroller,\n}) => gracefulCancel\n\t? [sendOnAbort({\n\t\tsubprocess,\n\t\tcancelSignal,\n\t\tforceKillAfterDelay,\n\t\tcontext,\n\t\tcontroller,\n\t})]\n\t: [];\n\nconst sendOnAbort = async ({subprocess, cancelSignal, forceKillAfterDelay, context, controller: {signal}}) => {\n\tawait onAbortedSignal(cancelSignal, signal);\n\tconst reason = getReason(cancelSignal);\n\tawait sendAbort(subprocess, reason);\n\tkillOnTimeout({\n\t\tkill: subprocess.kill,\n\t\tforceKillAfterDelay,\n\t\tcontext,\n\t\tcontrollerSignal: signal,\n\t});\n\tcontext.terminationReason ??= 'gracefulCancel';\n\tthrow cancelSignal.reason;\n};\n\n// The default `reason` is a DOMException, which is not serializable with V8\n// See https://github.com/nodejs/node/issues/53225\nconst getReason = ({reason}) => {\n\tif (!(reason instanceof DOMException)) {\n\t\treturn reason;\n\t}\n\n\tconst error = new Error(reason.message);\n\tObject.defineProperty(error, 'stack', {\n\t\tvalue: reason.stack,\n\t\tenumerable: false,\n\t\tconfigurable: true,\n\t\twritable: true,\n\t});\n\treturn error;\n};\n", "import {setTimeout} from 'node:timers/promises';\nimport {DiscardedError} from '../return/final-error.js';\n\n// Validate `timeout` option\nexport const validateTimeout = ({timeout}) => {\n\tif (timeout !== undefined && (!Number.isFinite(timeout) || timeout < 0)) {\n\t\tthrow new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${timeout}\\` (${typeof timeout})`);\n\t}\n};\n\n// Fails when the `timeout` option is exceeded\nexport const throwOnTimeout = (subprocess, timeout, context, controller) => timeout === 0 || timeout === undefined\n\t? []\n\t: [killAfterTimeout(subprocess, timeout, context, controller)];\n\nconst killAfterTimeout = async (subprocess, timeout, context, {signal}) => {\n\tawait setTimeout(timeout, undefined, {signal});\n\tcontext.terminationReason ??= 'timeout';\n\tsubprocess.kill();\n\tthrow new DiscardedError();\n};\n", "import {execPath, execArgv} from 'node:process';\nimport path from 'node:path';\nimport {safeNormalizeFileUrl} from '../arguments/file-url.js';\n\n// `execaNode()` is a shortcut for `execa(..., {node: true})`\nexport const mapNode = ({options}) => {\n\tif (options.node === false) {\n\t\tthrow new TypeError('The \"node\" option cannot be false with `execaNode()`.');\n\t}\n\n\treturn {options: {...options, node: true}};\n};\n\n// Applies the `node: true` option, and the related `nodePath`/`nodeOptions` options.\n// Modifies the file commands/arguments to ensure the same Node binary and flags are re-used.\n// Also adds `ipc: true` and `shell: false`.\nexport const handleNodeOption = (file, commandArguments, {\n\tnode: shouldHandleNode = false,\n\tnodePath = execPath,\n\tnodeOptions = execArgv.filter(nodeOption => !nodeOption.startsWith('--inspect')),\n\tcwd,\n\texecPath: formerNodePath,\n\t...options\n}) => {\n\tif (formerNodePath !== undefined) {\n\t\tthrow new TypeError('The \"execPath\" option has been removed. Please use the \"nodePath\" option instead.');\n\t}\n\n\tconst normalizedNodePath = safeNormalizeFileUrl(nodePath, 'The \"nodePath\" option');\n\tconst resolvedNodePath = path.resolve(cwd, normalizedNodePath);\n\tconst newOptions = {\n\t\t...options,\n\t\tnodePath: resolvedNodePath,\n\t\tnode: shouldHandleNode,\n\t\tcwd,\n\t};\n\n\tif (!shouldHandleNode) {\n\t\treturn [file, commandArguments, newOptions];\n\t}\n\n\tif (path.basename(file, '.exe') === 'node') {\n\t\tthrow new TypeError('When the \"node\" option is true, the first argument does not need to be \"node\".');\n\t}\n\n\treturn [\n\t\tresolvedNodePath,\n\t\t[...nodeOptions, file, ...commandArguments],\n\t\t{ipc: true, ...newOptions, shell: false},\n\t];\n};\n", "import {serialize} from 'node:v8';\n\n// Validate the `ipcInput` option\nexport const validateIpcInputOption = ({ipcInput, ipc, serialization}) => {\n\tif (ipcInput === undefined) {\n\t\treturn;\n\t}\n\n\tif (!ipc) {\n\t\tthrow new Error('The `ipcInput` option cannot be set unless the `ipc` option is `true`.');\n\t}\n\n\tvalidateIpcInput[serialization](ipcInput);\n};\n\nconst validateAdvancedInput = ipcInput => {\n\ttry {\n\t\tserialize(ipcInput);\n\t} catch (error) {\n\t\tthrow new Error('The `ipcInput` option is not serializable with a structured clone.', {cause: error});\n\t}\n};\n\nconst validateJsonInput = ipcInput => {\n\ttry {\n\t\tJSON.stringify(ipcInput);\n\t} catch (error) {\n\t\tthrow new Error('The `ipcInput` option is not serializable with JSON.', {cause: error});\n\t}\n};\n\nconst validateIpcInput = {\n\tadvanced: validateAdvancedInput,\n\tjson: validateJsonInput,\n};\n\n// When the `ipcInput` option is set, it is sent as an initial IPC message to the subprocess\nexport const sendIpcInput = async (subprocess, ipcInput) => {\n\tif (ipcInput === undefined) {\n\t\treturn;\n\t}\n\n\tawait subprocess.sendMessage(ipcInput);\n};\n", "// Validate `encoding` option\nexport const validateEncoding = ({encoding}) => {\n\tif (ENCODINGS.has(encoding)) {\n\t\treturn;\n\t}\n\n\tconst correctEncoding = getCorrectEncoding(encoding);\n\tif (correctEncoding !== undefined) {\n\t\tthrow new TypeError(`Invalid option \\`encoding: ${serializeEncoding(encoding)}\\`.\nPlease rename it to ${serializeEncoding(correctEncoding)}.`);\n\t}\n\n\tconst correctEncodings = [...ENCODINGS].map(correctEncoding => serializeEncoding(correctEncoding)).join(', ');\n\tthrow new TypeError(`Invalid option \\`encoding: ${serializeEncoding(encoding)}\\`.\nPlease rename it to one of: ${correctEncodings}.`);\n};\n\nconst TEXT_ENCODINGS = new Set(['utf8', 'utf16le']);\nexport const BINARY_ENCODINGS = new Set(['buffer', 'hex', 'base64', 'base64url', 'latin1', 'ascii']);\nconst ENCODINGS = new Set([...TEXT_ENCODINGS, ...BINARY_ENCODINGS]);\n\nconst getCorrectEncoding = encoding => {\n\tif (encoding === null) {\n\t\treturn 'buffer';\n\t}\n\n\tif (typeof encoding !== 'string') {\n\t\treturn;\n\t}\n\n\tconst lowerEncoding = encoding.toLowerCase();\n\tif (lowerEncoding in ENCODING_ALIASES) {\n\t\treturn ENCODING_ALIASES[lowerEncoding];\n\t}\n\n\tif (ENCODINGS.has(lowerEncoding)) {\n\t\treturn lowerEncoding;\n\t}\n};\n\nconst ENCODING_ALIASES = {\n\t// eslint-disable-next-line unicorn/text-encoding-identifier-case\n\t'utf-8': 'utf8',\n\t'utf-16le': 'utf16le',\n\t'ucs-2': 'utf16le',\n\tucs2: 'utf16le',\n\tbinary: 'latin1',\n};\n\nconst serializeEncoding = encoding => typeof encoding === 'string' ? `\"${encoding}\"` : String(encoding);\n", "import {statSync} from 'node:fs';\nimport path from 'node:path';\nimport process from 'node:process';\nimport {safeNormalizeFileUrl} from './file-url.js';\n\n// Normalize `cwd` option\nexport const normalizeCwd = (cwd = getDefaultCwd()) => {\n\tconst cwdString = safeNormalizeFileUrl(cwd, 'The \"cwd\" option');\n\treturn path.resolve(cwdString);\n};\n\nconst getDefaultCwd = () => {\n\ttry {\n\t\treturn process.cwd();\n\t} catch (error) {\n\t\terror.message = `The current directory does not exist.\\n${error.message}`;\n\t\tthrow error;\n\t}\n};\n\n// When `cwd` option has an invalid value, provide with a better error message\nexport const fixCwdError = (originalMessage, cwd) => {\n\tif (cwd === getDefaultCwd()) {\n\t\treturn originalMessage;\n\t}\n\n\tlet cwdStat;\n\ttry {\n\t\tcwdStat = statSync(cwd);\n\t} catch (error) {\n\t\treturn `The \"cwd\" option is invalid: ${cwd}.\\n${error.message}\\n${originalMessage}`;\n\t}\n\n\tif (!cwdStat.isDirectory()) {\n\t\treturn `The \"cwd\" option is not a directory: ${cwd}.\\n${originalMessage}`;\n\t}\n\n\treturn originalMessage;\n};\n", "// When the `shell` option is set, any command argument is concatenated as a single string by Node.js:\n// https://github.com/nodejs/node/blob/e38ce27f3ca0a65f68a31cedd984cddb927d4002/lib/child_process.js#L614-L624\n// However, since Node 24, it also prints a deprecation warning.\n// To avoid this warning, we perform that same operation before calling `node:child_process`.\n// Shells only understand strings, which is why Node.js performs that concatenation.\n// However, we rely on users splitting command arguments as an array.\n// For example, this allows us to easily detect which arguments are passed.\n// So we do want users to pass array of arguments even with `shell: true`, but we also want to avoid any warning.\nexport const concatenateShell = (file, commandArguments, options) => options.shell && commandArguments.length > 0\n\t? [[file, ...commandArguments].join(' '), [], options]\n\t: [file, commandArguments, options];\n", "import {inspect} from 'node:util';\nimport stripFinalNewline from 'strip-final-newline';\nimport {isUint8Array, uint8ArrayToString} from '../utils/uint-array.js';\nimport {fixCwdError} from '../arguments/cwd.js';\nimport {escapeLines} from '../arguments/escape.js';\nimport {getMaxBufferMessage} from '../io/max-buffer.js';\nimport {getSignalDescription} from '../terminate/signal.js';\nimport {DiscardedError, isExecaError} from './final-error.js';\n\n// Computes `error.message`, `error.shortMessage` and `error.originalMessage`\nexport const createMessages = ({\n\tstdio,\n\tall,\n\tipcOutput,\n\toriginalError,\n\tsignal,\n\tsignalDescription,\n\texitCode,\n\tescapedCommand,\n\ttimedOut,\n\tisCanceled,\n\tisGracefullyCanceled,\n\tisMaxBuffer,\n\tisForcefullyTerminated,\n\tforceKillAfterDelay,\n\tkillSignal,\n\tmaxBuffer,\n\ttimeout,\n\tcwd,\n}) => {\n\tconst errorCode = originalError?.code;\n\tconst prefix = getErrorPrefix({\n\t\toriginalError,\n\t\ttimedOut,\n\t\ttimeout,\n\t\tisMaxBuffer,\n\t\tmaxBuffer,\n\t\terrorCode,\n\t\tsignal,\n\t\tsignalDescription,\n\t\texitCode,\n\t\tisCanceled,\n\t\tisGracefullyCanceled,\n\t\tisForcefullyTerminated,\n\t\tforceKillAfterDelay,\n\t\tkillSignal,\n\t});\n\tconst originalMessage = getOriginalMessage(originalError, cwd);\n\tconst suffix = originalMessage === undefined ? '' : `\\n${originalMessage}`;\n\tconst shortMessage = `${prefix}: ${escapedCommand}${suffix}`;\n\tconst messageStdio = all === undefined ? [stdio[2], stdio[1]] : [all];\n\tconst message = [\n\t\tshortMessage,\n\t\t...messageStdio,\n\t\t...stdio.slice(3),\n\t\tipcOutput.map(ipcMessage => serializeIpcMessage(ipcMessage)).join('\\n'),\n\t]\n\t\t.map(messagePart => escapeLines(stripFinalNewline(serializeMessagePart(messagePart))))\n\t\t.filter(Boolean)\n\t\t.join('\\n\\n');\n\treturn {originalMessage, shortMessage, message};\n};\n\nconst getErrorPrefix = ({\n\toriginalError,\n\ttimedOut,\n\ttimeout,\n\tisMaxBuffer,\n\tmaxBuffer,\n\terrorCode,\n\tsignal,\n\tsignalDescription,\n\texitCode,\n\tisCanceled,\n\tisGracefullyCanceled,\n\tisForcefullyTerminated,\n\tforceKillAfterDelay,\n\tkillSignal,\n}) => {\n\tconst forcefulSuffix = getForcefulSuffix(isForcefullyTerminated, forceKillAfterDelay);\n\n\tif (timedOut) {\n\t\treturn `Command timed out after ${timeout} milliseconds${forcefulSuffix}`;\n\t}\n\n\tif (isGracefullyCanceled) {\n\t\tif (signal === undefined) {\n\t\t\treturn `Command was gracefully canceled with exit code ${exitCode}`;\n\t\t}\n\n\t\treturn isForcefullyTerminated\n\t\t\t? `Command was gracefully canceled${forcefulSuffix}`\n\t\t\t: `Command was gracefully canceled with ${signal} (${signalDescription})`;\n\t}\n\n\tif (isCanceled) {\n\t\treturn `Command was canceled${forcefulSuffix}`;\n\t}\n\n\tif (isMaxBuffer) {\n\t\treturn `${getMaxBufferMessage(originalError, maxBuffer)}${forcefulSuffix}`;\n\t}\n\n\tif (errorCode !== undefined) {\n\t\treturn `Command failed with ${errorCode}${forcefulSuffix}`;\n\t}\n\n\tif (isForcefullyTerminated) {\n\t\treturn `Command was killed with ${killSignal} (${getSignalDescription(killSignal)})${forcefulSuffix}`;\n\t}\n\n\tif (signal !== undefined) {\n\t\treturn `Command was killed with ${signal} (${signalDescription})`;\n\t}\n\n\tif (exitCode !== undefined) {\n\t\treturn `Command failed with exit code ${exitCode}`;\n\t}\n\n\treturn 'Command failed';\n};\n\nconst getForcefulSuffix = (isForcefullyTerminated, forceKillAfterDelay) => isForcefullyTerminated\n\t? ` and was forcefully terminated after ${forceKillAfterDelay} milliseconds`\n\t: '';\n\nconst getOriginalMessage = (originalError, cwd) => {\n\tif (originalError instanceof DiscardedError) {\n\t\treturn;\n\t}\n\n\tconst originalMessage = isExecaError(originalError)\n\t\t? originalError.originalMessage\n\t\t: String(originalError?.message ?? originalError);\n\tconst escapedOriginalMessage = escapeLines(fixCwdError(originalMessage, cwd));\n\treturn escapedOriginalMessage === '' ? undefined : escapedOriginalMessage;\n};\n\nconst serializeIpcMessage = ipcMessage => typeof ipcMessage === 'string'\n\t? ipcMessage\n\t: inspect(ipcMessage);\n\nconst serializeMessagePart = messagePart => Array.isArray(messagePart)\n\t? messagePart.map(messageItem => stripFinalNewline(serializeMessageItem(messageItem))).filter(Boolean).join('\\n')\n\t: serializeMessageItem(messagePart);\n\nconst serializeMessageItem = messageItem => {\n\tif (typeof messageItem === 'string') {\n\t\treturn messageItem;\n\t}\n\n\tif (isUint8Array(messageItem)) {\n\t\treturn uint8ArrayToString(messageItem);\n\t}\n\n\treturn '';\n};\n", "export default function stripFinalNewline(input) {\n\tif (typeof input === 'string') {\n\t\treturn stripFinalNewlineString(input);\n\t}\n\n\tif (!(ArrayBuffer.isView(input) && input.BYTES_PER_ELEMENT === 1)) {\n\t\tthrow new Error('Input must be a string or a Uint8Array');\n\t}\n\n\treturn stripFinalNewlineBinary(input);\n}\n\nconst stripFinalNewlineString = input =>\n\tinput.at(-1) === LF\n\t\t? input.slice(0, input.at(-2) === CR ? -2 : -1)\n\t\t: input;\n\nconst stripFinalNewlineBinary = input =>\n\tinput.at(-1) === LF_BINARY\n\t\t? input.subarray(0, input.at(-2) === CR_BINARY ? -2 : -1)\n\t\t: input;\n\nconst LF = '\\n';\nconst LF_BINARY = LF.codePointAt(0);\nconst CR = '\\r';\nconst CR_BINARY = CR.codePointAt(0);\n", "import {on} from 'node:events';\nimport {finished} from 'node:stream/promises';\nimport {nodeImports} from './stream.js';\n\nObject.assign(nodeImports, {on, finished});\n\nexport {\n\tdefault,\n\tgetStreamAsArray,\n\tgetStreamAsArrayBuffer,\n\tgetStreamAsBuffer,\n\tMaxBufferError,\n} from './exports.js';\n", "export function isStream(stream, {checkOpen = true} = {}) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& (stream.writable || stream.readable || !checkOpen || (stream.writable === undefined && stream.readable === undefined))\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream, {checkOpen = true} = {}) {\n\treturn isStream(stream, {checkOpen})\n\t\t&& (stream.writable || !checkOpen)\n\t\t&& typeof stream.write === 'function'\n\t\t&& typeof stream.end === 'function'\n\t\t&& typeof stream.writable === 'boolean'\n\t\t&& typeof stream.writableObjectMode === 'boolean'\n\t\t&& typeof stream.destroy === 'function'\n\t\t&& typeof stream.destroyed === 'boolean';\n}\n\nexport function isReadableStream(stream, {checkOpen = true} = {}) {\n\treturn isStream(stream, {checkOpen})\n\t\t&& (stream.readable || !checkOpen)\n\t\t&& typeof stream.read === 'function'\n\t\t&& typeof stream.readable === 'boolean'\n\t\t&& typeof stream.readableObjectMode === 'boolean'\n\t\t&& typeof stream.destroy === 'function'\n\t\t&& typeof stream.destroyed === 'boolean';\n}\n\nexport function isDuplexStream(stream, options) {\n\treturn isWritableStream(stream, options)\n\t\t&& isReadableStream(stream, options);\n}\n\nexport function isTransformStream(stream, options) {\n\treturn isDuplexStream(stream, options)\n\t\t&& typeof stream._transform === 'function';\n}\n", "const a = Object.getPrototypeOf(\n  Object.getPrototypeOf(\n    /* istanbul ignore next */\n    async function* () {\n    }\n  ).prototype\n);\nclass c {\n  #t;\n  #n;\n  #r = !1;\n  #e = void 0;\n  constructor(e, t) {\n    this.#t = e, this.#n = t;\n  }\n  next() {\n    const e = () => this.#s();\n    return this.#e = this.#e ? this.#e.then(e, e) : e(), this.#e;\n  }\n  return(e) {\n    const t = () => this.#i(e);\n    return this.#e ? this.#e.then(t, t) : t();\n  }\n  async #s() {\n    if (this.#r)\n      return {\n        done: !0,\n        value: void 0\n      };\n    let e;\n    try {\n      e = await this.#t.read();\n    } catch (t) {\n      throw this.#e = void 0, this.#r = !0, this.#t.releaseLock(), t;\n    }\n    return e.done && (this.#e = void 0, this.#r = !0, this.#t.releaseLock()), e;\n  }\n  async #i(e) {\n    if (this.#r)\n      return {\n        done: !0,\n        value: e\n      };\n    if (this.#r = !0, !this.#n) {\n      const t = this.#t.cancel(e);\n      return this.#t.releaseLock(), await t, {\n        done: !0,\n        value: e\n      };\n    }\n    return this.#t.releaseLock(), {\n      done: !0,\n      value: e\n    };\n  }\n}\nconst n = Symbol();\nfunction i() {\n  return this[n].next();\n}\nObject.defineProperty(i, \"name\", { value: \"next\" });\nfunction o(r) {\n  return this[n].return(r);\n}\nObject.defineProperty(o, \"name\", { value: \"return\" });\nconst u = Object.create(a, {\n  next: {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: i\n  },\n  return: {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: o\n  }\n});\nfunction h({ preventCancel: r = !1 } = {}) {\n  const e = this.getReader(), t = new c(\n    e,\n    r\n  ), s = Object.create(u);\n  return s[n] = t, s;\n}\nexport {\n  h as asyncIterator\n};\n", "import {isReadableStream} from 'is-stream';\nimport {asyncIterator} from '@sec-ant/readable-stream/ponyfill';\n\nexport const getAsyncIterable = stream => {\n\tif (isReadableStream(stream, {checkOpen: false}) && nodeImports.on !== undefined) {\n\t\treturn getStreamIterable(stream);\n\t}\n\n\tif (typeof stream?.[Symbol.asyncIterator] === 'function') {\n\t\treturn stream;\n\t}\n\n\t// `ReadableStream[Symbol.asyncIterator]` support is missing in multiple browsers, so we ponyfill it\n\tif (toString.call(stream) === '[object ReadableStream]') {\n\t\treturn asyncIterator.call(stream);\n\t}\n\n\tthrow new TypeError('The first argument must be a Readable, a ReadableStream, or an async iterable.');\n};\n\nconst {toString} = Object.prototype;\n\n// The default iterable for Node.js streams does not allow for multiple readers at once, so we re-implement it\nconst getStreamIterable = async function * (stream) {\n\tconst controller = new AbortController();\n\tconst state = {};\n\thandleStreamEnd(stream, controller, state);\n\n\ttry {\n\t\tfor await (const [chunk] of nodeImports.on(stream, 'data', {signal: controller.signal})) {\n\t\t\tyield chunk;\n\t\t}\n\t} catch (error) {\n\t\t// Stream failure, for example due to `stream.destroy(error)`\n\t\tif (state.error !== undefined) {\n\t\t\tthrow state.error;\n\t\t// `error` event directly emitted on stream\n\t\t} else if (!controller.signal.aborted) {\n\t\t\tthrow error;\n\t\t// Otherwise, stream completed successfully\n\t\t}\n\t\t// The `finally` block also runs when the caller throws, for example due to the `maxBuffer` option\n\t} finally {\n\t\tstream.destroy();\n\t}\n};\n\nconst handleStreamEnd = async (stream, controller, state) => {\n\ttry {\n\t\tawait nodeImports.finished(stream, {\n\t\t\tcleanup: true,\n\t\t\treadable: true,\n\t\t\twritable: false,\n\t\t\terror: false,\n\t\t});\n\t} catch (error) {\n\t\tstate.error = error;\n\t} finally {\n\t\tcontroller.abort();\n\t}\n};\n\n// Loaded by the Node entrypoint, but not by the browser one.\n// This prevents using dynamic imports.\nexport const nodeImports = {};\n", "import {getAsyncIterable} from './stream.js';\n\nexport const getStreamContents = async (stream, {init, convertChunk, getSize, truncateChunk, addChunk, getFinalChunk, finalize}, {maxBuffer = Number.POSITIVE_INFINITY} = {}) => {\n\tconst asyncIterable = getAsyncIterable(stream);\n\n\tconst state = init();\n\tstate.length = 0;\n\n\ttry {\n\t\tfor await (const chunk of asyncIterable) {\n\t\t\tconst chunkType = getChunkType(chunk);\n\t\t\tconst convertedChunk = convertChunk[chunkType](chunk, state);\n\t\t\tappendChunk({\n\t\t\t\tconvertedChunk,\n\t\t\t\tstate,\n\t\t\t\tgetSize,\n\t\t\t\ttruncateChunk,\n\t\t\t\taddChunk,\n\t\t\t\tmaxBuffer,\n\t\t\t});\n\t\t}\n\n\t\tappendFinalChunk({\n\t\t\tstate,\n\t\t\tconvertChunk,\n\t\t\tgetSize,\n\t\t\ttruncateChunk,\n\t\t\taddChunk,\n\t\t\tgetFinalChunk,\n\t\t\tmaxBuffer,\n\t\t});\n\t\treturn finalize(state);\n\t} catch (error) {\n\t\tconst normalizedError = typeof error === 'object' && error !== null ? error : new Error(error);\n\t\tnormalizedError.bufferedData = finalize(state);\n\t\tthrow normalizedError;\n\t}\n};\n\nconst appendFinalChunk = ({state, getSize, truncateChunk, addChunk, getFinalChunk, maxBuffer}) => {\n\tconst convertedChunk = getFinalChunk(state);\n\tif (convertedChunk !== undefined) {\n\t\tappendChunk({\n\t\t\tconvertedChunk,\n\t\t\tstate,\n\t\t\tgetSize,\n\t\t\ttruncateChunk,\n\t\t\taddChunk,\n\t\t\tmaxBuffer,\n\t\t});\n\t}\n};\n\nconst appendChunk = ({convertedChunk, state, getSize, truncateChunk, addChunk, maxBuffer}) => {\n\tconst chunkSize = getSize(convertedChunk);\n\tconst newLength = state.length + chunkSize;\n\n\tif (newLength <= maxBuffer) {\n\t\taddNewChunk(convertedChunk, state, addChunk, newLength);\n\t\treturn;\n\t}\n\n\tconst truncatedChunk = truncateChunk(convertedChunk, maxBuffer - state.length);\n\n\tif (truncatedChunk !== undefined) {\n\t\taddNewChunk(truncatedChunk, state, addChunk, maxBuffer);\n\t}\n\n\tthrow new MaxBufferError();\n};\n\nconst addNewChunk = (convertedChunk, state, addChunk, newLength) => {\n\tstate.contents = addChunk(convertedChunk, state, newLength);\n\tstate.length = newLength;\n};\n\nconst getChunkType = chunk => {\n\tconst typeOfChunk = typeof chunk;\n\n\tif (typeOfChunk === 'string') {\n\t\treturn 'string';\n\t}\n\n\tif (typeOfChunk !== 'object' || chunk === null) {\n\t\treturn 'others';\n\t}\n\n\tif (globalThis.Buffer?.isBuffer(chunk)) {\n\t\treturn 'buffer';\n\t}\n\n\tconst prototypeName = objectToString.call(chunk);\n\n\tif (prototypeName === '[object ArrayBuffer]') {\n\t\treturn 'arrayBuffer';\n\t}\n\n\tif (prototypeName === '[object DataView]') {\n\t\treturn 'dataView';\n\t}\n\n\tif (\n\t\tNumber.isInteger(chunk.byteLength)\n\t\t&& Number.isInteger(chunk.byteOffset)\n\t\t&& objectToString.call(chunk.buffer) === '[object ArrayBuffer]'\n\t) {\n\t\treturn 'typedArray';\n\t}\n\n\treturn 'others';\n};\n\nconst {toString: objectToString} = Object.prototype;\n\nexport class MaxBufferError extends Error {\n\tname = 'MaxBufferError';\n\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t}\n}\n", "export const identity = value => value;\n\nexport const noop = () => undefined;\n\nexport const getContentsProperty = ({contents}) => contents;\n\nexport const throwObjectStream = chunk => {\n\tthrow new Error(`Streams in object mode are not supported: ${String(chunk)}`);\n};\n\nexport const getLengthProperty = convertedChunk => convertedChunk.length;\n", "import {getStreamContents} from './contents.js';\nimport {identity, noop, getContentsProperty} from './utils.js';\n\nexport async function getStreamAsArray(stream, options) {\n\treturn getStreamContents(stream, arrayMethods, options);\n}\n\nconst initArray = () => ({contents: []});\n\nconst increment = () => 1;\n\nconst addArrayChunk = (convertedChunk, {contents}) => {\n\tcontents.push(convertedChunk);\n\treturn contents;\n};\n\nconst arrayMethods = {\n\tinit: initArray,\n\tconvertChunk: {\n\t\tstring: identity,\n\t\tbuffer: identity,\n\t\tarrayBuffer: identity,\n\t\tdataView: identity,\n\t\ttypedArray: identity,\n\t\tothers: identity,\n\t},\n\tgetSize: increment,\n\ttruncateChunk: noop,\n\taddChunk: addArrayChunk,\n\tgetFinalChunk: noop,\n\tfinalize: getContentsProperty,\n};\n", "import {getStreamContents} from './contents.js';\nimport {noop, throwObjectStream, getLengthProperty} from './utils.js';\n\nexport async function getStreamAsArrayBuffer(stream, options) {\n\treturn getStreamContents(stream, arrayBufferMethods, options);\n}\n\nconst initArrayBuffer = () => ({contents: new ArrayBuffer(0)});\n\nconst useTextEncoder = chunk => textEncoder.encode(chunk);\nconst textEncoder = new TextEncoder();\n\nconst useUint8Array = chunk => new Uint8Array(chunk);\n\nconst useUint8ArrayWithOffset = chunk => new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n\nconst truncateArrayBufferChunk = (convertedChunk, chunkSize) => convertedChunk.slice(0, chunkSize);\n\n// `contents` is an increasingly growing `Uint8Array`.\nconst addArrayBufferChunk = (convertedChunk, {contents, length: previousLength}, length) => {\n\tconst newContents = hasArrayBufferResize() ? resizeArrayBuffer(contents, length) : resizeArrayBufferSlow(contents, length);\n\tnew Uint8Array(newContents).set(convertedChunk, previousLength);\n\treturn newContents;\n};\n\n// Without `ArrayBuffer.resize()`, `contents` size is always a power of 2.\n// This means its last bytes are zeroes (not stream data), which need to be\n// trimmed at the end with `ArrayBuffer.slice()`.\nconst resizeArrayBufferSlow = (contents, length) => {\n\tif (length <= contents.byteLength) {\n\t\treturn contents;\n\t}\n\n\tconst arrayBuffer = new ArrayBuffer(getNewContentsLength(length));\n\tnew Uint8Array(arrayBuffer).set(new Uint8Array(contents), 0);\n\treturn arrayBuffer;\n};\n\n// With `ArrayBuffer.resize()`, `contents` size matches exactly the size of\n// the stream data. It does not include extraneous zeroes to trim at the end.\n// The underlying `ArrayBuffer` does allocate a number of bytes that is a power\n// of 2, but those bytes are only visible after calling `ArrayBuffer.resize()`.\nconst resizeArrayBuffer = (contents, length) => {\n\tif (length <= contents.maxByteLength) {\n\t\tcontents.resize(length);\n\t\treturn contents;\n\t}\n\n\tconst arrayBuffer = new ArrayBuffer(length, {maxByteLength: getNewContentsLength(length)});\n\tnew Uint8Array(arrayBuffer).set(new Uint8Array(contents), 0);\n\treturn arrayBuffer;\n};\n\n// Retrieve the closest `length` that is both >= and a power of 2\nconst getNewContentsLength = length => SCALE_FACTOR ** Math.ceil(Math.log(length) / Math.log(SCALE_FACTOR));\n\nconst SCALE_FACTOR = 2;\n\nconst finalizeArrayBuffer = ({contents, length}) => hasArrayBufferResize() ? contents : contents.slice(0, length);\n\n// `ArrayBuffer.slice()` is slow. When `ArrayBuffer.resize()` is available\n// (Node >=20.0.0, Safari >=16.4 and Chrome), we can use it instead.\n// eslint-disable-next-line no-warning-comments\n// TODO: remove after dropping support for Node 20.\n// eslint-disable-next-line no-warning-comments\n// TODO: use `ArrayBuffer.transferToFixedLength()` instead once it is available\nconst hasArrayBufferResize = () => 'resize' in ArrayBuffer.prototype;\n\nconst arrayBufferMethods = {\n\tinit: initArrayBuffer,\n\tconvertChunk: {\n\t\tstring: useTextEncoder,\n\t\tbuffer: useUint8Array,\n\t\tarrayBuffer: useUint8Array,\n\t\tdataView: useUint8ArrayWithOffset,\n\t\ttypedArray: useUint8ArrayWithOffset,\n\t\tothers: throwObjectStream,\n\t},\n\tgetSize: getLengthProperty,\n\ttruncateChunk: truncateArrayBufferChunk,\n\taddChunk: addArrayBufferChunk,\n\tgetFinalChunk: noop,\n\tfinalize: finalizeArrayBuffer,\n};\n", "import {getStreamContents} from './contents.js';\nimport {\n\tidentity,\n\tgetContentsProperty,\n\tthrowObjectStream,\n\tgetLengthProperty,\n} from './utils.js';\n\nexport async function getStreamAsString(stream, options) {\n\treturn getStreamContents(stream, stringMethods, options);\n}\n\nconst initString = () => ({contents: '', textDecoder: new TextDecoder()});\n\nconst useTextDecoder = (chunk, {textDecoder}) => textDecoder.decode(chunk, {stream: true});\n\nconst addStringChunk = (convertedChunk, {contents}) => contents + convertedChunk;\n\nconst truncateStringChunk = (convertedChunk, chunkSize) => convertedChunk.slice(0, chunkSize);\n\nconst getFinalStringChunk = ({textDecoder}) => {\n\tconst finalChunk = textDecoder.decode();\n\treturn finalChunk === '' ? undefined : finalChunk;\n};\n\nconst stringMethods = {\n\tinit: initString,\n\tconvertChunk: {\n\t\tstring: identity,\n\t\tbuffer: useTextDecoder,\n\t\tarrayBuffer: useTextDecoder,\n\t\tdataView: useTextDecoder,\n\t\ttypedArray: useTextDecoder,\n\t\tothers: throwObjectStream,\n\t},\n\tgetSize: getLengthProperty,\n\ttruncateChunk: truncateStringChunk,\n\taddChunk: addStringChunk,\n\tgetFinalChunk: getFinalStringChunk,\n\tfinalize: getContentsProperty,\n};\n", "import {MaxBufferError} from 'get-stream';\nimport {getStreamName} from '../utils/standard-stream.js';\nimport {getFdSpecificValue} from '../arguments/specific.js';\n\n// When the `maxBuffer` option is hit, a MaxBufferError is thrown.\n// The stream is aborted, then specific information is kept for the error message.\nexport const handleMaxBuffer = ({error, stream, readableObjectMode, lines, encoding, fdNumber}) => {\n\tif (!(error instanceof MaxBufferError)) {\n\t\tthrow error;\n\t}\n\n\tif (fdNumber === 'all') {\n\t\treturn error;\n\t}\n\n\tconst unit = getMaxBufferUnit(readableObjectMode, lines, encoding);\n\terror.maxBufferInfo = {fdNumber, unit};\n\tstream.destroy();\n\tthrow error;\n};\n\nconst getMaxBufferUnit = (readableObjectMode, lines, encoding) => {\n\tif (readableObjectMode) {\n\t\treturn 'objects';\n\t}\n\n\tif (lines) {\n\t\treturn 'lines';\n\t}\n\n\tif (encoding === 'buffer') {\n\t\treturn 'bytes';\n\t}\n\n\treturn 'characters';\n};\n\n// Check the `maxBuffer` option with `result.ipcOutput`\nexport const checkIpcMaxBuffer = (subprocess, ipcOutput, maxBuffer) => {\n\tif (ipcOutput.length !== maxBuffer) {\n\t\treturn;\n\t}\n\n\tconst error = new MaxBufferError();\n\terror.maxBufferInfo = {fdNumber: 'ipc'};\n\tthrow error;\n};\n\n// Error message when `maxBuffer` is hit\nexport const getMaxBufferMessage = (error, maxBuffer) => {\n\tconst {streamName, threshold, unit} = getMaxBufferInfo(error, maxBuffer);\n\treturn `Command's ${streamName} was larger than ${threshold} ${unit}`;\n};\n\nconst getMaxBufferInfo = (error, maxBuffer) => {\n\tif (error?.maxBufferInfo === undefined) {\n\t\treturn {streamName: 'output', threshold: maxBuffer[1], unit: 'bytes'};\n\t}\n\n\tconst {maxBufferInfo: {fdNumber, unit}} = error;\n\tdelete error.maxBufferInfo;\n\n\tconst threshold = getFdSpecificValue(maxBuffer, fdNumber);\n\tif (fdNumber === 'ipc') {\n\t\treturn {streamName: 'IPC output', threshold, unit: 'messages'};\n\t}\n\n\treturn {streamName: getStreamName(fdNumber), threshold, unit};\n};\n\n// The only way to apply `maxBuffer` with `spawnSync()` is to use the native `maxBuffer` option Node.js provides.\n// However, this has multiple limitations, and cannot behave the exact same way as the async behavior.\n// When the `maxBuffer` is hit, a `ENOBUFS` error is thrown.\nexport const isMaxBufferSync = (resultError, output, maxBuffer) => resultError?.code === 'ENOBUFS'\n\t&& output !== null\n\t&& output.some(result => result !== null && result.length > getMaxBufferSync(maxBuffer));\n\n// When `maxBuffer` is hit, ensure the result is truncated\nexport const truncateMaxBufferSync = (result, isMaxBuffer, maxBuffer) => {\n\tif (!isMaxBuffer) {\n\t\treturn result;\n\t}\n\n\tconst maxBufferValue = getMaxBufferSync(maxBuffer);\n\treturn result.length > maxBufferValue ? result.slice(0, maxBufferValue) : result;\n};\n\n// `spawnSync()` does not allow differentiating `maxBuffer` per file descriptor, so we always use `stdout`\nexport const getMaxBufferSync = ([, stdoutMaxBuffer]) => stdoutMaxBuffer;\n", "import {getSignalDescription} from '../terminate/signal.js';\nimport {getDurationMs} from './duration.js';\nimport {getFinalError} from './final-error.js';\nimport {createMessages} from './message.js';\n\n// Object returned on subprocess success\nexport const makeSuccessResult = ({\n\tcommand,\n\tescapedCommand,\n\tstdio,\n\tall,\n\tipcOutput,\n\toptions: {cwd},\n\tstartTime,\n}) => omitUndefinedProperties({\n\tcommand,\n\tescapedCommand,\n\tcwd,\n\tdurationMs: getDurationMs(startTime),\n\tfailed: false,\n\ttimedOut: false,\n\tisCanceled: false,\n\tisGracefullyCanceled: false,\n\tisTerminated: false,\n\tisMaxBuffer: false,\n\tisForcefullyTerminated: false,\n\texitCode: 0,\n\tstdout: stdio[1],\n\tstderr: stdio[2],\n\tall,\n\tstdio,\n\tipcOutput,\n\tpipedFrom: [],\n});\n\n// Object returned on subprocess failure before spawning\nexport const makeEarlyError = ({\n\terror,\n\tcommand,\n\tescapedCommand,\n\tfileDescriptors,\n\toptions,\n\tstartTime,\n\tisSync,\n}) => makeError({\n\terror,\n\tcommand,\n\tescapedCommand,\n\tstartTime,\n\ttimedOut: false,\n\tisCanceled: false,\n\tisGracefullyCanceled: false,\n\tisMaxBuffer: false,\n\tisForcefullyTerminated: false,\n\tstdio: Array.from({length: fileDescriptors.length}),\n\tipcOutput: [],\n\toptions,\n\tisSync,\n});\n\n// Object returned on subprocess failure\nexport const makeError = ({\n\terror: originalError,\n\tcommand,\n\tescapedCommand,\n\tstartTime,\n\ttimedOut,\n\tisCanceled,\n\tisGracefullyCanceled,\n\tisMaxBuffer,\n\tisForcefullyTerminated,\n\texitCode: rawExitCode,\n\tsignal: rawSignal,\n\tstdio,\n\tall,\n\tipcOutput,\n\toptions: {\n\t\ttimeoutDuration,\n\t\ttimeout = timeoutDuration,\n\t\tforceKillAfterDelay,\n\t\tkillSignal,\n\t\tcwd,\n\t\tmaxBuffer,\n\t},\n\tisSync,\n}) => {\n\tconst {exitCode, signal, signalDescription} = normalizeExitPayload(rawExitCode, rawSignal);\n\tconst {originalMessage, shortMessage, message} = createMessages({\n\t\tstdio,\n\t\tall,\n\t\tipcOutput,\n\t\toriginalError,\n\t\tsignal,\n\t\tsignalDescription,\n\t\texitCode,\n\t\tescapedCommand,\n\t\ttimedOut,\n\t\tisCanceled,\n\t\tisGracefullyCanceled,\n\t\tisMaxBuffer,\n\t\tisForcefullyTerminated,\n\t\tforceKillAfterDelay,\n\t\tkillSignal,\n\t\tmaxBuffer,\n\t\ttimeout,\n\t\tcwd,\n\t});\n\tconst error = getFinalError(originalError, message, isSync);\n\tObject.assign(error, getErrorProperties({\n\t\terror,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstartTime,\n\t\ttimedOut,\n\t\tisCanceled,\n\t\tisGracefullyCanceled,\n\t\tisMaxBuffer,\n\t\tisForcefullyTerminated,\n\t\texitCode,\n\t\tsignal,\n\t\tsignalDescription,\n\t\tstdio,\n\t\tall,\n\t\tipcOutput,\n\t\tcwd,\n\t\toriginalMessage,\n\t\tshortMessage,\n\t}));\n\treturn error;\n};\n\nconst getErrorProperties = ({\n\terror,\n\tcommand,\n\tescapedCommand,\n\tstartTime,\n\ttimedOut,\n\tisCanceled,\n\tisGracefullyCanceled,\n\tisMaxBuffer,\n\tisForcefullyTerminated,\n\texitCode,\n\tsignal,\n\tsignalDescription,\n\tstdio,\n\tall,\n\tipcOutput,\n\tcwd,\n\toriginalMessage,\n\tshortMessage,\n}) => omitUndefinedProperties({\n\tshortMessage,\n\toriginalMessage,\n\tcommand,\n\tescapedCommand,\n\tcwd,\n\tdurationMs: getDurationMs(startTime),\n\tfailed: true,\n\ttimedOut,\n\tisCanceled,\n\tisGracefullyCanceled,\n\tisTerminated: signal !== undefined,\n\tisMaxBuffer,\n\tisForcefullyTerminated,\n\texitCode,\n\tsignal,\n\tsignalDescription,\n\tcode: error.cause?.code,\n\tstdout: stdio[1],\n\tstderr: stdio[2],\n\tall,\n\tstdio,\n\tipcOutput,\n\tpipedFrom: [],\n});\n\nconst omitUndefinedProperties = result => Object.fromEntries(Object.entries(result).filter(([, value]) => value !== undefined));\n\n// `signal` and `exitCode` emitted on `subprocess.on('exit')` event can be `null`.\n// We normalize them to `undefined`\nconst normalizeExitPayload = (rawExitCode, rawSignal) => {\n\tconst exitCode = rawExitCode === null ? undefined : rawExitCode;\n\tconst signal = rawSignal === null ? undefined : rawSignal;\n\tconst signalDescription = signal === undefined ? undefined : getSignalDescription(rawSignal);\n\treturn {exitCode, signal, signalDescription};\n};\n", "const toZeroIfInfinity = value => Number.isFinite(value) ? value : 0;\n\nfunction parseNumber(milliseconds) {\n\treturn {\n\t\tdays: Math.trunc(milliseconds / 86_400_000),\n\t\thours: Math.trunc(milliseconds / 3_600_000 % 24),\n\t\tminutes: Math.trunc(milliseconds / 60_000 % 60),\n\t\tseconds: Math.trunc(milliseconds / 1000 % 60),\n\t\tmilliseconds: Math.trunc(milliseconds % 1000),\n\t\tmicroseconds: Math.trunc(toZeroIfInfinity(milliseconds * 1000) % 1000),\n\t\tnanoseconds: Math.trunc(toZeroIfInfinity(milliseconds * 1e6) % 1000),\n\t};\n}\n\nfunction parseBigint(milliseconds) {\n\treturn {\n\t\tdays: milliseconds / 86_400_000n,\n\t\thours: milliseconds / 3_600_000n % 24n,\n\t\tminutes: milliseconds / 60_000n % 60n,\n\t\tseconds: milliseconds / 1000n % 60n,\n\t\tmilliseconds: milliseconds % 1000n,\n\t\tmicroseconds: 0n,\n\t\tnanoseconds: 0n,\n\t};\n}\n\nexport default function parseMilliseconds(milliseconds) {\n\tswitch (typeof milliseconds) {\n\t\tcase 'number': {\n\t\t\tif (Number.isFinite(milliseconds)) {\n\t\t\t\treturn parseNumber(milliseconds);\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'bigint': {\n\t\t\treturn parseBigint(milliseconds);\n\t\t}\n\n\t\t// No default\n\t}\n\n\tthrow new TypeError('Expected a finite number or bigint');\n}\n", "import parseMilliseconds from 'parse-ms';\n\nconst isZero = value => value === 0 || value === 0n;\nconst pluralize = (word, count) => (count === 1 || count === 1n) ? word : `${word}s`;\n\nconst SECOND_ROUNDING_EPSILON = 0.000_000_1;\nconst ONE_DAY_IN_MILLISECONDS = 24n * 60n * 60n * 1000n;\n\nexport default function prettyMilliseconds(milliseconds, options) {\n\tconst isBigInt = typeof milliseconds === 'bigint';\n\tif (!isBigInt && !Number.isFinite(milliseconds)) {\n\t\tthrow new TypeError('Expected a finite number or bigint');\n\t}\n\n\toptions = {...options};\n\n\tconst sign = milliseconds < 0 ? '-' : '';\n\tmilliseconds = milliseconds < 0 ? -milliseconds : milliseconds; // Cannot use `Math.abs()` because of BigInt support.\n\n\tif (options.colonNotation) {\n\t\toptions.compact = false;\n\t\toptions.formatSubMilliseconds = false;\n\t\toptions.separateMilliseconds = false;\n\t\toptions.verbose = false;\n\t}\n\n\tif (options.compact) {\n\t\toptions.unitCount = 1;\n\t\toptions.secondsDecimalDigits = 0;\n\t\toptions.millisecondsDecimalDigits = 0;\n\t}\n\n\tlet result = [];\n\n\tconst floorDecimals = (value, decimalDigits) => {\n\t\tconst flooredInterimValue = Math.floor((value * (10 ** decimalDigits)) + SECOND_ROUNDING_EPSILON);\n\t\tconst flooredValue = Math.round(flooredInterimValue) / (10 ** decimalDigits);\n\t\treturn flooredValue.toFixed(decimalDigits);\n\t};\n\n\tconst add = (value, long, short, valueString) => {\n\t\tif (\n\t\t\t(result.length === 0 || !options.colonNotation)\n\t\t\t&& isZero(value)\n\t\t\t&& !(options.colonNotation && short === 'm')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalueString ??= String(value);\n\t\tif (options.colonNotation) {\n\t\t\tconst wholeDigits = valueString.includes('.') ? valueString.split('.')[0].length : valueString.length;\n\t\t\tconst minLength = result.length > 0 ? 2 : 1;\n\t\t\tvalueString = '0'.repeat(Math.max(0, minLength - wholeDigits)) + valueString;\n\t\t} else {\n\t\t\tvalueString += options.verbose ? ' ' + pluralize(long, value) : short;\n\t\t}\n\n\t\tresult.push(valueString);\n\t};\n\n\tconst parsed = parseMilliseconds(milliseconds);\n\tconst days = BigInt(parsed.days);\n\n\tif (options.hideYearAndDays) {\n\t\tadd((BigInt(days) * 24n) + BigInt(parsed.hours), 'hour', 'h');\n\t} else {\n\t\tif (options.hideYear) {\n\t\t\tadd(days, 'day', 'd');\n\t\t} else {\n\t\t\tadd(days / 365n, 'year', 'y');\n\t\t\tadd(days % 365n, 'day', 'd');\n\t\t}\n\n\t\tadd(Number(parsed.hours), 'hour', 'h');\n\t}\n\n\tadd(Number(parsed.minutes), 'minute', 'm');\n\n\tif (!options.hideSeconds) {\n\t\tif (\n\t\t\toptions.separateMilliseconds\n\t\t\t|| options.formatSubMilliseconds\n\t\t\t|| (!options.colonNotation && milliseconds < 1000 && !options.subSecondsAsDecimals)\n\t\t) {\n\t\t\tconst seconds = Number(parsed.seconds);\n\t\t\tconst milliseconds = Number(parsed.milliseconds);\n\t\t\tconst microseconds = Number(parsed.microseconds);\n\t\t\tconst nanoseconds = Number(parsed.nanoseconds);\n\n\t\t\tadd(seconds, 'second', 's');\n\n\t\t\tif (options.formatSubMilliseconds) {\n\t\t\t\tadd(milliseconds, 'millisecond', 'ms');\n\t\t\t\tadd(microseconds, 'microsecond', '\u00B5s');\n\t\t\t\tadd(nanoseconds, 'nanosecond', 'ns');\n\t\t\t} else {\n\t\t\t\tconst millisecondsAndBelow\n\t\t\t\t\t= milliseconds\n\t\t\t\t\t+ (microseconds / 1000)\n\t\t\t\t\t+ (nanoseconds / 1e6);\n\n\t\t\t\tconst millisecondsDecimalDigits\n\t\t\t\t\t= typeof options.millisecondsDecimalDigits === 'number'\n\t\t\t\t\t\t? options.millisecondsDecimalDigits\n\t\t\t\t\t\t: 0;\n\n\t\t\t\tconst roundedMilliseconds = millisecondsAndBelow >= 1\n\t\t\t\t\t? Math.round(millisecondsAndBelow)\n\t\t\t\t\t: Math.ceil(millisecondsAndBelow);\n\n\t\t\t\tconst millisecondsString = millisecondsDecimalDigits\n\t\t\t\t\t? millisecondsAndBelow.toFixed(millisecondsDecimalDigits)\n\t\t\t\t\t: roundedMilliseconds;\n\n\t\t\t\tadd(\n\t\t\t\t\tNumber.parseFloat(millisecondsString),\n\t\t\t\t\t'millisecond',\n\t\t\t\t\t'ms',\n\t\t\t\t\tmillisecondsString,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst seconds = (\n\t\t\t\t(isBigInt ? Number(milliseconds % ONE_DAY_IN_MILLISECONDS) : milliseconds)\n\t\t\t\t/ 1000\n\t\t\t) % 60;\n\t\t\tconst secondsDecimalDigits\n\t\t\t\t= typeof options.secondsDecimalDigits === 'number'\n\t\t\t\t\t? options.secondsDecimalDigits\n\t\t\t\t\t: 1;\n\t\t\tconst secondsFixed = floorDecimals(seconds, secondsDecimalDigits);\n\t\t\tconst secondsString = options.keepDecimalsOnWholeSeconds\n\t\t\t\t? secondsFixed\n\t\t\t\t: secondsFixed.replace(/\\.0+$/, '');\n\t\t\tadd(Number.parseFloat(secondsString), 'second', 's', secondsString);\n\t\t}\n\t}\n\n\tif (result.length === 0) {\n\t\treturn sign + '0' + (options.verbose ? ' milliseconds' : 'ms');\n\t}\n\n\tconst separator = options.colonNotation ? ':' : ' ';\n\tif (typeof options.unitCount === 'number') {\n\t\tresult = result.slice(0, Math.max(options.unitCount, 1));\n\t}\n\n\treturn sign + result.join(separator);\n}\n", "import {verboseLog} from './log.js';\n\n// When `verbose` is `short|full|custom`, print each command's error when it fails\nexport const logError = (result, verboseInfo) => {\n\tif (result.failed) {\n\t\tverboseLog({\n\t\t\ttype: 'error',\n\t\t\tverboseMessage: result.shortMessage,\n\t\t\tverboseInfo,\n\t\t\tresult,\n\t\t});\n\t}\n};\n", "import prettyMs from 'pretty-ms';\nimport {isVerbose} from './values.js';\nimport {verboseLog} from './log.js';\nimport {logError} from './error.js';\n\n// When `verbose` is `short|full|custom`, print each command's completion, duration and error\nexport const logResult = (result, verboseInfo) => {\n\tif (!isVerbose(verboseInfo)) {\n\t\treturn;\n\t}\n\n\tlogError(result, verboseInfo);\n\tlogDuration(result, verboseInfo);\n};\n\nconst logDuration = (result, verboseInfo) => {\n\tconst verboseMessage = `(done in ${prettyMs(result.durationMs)})`;\n\tverboseLog({\n\t\ttype: 'duration',\n\t\tverboseMessage,\n\t\tverboseInfo,\n\t\tresult,\n\t});\n};\n", "import {logResult} from '../verbose/complete.js';\n\n// Applies the `reject` option.\n// Also print the final log line with `verbose`.\nexport const handleResult = (result, verboseInfo, {reject}) => {\n\tlogResult(result, verboseInfo);\n\n\tif (result.failed && reject) {\n\t\tthrow result;\n\t}\n\n\treturn result;\n};\n", "import {readFileSync} from 'node:fs';\nimport {bufferToUint8Array} from '../utils/uint-array.js';\nimport {handleStdio} from './handle.js';\nimport {TYPE_TO_MESSAGE} from './type.js';\n\n// Normalize `input`, `inputFile`, `stdin`, `stdout` and `stderr` options, before spawning, in sync mode\nexport const handleStdioSync = (options, verboseInfo) => handleStdio(addPropertiesSync, options, verboseInfo, true);\n\nconst forbiddenIfSync = ({type, optionName}) => {\n\tthrowInvalidSyncValue(optionName, TYPE_TO_MESSAGE[type]);\n};\n\nconst forbiddenNativeIfSync = ({optionName, value}) => {\n\tif (value === 'ipc' || value === 'overlapped') {\n\t\tthrowInvalidSyncValue(optionName, `\"${value}\"`);\n\t}\n\n\treturn {};\n};\n\nconst throwInvalidSyncValue = (optionName, value) => {\n\tthrow new TypeError(`The \\`${optionName}\\` option cannot be ${value} with synchronous methods.`);\n};\n\n// Create streams used internally for redirecting when using specific values for the `std*` options, in sync mode.\n// For example, `stdin: {file}` reads the file synchronously, then passes it as the `input` option.\nconst addProperties = {\n\tgenerator() {},\n\tasyncGenerator: forbiddenIfSync,\n\twebStream: forbiddenIfSync,\n\tnodeStream: forbiddenIfSync,\n\twebTransform: forbiddenIfSync,\n\tduplex: forbiddenIfSync,\n\tasyncIterable: forbiddenIfSync,\n\tnative: forbiddenNativeIfSync,\n};\n\nconst addPropertiesSync = {\n\tinput: {\n\t\t...addProperties,\n\t\tfileUrl: ({value}) => ({contents: [bufferToUint8Array(readFileSync(value))]}),\n\t\tfilePath: ({value: {file}}) => ({contents: [bufferToUint8Array(readFileSync(file))]}),\n\t\tfileNumber: forbiddenIfSync,\n\t\titerable: ({value}) => ({contents: [...value]}),\n\t\tstring: ({value}) => ({contents: [value]}),\n\t\tuint8Array: ({value}) => ({contents: [value]}),\n\t},\n\toutput: {\n\t\t...addProperties,\n\t\tfileUrl: ({value}) => ({path: value}),\n\t\tfilePath: ({value: {file, append}}) => ({path: file, append}),\n\t\tfileNumber: ({value}) => ({path: value}),\n\t\titerable: forbiddenIfSync,\n\t\tstring: forbiddenIfSync,\n\t\tuint8Array: forbiddenIfSync,\n\t},\n};\n", "import {isStream as isNodeStream, isDuplexStream} from 'is-stream';\nimport isPlainObj from 'is-plain-obj';\nimport {isUint8Array} from '../utils/uint-array.js';\n\n// The `stdin`/`stdout`/`stderr` option can be of many types. This detects it.\nexport const getStdioItemType = (value, optionName) => {\n\tif (isAsyncGenerator(value)) {\n\t\treturn 'asyncGenerator';\n\t}\n\n\tif (isSyncGenerator(value)) {\n\t\treturn 'generator';\n\t}\n\n\tif (isUrl(value)) {\n\t\treturn 'fileUrl';\n\t}\n\n\tif (isFilePathObject(value)) {\n\t\treturn 'filePath';\n\t}\n\n\tif (isWebStream(value)) {\n\t\treturn 'webStream';\n\t}\n\n\tif (isNodeStream(value, {checkOpen: false})) {\n\t\treturn 'native';\n\t}\n\n\tif (isUint8Array(value)) {\n\t\treturn 'uint8Array';\n\t}\n\n\tif (isAsyncIterableObject(value)) {\n\t\treturn 'asyncIterable';\n\t}\n\n\tif (isIterableObject(value)) {\n\t\treturn 'iterable';\n\t}\n\n\tif (isTransformStream(value)) {\n\t\treturn getTransformStreamType({transform: value}, optionName);\n\t}\n\n\tif (isTransformOptions(value)) {\n\t\treturn getTransformObjectType(value, optionName);\n\t}\n\n\treturn 'native';\n};\n\nconst getTransformObjectType = (value, optionName) => {\n\tif (isDuplexStream(value.transform, {checkOpen: false})) {\n\t\treturn getDuplexType(value, optionName);\n\t}\n\n\tif (isTransformStream(value.transform)) {\n\t\treturn getTransformStreamType(value, optionName);\n\t}\n\n\treturn getGeneratorObjectType(value, optionName);\n};\n\nconst getDuplexType = (value, optionName) => {\n\tvalidateNonGeneratorType(value, optionName, 'Duplex stream');\n\treturn 'duplex';\n};\n\nconst getTransformStreamType = (value, optionName) => {\n\tvalidateNonGeneratorType(value, optionName, 'web TransformStream');\n\treturn 'webTransform';\n};\n\nconst validateNonGeneratorType = ({final, binary, objectMode}, optionName, typeName) => {\n\tcheckUndefinedOption(final, `${optionName}.final`, typeName);\n\tcheckUndefinedOption(binary, `${optionName}.binary`, typeName);\n\tcheckBooleanOption(objectMode, `${optionName}.objectMode`);\n};\n\nconst checkUndefinedOption = (value, optionName, typeName) => {\n\tif (value !== undefined) {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option can only be defined when using a generator, not a ${typeName}.`);\n\t}\n};\n\nconst getGeneratorObjectType = ({transform, final, binary, objectMode}, optionName) => {\n\tif (transform !== undefined && !isGenerator(transform)) {\n\t\tthrow new TypeError(`The \\`${optionName}.transform\\` option must be a generator, a Duplex stream or a web TransformStream.`);\n\t}\n\n\tif (isDuplexStream(final, {checkOpen: false})) {\n\t\tthrow new TypeError(`The \\`${optionName}.final\\` option must not be a Duplex stream.`);\n\t}\n\n\tif (isTransformStream(final)) {\n\t\tthrow new TypeError(`The \\`${optionName}.final\\` option must not be a web TransformStream.`);\n\t}\n\n\tif (final !== undefined && !isGenerator(final)) {\n\t\tthrow new TypeError(`The \\`${optionName}.final\\` option must be a generator.`);\n\t}\n\n\tcheckBooleanOption(binary, `${optionName}.binary`);\n\tcheckBooleanOption(objectMode, `${optionName}.objectMode`);\n\n\treturn isAsyncGenerator(transform) || isAsyncGenerator(final) ? 'asyncGenerator' : 'generator';\n};\n\nconst checkBooleanOption = (value, optionName) => {\n\tif (value !== undefined && typeof value !== 'boolean') {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option must use a boolean.`);\n\t}\n};\n\nconst isGenerator = value => isAsyncGenerator(value) || isSyncGenerator(value);\nexport const isAsyncGenerator = value => Object.prototype.toString.call(value) === '[object AsyncGeneratorFunction]';\nconst isSyncGenerator = value => Object.prototype.toString.call(value) === '[object GeneratorFunction]';\nconst isTransformOptions = value => isPlainObj(value)\n\t&& (value.transform !== undefined || value.final !== undefined);\n\nexport const isUrl = value => Object.prototype.toString.call(value) === '[object URL]';\nexport const isRegularUrl = value => isUrl(value) && value.protocol !== 'file:';\n\nconst isFilePathObject = value => isPlainObj(value)\n\t&& Object.keys(value).length > 0\n\t&& Object.keys(value).every(key => FILE_PATH_KEYS.has(key))\n\t&& isFilePathString(value.file);\nconst FILE_PATH_KEYS = new Set(['file', 'append']);\nexport const isFilePathString = file => typeof file === 'string';\n\nexport const isUnknownStdioString = (type, value) => type === 'native'\n\t&& typeof value === 'string'\n\t&& !KNOWN_STDIO_STRINGS.has(value);\nconst KNOWN_STDIO_STRINGS = new Set(['ipc', 'ignore', 'inherit', 'overlapped', 'pipe']);\n\nconst isReadableStream = value => Object.prototype.toString.call(value) === '[object ReadableStream]';\nexport const isWritableStream = value => Object.prototype.toString.call(value) === '[object WritableStream]';\nconst isWebStream = value => isReadableStream(value) || isWritableStream(value);\nconst isTransformStream = value => isReadableStream(value?.readable) && isWritableStream(value?.writable);\n\nconst isAsyncIterableObject = value => isObject(value) && typeof value[Symbol.asyncIterator] === 'function';\nconst isIterableObject = value => isObject(value) && typeof value[Symbol.iterator] === 'function';\nconst isObject = value => typeof value === 'object' && value !== null;\n\n// Types which modify `subprocess.std*`\nexport const TRANSFORM_TYPES = new Set(['generator', 'asyncGenerator', 'duplex', 'webTransform']);\n// Types which write to a file or a file descriptor\nexport const FILE_TYPES = new Set(['fileUrl', 'filePath', 'fileNumber']);\n// When two file descriptors of this type share the same target, we need to do some special logic\nexport const SPECIAL_DUPLICATE_TYPES_SYNC = new Set(['fileUrl', 'filePath']);\nexport const SPECIAL_DUPLICATE_TYPES = new Set([...SPECIAL_DUPLICATE_TYPES_SYNC, 'webStream', 'nodeStream']);\n// Do not allow two file descriptors of this type sharing the same target\nexport const FORBID_DUPLICATE_TYPES = new Set(['webTransform', 'duplex']);\n\n// Convert types to human-friendly strings for error messages\nexport const TYPE_TO_MESSAGE = {\n\tgenerator: 'a generator',\n\tasyncGenerator: 'an async generator',\n\tfileUrl: 'a file URL',\n\tfilePath: 'a file path string',\n\tfileNumber: 'a file descriptor number',\n\twebStream: 'a web stream',\n\tnodeStream: 'a Node.js stream',\n\twebTransform: 'a web TransformStream',\n\tduplex: 'a Duplex stream',\n\tnative: 'any value',\n\titerable: 'an iterable',\n\tasyncIterable: 'an async iterable',\n\tstring: 'a string',\n\tuint8Array: 'a Uint8Array',\n};\n", "import {TRANSFORM_TYPES} from '../stdio/type.js';\n\n/*\nRetrieve the `objectMode`s of a single transform.\n`objectMode` determines the return value's type, i.e. the `readableObjectMode`.\nThe chunk argument's type is based on the previous generator's return value, i.e. the `writableObjectMode` is based on the previous `readableObjectMode`.\nThe last input's generator is read by `subprocess.stdin` which:\n- should not be in `objectMode` for performance reasons.\n- can only be strings, Buffers and Uint8Arrays.\nTherefore its `readableObjectMode` must be `false`.\nThe same applies to the first output's generator's `writableObjectMode`.\n*/\nexport const getTransformObjectModes = (objectMode, index, newTransforms, direction) => direction === 'output'\n\t? getOutputObjectModes(objectMode, index, newTransforms)\n\t: getInputObjectModes(objectMode, index, newTransforms);\n\nconst getOutputObjectModes = (objectMode, index, newTransforms) => {\n\tconst writableObjectMode = index !== 0 && newTransforms[index - 1].value.readableObjectMode;\n\tconst readableObjectMode = objectMode ?? writableObjectMode;\n\treturn {writableObjectMode, readableObjectMode};\n};\n\nconst getInputObjectModes = (objectMode, index, newTransforms) => {\n\tconst writableObjectMode = index === 0\n\t\t? objectMode === true\n\t\t: newTransforms[index - 1].value.readableObjectMode;\n\tconst readableObjectMode = index !== newTransforms.length - 1 && (objectMode ?? writableObjectMode);\n\treturn {writableObjectMode, readableObjectMode};\n};\n\n// Retrieve the `objectMode` of a file descriptor, e.g. `stdout` or `stderr`\nexport const getFdObjectMode = (stdioItems, direction) => {\n\tconst lastTransform = stdioItems.findLast(({type}) => TRANSFORM_TYPES.has(type));\n\tif (lastTransform === undefined) {\n\t\treturn false;\n\t}\n\n\treturn direction === 'input'\n\t\t? lastTransform.value.writableObjectMode\n\t\t: lastTransform.value.readableObjectMode;\n};\n", "import isPlainObj from 'is-plain-obj';\nimport {BINARY_ENCODINGS} from '../arguments/encoding-option.js';\nimport {TRANSFORM_TYPES} from '../stdio/type.js';\nimport {getTransformObjectModes} from './object-mode.js';\n\n// Transforms generators/duplex/TransformStream can have multiple shapes.\n// This normalizes it and applies default values.\nexport const normalizeTransforms = (stdioItems, optionName, direction, options) => [\n\t...stdioItems.filter(({type}) => !TRANSFORM_TYPES.has(type)),\n\t...getTransforms(stdioItems, optionName, direction, options),\n];\n\nconst getTransforms = (stdioItems, optionName, direction, {encoding}) => {\n\tconst transforms = stdioItems.filter(({type}) => TRANSFORM_TYPES.has(type));\n\tconst newTransforms = Array.from({length: transforms.length});\n\n\tfor (const [index, stdioItem] of Object.entries(transforms)) {\n\t\tnewTransforms[index] = normalizeTransform({\n\t\t\tstdioItem,\n\t\t\tindex: Number(index),\n\t\t\tnewTransforms,\n\t\t\toptionName,\n\t\t\tdirection,\n\t\t\tencoding,\n\t\t});\n\t}\n\n\treturn sortTransforms(newTransforms, direction);\n};\n\nconst normalizeTransform = ({stdioItem, stdioItem: {type}, index, newTransforms, optionName, direction, encoding}) => {\n\tif (type === 'duplex') {\n\t\treturn normalizeDuplex({stdioItem, optionName});\n\t}\n\n\tif (type === 'webTransform') {\n\t\treturn normalizeTransformStream({\n\t\t\tstdioItem,\n\t\t\tindex,\n\t\t\tnewTransforms,\n\t\t\tdirection,\n\t\t});\n\t}\n\n\treturn normalizeGenerator({\n\t\tstdioItem,\n\t\tindex,\n\t\tnewTransforms,\n\t\tdirection,\n\t\tencoding,\n\t});\n};\n\nconst normalizeDuplex = ({\n\tstdioItem,\n\tstdioItem: {\n\t\tvalue: {\n\t\t\ttransform,\n\t\t\ttransform: {writableObjectMode, readableObjectMode},\n\t\t\tobjectMode = readableObjectMode,\n\t\t},\n\t},\n\toptionName,\n}) => {\n\tif (objectMode && !readableObjectMode) {\n\t\tthrow new TypeError(`The \\`${optionName}.objectMode\\` option can only be \\`true\\` if \\`new Duplex({objectMode: true})\\` is used.`);\n\t}\n\n\tif (!objectMode && readableObjectMode) {\n\t\tthrow new TypeError(`The \\`${optionName}.objectMode\\` option cannot be \\`false\\` if \\`new Duplex({objectMode: true})\\` is used.`);\n\t}\n\n\treturn {\n\t\t...stdioItem,\n\t\tvalue: {transform, writableObjectMode, readableObjectMode},\n\t};\n};\n\nconst normalizeTransformStream = ({stdioItem, stdioItem: {value}, index, newTransforms, direction}) => {\n\tconst {transform, objectMode} = isPlainObj(value) ? value : {transform: value};\n\tconst {writableObjectMode, readableObjectMode} = getTransformObjectModes(objectMode, index, newTransforms, direction);\n\treturn ({\n\t\t...stdioItem,\n\t\tvalue: {transform, writableObjectMode, readableObjectMode},\n\t});\n};\n\nconst normalizeGenerator = ({stdioItem, stdioItem: {value}, index, newTransforms, direction, encoding}) => {\n\tconst {\n\t\ttransform,\n\t\tfinal,\n\t\tbinary: binaryOption = false,\n\t\tpreserveNewlines = false,\n\t\tobjectMode,\n\t} = isPlainObj(value) ? value : {transform: value};\n\tconst binary = binaryOption || BINARY_ENCODINGS.has(encoding);\n\tconst {writableObjectMode, readableObjectMode} = getTransformObjectModes(objectMode, index, newTransforms, direction);\n\treturn {\n\t\t...stdioItem,\n\t\tvalue: {\n\t\t\ttransform,\n\t\t\tfinal,\n\t\t\tbinary,\n\t\t\tpreserveNewlines,\n\t\t\twritableObjectMode,\n\t\t\treadableObjectMode,\n\t\t},\n\t};\n};\n\nconst sortTransforms = (newTransforms, direction) => direction === 'input' ? newTransforms.reverse() : newTransforms;\n", "import process from 'node:process';\nimport {\n\tisStream as isNodeStream,\n\tisReadableStream as isNodeReadableStream,\n\tisWritableStream as isNodeWritableStream,\n} from 'is-stream';\nimport {isWritableStream} from './type.js';\n\n// For `stdio[fdNumber]` beyond stdin/stdout/stderr, we need to guess whether the value passed is intended for inputs or outputs.\n// This allows us to know whether to pipe _into_ or _from_ the stream.\n// When `stdio[fdNumber]` is a single value, this guess is fairly straightforward.\n// However, when it is an array instead, we also need to make sure the different values are not incompatible with each other.\nexport const getStreamDirection = (stdioItems, fdNumber, optionName) => {\n\tconst directions = stdioItems.map(stdioItem => getStdioItemDirection(stdioItem, fdNumber));\n\n\tif (directions.includes('input') && directions.includes('output')) {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option must not be an array of both readable and writable values.`);\n\t}\n\n\treturn directions.find(Boolean) ?? DEFAULT_DIRECTION;\n};\n\nconst getStdioItemDirection = ({type, value}, fdNumber) => KNOWN_DIRECTIONS[fdNumber] ?? guessStreamDirection[type](value);\n\n// `stdin`/`stdout`/`stderr` have a known direction\nconst KNOWN_DIRECTIONS = ['input', 'output', 'output'];\n\nconst anyDirection = () => undefined;\nconst alwaysInput = () => 'input';\n\n// `string` can only be added through the `input` option, i.e. does not need to be handled here\nconst guessStreamDirection = {\n\tgenerator: anyDirection,\n\tasyncGenerator: anyDirection,\n\tfileUrl: anyDirection,\n\tfilePath: anyDirection,\n\titerable: alwaysInput,\n\tasyncIterable: alwaysInput,\n\tuint8Array: alwaysInput,\n\twebStream: value => isWritableStream(value) ? 'output' : 'input',\n\tnodeStream(value) {\n\t\tif (!isNodeReadableStream(value, {checkOpen: false})) {\n\t\t\treturn 'output';\n\t\t}\n\n\t\treturn isNodeWritableStream(value, {checkOpen: false}) ? undefined : 'input';\n\t},\n\twebTransform: anyDirection,\n\tduplex: anyDirection,\n\tnative(value) {\n\t\tconst standardStreamDirection = getStandardStreamDirection(value);\n\t\tif (standardStreamDirection !== undefined) {\n\t\t\treturn standardStreamDirection;\n\t\t}\n\n\t\tif (isNodeStream(value, {checkOpen: false})) {\n\t\t\treturn guessStreamDirection.nodeStream(value);\n\t\t}\n\t},\n};\n\nconst getStandardStreamDirection = value => {\n\tif ([0, process.stdin].includes(value)) {\n\t\treturn 'input';\n\t}\n\n\tif ([1, 2, process.stdout, process.stderr].includes(value)) {\n\t\treturn 'output';\n\t}\n};\n\n// When ambiguous, we initially keep the direction as `undefined`.\n// This allows arrays of `stdio` values to resolve the ambiguity.\n// For example, `stdio[3]: DuplexStream` is ambiguous, but `stdio[3]: [DuplexStream, WritableStream]` is not.\n// When the ambiguity remains, we default to `output` since it is the most common use case for additional file descriptors.\nconst DEFAULT_DIRECTION = 'output';\n", "// The `ipc` option adds an `ipc` item to the `stdio` option\nexport const normalizeIpcStdioArray = (stdioArray, ipc) => ipc && !stdioArray.includes('ipc')\n\t? [...stdioArray, 'ipc']\n\t: stdioArray;\n", "import {STANDARD_STREAMS_ALIASES} from '../utils/standard-stream.js';\nimport {normalizeIpcStdioArray} from '../ipc/array.js';\nimport {isFullVerbose} from '../verbose/values.js';\n\n// Add support for `stdin`/`stdout`/`stderr` as an alias for `stdio`.\n// Also normalize the `stdio` option.\nexport const normalizeStdioOption = ({stdio, ipc, buffer, ...options}, verboseInfo, isSync) => {\n\tconst stdioArray = getStdioArray(stdio, options).map((stdioOption, fdNumber) => addDefaultValue(stdioOption, fdNumber));\n\treturn isSync\n\t\t? normalizeStdioSync(stdioArray, buffer, verboseInfo)\n\t\t: normalizeIpcStdioArray(stdioArray, ipc);\n};\n\nconst getStdioArray = (stdio, options) => {\n\tif (stdio === undefined) {\n\t\treturn STANDARD_STREAMS_ALIASES.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${STANDARD_STREAMS_ALIASES.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio];\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, STANDARD_STREAMS_ALIASES.length);\n\treturn Array.from({length}, (_, fdNumber) => stdio[fdNumber]);\n};\n\nconst hasAlias = options => STANDARD_STREAMS_ALIASES.some(alias => options[alias] !== undefined);\n\nconst addDefaultValue = (stdioOption, fdNumber) => {\n\tif (Array.isArray(stdioOption)) {\n\t\treturn stdioOption.map(item => addDefaultValue(item, fdNumber));\n\t}\n\n\tif (stdioOption === null || stdioOption === undefined) {\n\t\treturn fdNumber >= STANDARD_STREAMS_ALIASES.length ? 'ignore' : 'pipe';\n\t}\n\n\treturn stdioOption;\n};\n\n// Using `buffer: false` with synchronous methods implies `stdout`/`stderr`: `ignore`.\n// Unless the output is needed, e.g. due to `verbose: 'full'` or to redirecting to a file.\nconst normalizeStdioSync = (stdioArray, buffer, verboseInfo) => stdioArray.map((stdioOption, fdNumber) =>\n\t!buffer[fdNumber]\n\t&& fdNumber !== 0\n\t&& !isFullVerbose(verboseInfo, fdNumber)\n\t&& isOutputPipeOnly(stdioOption)\n\t\t? 'ignore'\n\t\t: stdioOption);\n\nconst isOutputPipeOnly = stdioOption => stdioOption === 'pipe'\n\t|| (Array.isArray(stdioOption) && stdioOption.every(item => item === 'pipe'));\n", "import {readFileSync} from 'node:fs';\nimport tty from 'node:tty';\nimport {isStream as isNodeStream} from 'is-stream';\nimport {STANDARD_STREAMS} from '../utils/standard-stream.js';\nimport {bufferToUint8Array} from '../utils/uint-array.js';\nimport {serializeOptionValue} from '../arguments/fd-options.js';\n\n// When we use multiple `stdio` values for the same streams, we pass 'pipe' to `child_process.spawn()`.\n// We then emulate the piping done by core Node.js.\n// To do so, we transform the following values:\n//  - Node.js streams are marked as `type: nodeStream`\n//  - 'inherit' becomes `process.stdin|stdout|stderr`\n//  - any file descriptor integer becomes `process.stdio[fdNumber]`\n// All of the above transformations tell Execa to perform manual piping.\nexport const handleNativeStream = ({stdioItem, stdioItem: {type}, isStdioArray, fdNumber, direction, isSync}) => {\n\tif (!isStdioArray || type !== 'native') {\n\t\treturn stdioItem;\n\t}\n\n\treturn isSync\n\t\t? handleNativeStreamSync({stdioItem, fdNumber, direction})\n\t\t: handleNativeStreamAsync({stdioItem, fdNumber});\n};\n\n// Synchronous methods use a different logic.\n// 'inherit', file descriptors and process.std* are handled by readFileSync()/writeFileSync().\nconst handleNativeStreamSync = ({stdioItem, stdioItem: {value, optionName}, fdNumber, direction}) => {\n\tconst targetFd = getTargetFd({\n\t\tvalue,\n\t\toptionName,\n\t\tfdNumber,\n\t\tdirection,\n\t});\n\tif (targetFd !== undefined) {\n\t\treturn targetFd;\n\t}\n\n\tif (isNodeStream(value, {checkOpen: false})) {\n\t\tthrow new TypeError(`The \\`${optionName}: Stream\\` option cannot both be an array and include a stream with synchronous methods.`);\n\t}\n\n\treturn stdioItem;\n};\n\nconst getTargetFd = ({value, optionName, fdNumber, direction}) => {\n\tconst targetFdNumber = getTargetFdNumber(value, fdNumber);\n\tif (targetFdNumber === undefined) {\n\t\treturn;\n\t}\n\n\tif (direction === 'output') {\n\t\treturn {type: 'fileNumber', value: targetFdNumber, optionName};\n\t}\n\n\tif (tty.isatty(targetFdNumber)) {\n\t\tthrow new TypeError(`The \\`${optionName}: ${serializeOptionValue(value)}\\` option is invalid: it cannot be a TTY with synchronous methods.`);\n\t}\n\n\treturn {type: 'uint8Array', value: bufferToUint8Array(readFileSync(targetFdNumber)), optionName};\n};\n\nconst getTargetFdNumber = (value, fdNumber) => {\n\tif (value === 'inherit') {\n\t\treturn fdNumber;\n\t}\n\n\tif (typeof value === 'number') {\n\t\treturn value;\n\t}\n\n\tconst standardStreamIndex = STANDARD_STREAMS.indexOf(value);\n\tif (standardStreamIndex !== -1) {\n\t\treturn standardStreamIndex;\n\t}\n};\n\nconst handleNativeStreamAsync = ({stdioItem, stdioItem: {value, optionName}, fdNumber}) => {\n\tif (value === 'inherit') {\n\t\treturn {type: 'nodeStream', value: getStandardStream(fdNumber, value, optionName), optionName};\n\t}\n\n\tif (typeof value === 'number') {\n\t\treturn {type: 'nodeStream', value: getStandardStream(value, value, optionName), optionName};\n\t}\n\n\tif (isNodeStream(value, {checkOpen: false})) {\n\t\treturn {type: 'nodeStream', value, optionName};\n\t}\n\n\treturn stdioItem;\n};\n\n// Node.js does not allow to easily retrieve file descriptors beyond stdin/stdout/stderr as streams.\n//  - `fs.createReadStream()`/`fs.createWriteStream()` with the `fd` option do not work with character devices that use blocking reads/writes (such as interactive TTYs).\n//  - Using a TCP `Socket` would work but be rather complex to implement.\n// Since this is an edge case, we simply throw an error message.\n// See https://github.com/sindresorhus/execa/pull/643#discussion_r1435905707\nconst getStandardStream = (fdNumber, value, optionName) => {\n\tconst standardStream = STANDARD_STREAMS[fdNumber];\n\n\tif (standardStream === undefined) {\n\t\tthrow new TypeError(`The \\`${optionName}: ${value}\\` option is invalid: no such standard stream.`);\n\t}\n\n\treturn standardStream;\n};\n", "import {isReadableStream} from 'is-stream';\nimport {isUint8Array} from '../utils/uint-array.js';\nimport {isUrl, isFilePathString} from './type.js';\n\n// Append the `stdin` option with the `input` and `inputFile` options\nexport const handleInputOptions = ({input, inputFile}, fdNumber) => fdNumber === 0\n\t? [\n\t\t...handleInputOption(input),\n\t\t...handleInputFileOption(inputFile),\n\t]\n\t: [];\n\nconst handleInputOption = input => input === undefined ? [] : [{\n\ttype: getInputType(input),\n\tvalue: input,\n\toptionName: 'input',\n}];\n\nconst getInputType = input => {\n\tif (isReadableStream(input, {checkOpen: false})) {\n\t\treturn 'nodeStream';\n\t}\n\n\tif (typeof input === 'string') {\n\t\treturn 'string';\n\t}\n\n\tif (isUint8Array(input)) {\n\t\treturn 'uint8Array';\n\t}\n\n\tthrow new Error('The `input` option must be a string, a Uint8Array or a Node.js Readable stream.');\n};\n\nconst handleInputFileOption = inputFile => inputFile === undefined ? [] : [{\n\t...getInputFileType(inputFile),\n\toptionName: 'inputFile',\n}];\n\nconst getInputFileType = inputFile => {\n\tif (isUrl(inputFile)) {\n\t\treturn {type: 'fileUrl', value: inputFile};\n\t}\n\n\tif (isFilePathString(inputFile)) {\n\t\treturn {type: 'filePath', value: {file: inputFile}};\n\t}\n\n\tthrow new Error('The `inputFile` option must be a file path string or a file URL.');\n};\n", "import {\n\tSPECIAL_DUPLICATE_TYPES_SYNC,\n\tSPECIAL_DUPLICATE_TYPES,\n\tFORBID_DUPLICATE_TYPES,\n\tTYPE_TO_MESSAGE,\n} from './type.js';\n\n// Duplicates in the same file descriptor is most likely an error.\n// However, this can be useful with generators.\nexport const filterDuplicates = stdioItems => stdioItems.filter((stdioItemOne, indexOne) =>\n\tstdioItems.every((stdioItemTwo, indexTwo) => stdioItemOne.value !== stdioItemTwo.value\n\t\t|| indexOne >= indexTwo\n\t\t|| stdioItemOne.type === 'generator'\n\t\t|| stdioItemOne.type === 'asyncGenerator'));\n\n// Check if two file descriptors are sharing the same target.\n// For example `{stdout: {file: './output.txt'}, stderr: {file: './output.txt'}}`.\nexport const getDuplicateStream = ({stdioItem: {type, value, optionName}, direction, fileDescriptors, isSync}) => {\n\tconst otherStdioItems = getOtherStdioItems(fileDescriptors, type);\n\tif (otherStdioItems.length === 0) {\n\t\treturn;\n\t}\n\n\tif (isSync) {\n\t\tvalidateDuplicateStreamSync({\n\t\t\totherStdioItems,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t\toptionName,\n\t\t\tdirection,\n\t\t});\n\t\treturn;\n\t}\n\n\tif (SPECIAL_DUPLICATE_TYPES.has(type)) {\n\t\treturn getDuplicateStreamInstance({\n\t\t\totherStdioItems,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t\toptionName,\n\t\t\tdirection,\n\t\t});\n\t}\n\n\tif (FORBID_DUPLICATE_TYPES.has(type)) {\n\t\tvalidateDuplicateTransform({\n\t\t\totherStdioItems,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t\toptionName,\n\t\t});\n\t}\n};\n\n// Values shared by multiple file descriptors\nconst getOtherStdioItems = (fileDescriptors, type) => fileDescriptors\n\t.flatMap(({direction, stdioItems}) => stdioItems\n\t\t.filter(stdioItem => stdioItem.type === type)\n\t\t.map((stdioItem => ({...stdioItem, direction}))));\n\n// With `execaSync()`, do not allow setting a file path both in input and output\nconst validateDuplicateStreamSync = ({otherStdioItems, type, value, optionName, direction}) => {\n\tif (SPECIAL_DUPLICATE_TYPES_SYNC.has(type)) {\n\t\tgetDuplicateStreamInstance({\n\t\t\totherStdioItems,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t\toptionName,\n\t\t\tdirection,\n\t\t});\n\t}\n};\n\n// When two file descriptors share the file or stream, we need to re-use the same underlying stream.\n// Otherwise, the stream would be closed twice when piping ends.\n// This is only an issue with output file descriptors.\n// This is not a problem with generator functions since those create a new instance for each file descriptor.\n// We also forbid input and output file descriptors sharing the same file or stream, since that does not make sense.\nconst getDuplicateStreamInstance = ({otherStdioItems, type, value, optionName, direction}) => {\n\tconst duplicateStdioItems = otherStdioItems.filter(stdioItem => hasSameValue(stdioItem, value));\n\tif (duplicateStdioItems.length === 0) {\n\t\treturn;\n\t}\n\n\tconst differentStdioItem = duplicateStdioItems.find(stdioItem => stdioItem.direction !== direction);\n\tthrowOnDuplicateStream(differentStdioItem, optionName, type);\n\n\treturn direction === 'output' ? duplicateStdioItems[0].stream : undefined;\n};\n\nconst hasSameValue = ({type, value}, secondValue) => {\n\tif (type === 'filePath') {\n\t\treturn value.file === secondValue.file;\n\t}\n\n\tif (type === 'fileUrl') {\n\t\treturn value.href === secondValue.href;\n\t}\n\n\treturn value === secondValue;\n};\n\n// We do not allow two file descriptors to share the same Duplex or TransformStream.\n// This is because those are set directly to `subprocess.std*`.\n// For example, this could result in `subprocess.stdout` and `subprocess.stderr` being the same value.\n// This means reading from either would get data from both stdout and stderr.\nconst validateDuplicateTransform = ({otherStdioItems, type, value, optionName}) => {\n\tconst duplicateStdioItem = otherStdioItems.find(({value: {transform}}) => transform === value.transform);\n\tthrowOnDuplicateStream(duplicateStdioItem, optionName, type);\n};\n\nconst throwOnDuplicateStream = (stdioItem, optionName, type) => {\n\tif (stdioItem !== undefined) {\n\t\tthrow new TypeError(`The \\`${stdioItem.optionName}\\` and \\`${optionName}\\` options must not target ${TYPE_TO_MESSAGE[type]} that is the same.`);\n\t}\n};\n", "import {getStreamName, isStandardStream} from '../utils/standard-stream.js';\nimport {normalizeTransforms} from '../transform/normalize.js';\nimport {getFdObjectMode} from '../transform/object-mode.js';\nimport {\n\tgetStdioItemType,\n\tisRegularUrl,\n\tisUnknownStdioString,\n\tFILE_TYPES,\n} from './type.js';\nimport {getStreamDirection} from './direction.js';\nimport {normalizeStdioOption} from './stdio-option.js';\nimport {handleNativeStream} from './native.js';\nimport {handleInputOptions} from './input-option.js';\nimport {filterDuplicates, getDuplicateStream} from './duplicate.js';\n\n// Handle `input`, `inputFile`, `stdin`, `stdout` and `stderr` options, before spawning, in async/sync mode\n// They are converted into an array of `fileDescriptors`.\n// Each `fileDescriptor` is normalized, validated and contains all information necessary for further handling.\nexport const handleStdio = (addProperties, options, verboseInfo, isSync) => {\n\tconst stdio = normalizeStdioOption(options, verboseInfo, isSync);\n\tconst initialFileDescriptors = stdio.map((stdioOption, fdNumber) => getFileDescriptor({\n\t\tstdioOption,\n\t\tfdNumber,\n\t\toptions,\n\t\tisSync,\n\t}));\n\tconst fileDescriptors = getFinalFileDescriptors({\n\t\tinitialFileDescriptors,\n\t\taddProperties,\n\t\toptions,\n\t\tisSync,\n\t});\n\toptions.stdio = fileDescriptors.map(({stdioItems}) => forwardStdio(stdioItems));\n\treturn fileDescriptors;\n};\n\nconst getFileDescriptor = ({stdioOption, fdNumber, options, isSync}) => {\n\tconst optionName = getStreamName(fdNumber);\n\tconst {stdioItems: initialStdioItems, isStdioArray} = initializeStdioItems({\n\t\tstdioOption,\n\t\tfdNumber,\n\t\toptions,\n\t\toptionName,\n\t});\n\tconst direction = getStreamDirection(initialStdioItems, fdNumber, optionName);\n\tconst stdioItems = initialStdioItems.map(stdioItem => handleNativeStream({\n\t\tstdioItem,\n\t\tisStdioArray,\n\t\tfdNumber,\n\t\tdirection,\n\t\tisSync,\n\t}));\n\tconst normalizedStdioItems = normalizeTransforms(stdioItems, optionName, direction, options);\n\tconst objectMode = getFdObjectMode(normalizedStdioItems, direction);\n\tvalidateFileObjectMode(normalizedStdioItems, objectMode);\n\treturn {direction, objectMode, stdioItems: normalizedStdioItems};\n};\n\n// We make sure passing an array with a single item behaves the same as passing that item without an array.\n// This is what users would expect.\n// For example, `stdout: ['ignore']` behaves the same as `stdout: 'ignore'`.\nconst initializeStdioItems = ({stdioOption, fdNumber, options, optionName}) => {\n\tconst values = Array.isArray(stdioOption) ? stdioOption : [stdioOption];\n\tconst initialStdioItems = [\n\t\t...values.map(value => initializeStdioItem(value, optionName)),\n\t\t...handleInputOptions(options, fdNumber),\n\t];\n\n\tconst stdioItems = filterDuplicates(initialStdioItems);\n\tconst isStdioArray = stdioItems.length > 1;\n\tvalidateStdioArray(stdioItems, isStdioArray, optionName);\n\tvalidateStreams(stdioItems);\n\treturn {stdioItems, isStdioArray};\n};\n\nconst initializeStdioItem = (value, optionName) => ({\n\ttype: getStdioItemType(value, optionName),\n\tvalue,\n\toptionName,\n});\n\nconst validateStdioArray = (stdioItems, isStdioArray, optionName) => {\n\tif (stdioItems.length === 0) {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option must not be an empty array.`);\n\t}\n\n\tif (!isStdioArray) {\n\t\treturn;\n\t}\n\n\tfor (const {value, optionName} of stdioItems) {\n\t\tif (INVALID_STDIO_ARRAY_OPTIONS.has(value)) {\n\t\t\tthrow new Error(`The \\`${optionName}\\` option must not include \\`${value}\\`.`);\n\t\t}\n\t}\n};\n\n// Using those `stdio` values together with others for the same stream does not make sense, so we make it fail.\n// However, we do allow it if the array has a single item.\nconst INVALID_STDIO_ARRAY_OPTIONS = new Set(['ignore', 'ipc']);\n\nconst validateStreams = stdioItems => {\n\tfor (const stdioItem of stdioItems) {\n\t\tvalidateFileStdio(stdioItem);\n\t}\n};\n\nconst validateFileStdio = ({type, value, optionName}) => {\n\tif (isRegularUrl(value)) {\n\t\tthrow new TypeError(`The \\`${optionName}: URL\\` option must use the \\`file:\\` scheme.\nFor example, you can use the \\`pathToFileURL()\\` method of the \\`url\\` core module.`);\n\t}\n\n\tif (isUnknownStdioString(type, value)) {\n\t\tthrow new TypeError(`The \\`${optionName}: { file: '...' }\\` option must be used instead of \\`${optionName}: '...'\\`.`);\n\t}\n};\n\nconst validateFileObjectMode = (stdioItems, objectMode) => {\n\tif (!objectMode) {\n\t\treturn;\n\t}\n\n\tconst fileStdioItem = stdioItems.find(({type}) => FILE_TYPES.has(type));\n\tif (fileStdioItem !== undefined) {\n\t\tthrow new TypeError(`The \\`${fileStdioItem.optionName}\\` option cannot use both files and transforms in objectMode.`);\n\t}\n};\n\n// Some `stdio` values require Execa to create streams.\n// For example, file paths create file read/write streams.\n// Those transformations are specified in `addProperties`, which is both direction-specific and type-specific.\nconst getFinalFileDescriptors = ({initialFileDescriptors, addProperties, options, isSync}) => {\n\tconst fileDescriptors = [];\n\n\ttry {\n\t\tfor (const fileDescriptor of initialFileDescriptors) {\n\t\t\tfileDescriptors.push(getFinalFileDescriptor({\n\t\t\t\tfileDescriptor,\n\t\t\t\tfileDescriptors,\n\t\t\t\taddProperties,\n\t\t\t\toptions,\n\t\t\t\tisSync,\n\t\t\t}));\n\t\t}\n\n\t\treturn fileDescriptors;\n\t} catch (error) {\n\t\tcleanupCustomStreams(fileDescriptors);\n\t\tthrow error;\n\t}\n};\n\nconst getFinalFileDescriptor = ({\n\tfileDescriptor: {direction, objectMode, stdioItems},\n\tfileDescriptors,\n\taddProperties,\n\toptions,\n\tisSync,\n}) => {\n\tconst finalStdioItems = stdioItems.map(stdioItem => addStreamProperties({\n\t\tstdioItem,\n\t\taddProperties,\n\t\tdirection,\n\t\toptions,\n\t\tfileDescriptors,\n\t\tisSync,\n\t}));\n\treturn {direction, objectMode, stdioItems: finalStdioItems};\n};\n\nconst addStreamProperties = ({stdioItem, addProperties, direction, options, fileDescriptors, isSync}) => {\n\tconst duplicateStream = getDuplicateStream({\n\t\tstdioItem,\n\t\tdirection,\n\t\tfileDescriptors,\n\t\tisSync,\n\t});\n\n\tif (duplicateStream !== undefined) {\n\t\treturn {...stdioItem, stream: duplicateStream};\n\t}\n\n\treturn {\n\t\t...stdioItem,\n\t\t...addProperties[direction][stdioItem.type](stdioItem, options),\n\t};\n};\n\n// The stream error handling is performed by the piping logic above, which cannot be performed before subprocess spawning.\n// If the subprocess spawning fails (e.g. due to an invalid command), the streams need to be manually destroyed.\n// We need to create those streams before subprocess spawning, in case their creation fails, e.g. when passing an invalid generator as argument.\n// Like this, an exception would be thrown, which would prevent spawning a subprocess.\nexport const cleanupCustomStreams = fileDescriptors => {\n\tfor (const {stdioItems} of fileDescriptors) {\n\t\tfor (const {stream} of stdioItems) {\n\t\t\tif (stream !== undefined && !isStandardStream(stream)) {\n\t\t\t\tstream.destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n// When the `std*: Iterable | WebStream | URL | filePath`, `input` or `inputFile` option is used, we pipe to `subprocess.std*`.\n// When the `std*: Array` option is used, we emulate some of the native values ('inherit', Node.js stream and file descriptor integer). To do so, we also need to pipe to `subprocess.std*`.\n// Therefore the `std*` options must be either `pipe` or `overlapped`. Other values do not set `subprocess.std*`.\nconst forwardStdio = stdioItems => {\n\tif (stdioItems.length > 1) {\n\t\treturn stdioItems.some(({value}) => value === 'overlapped') ? 'overlapped' : 'pipe';\n\t}\n\n\tconst [{type, value}] = stdioItems;\n\treturn type === 'native' ? value : 'pipe';\n};\n", "import stripFinalNewlineFunction from 'strip-final-newline';\n\n// Apply `stripFinalNewline` option, which applies to `result.stdout|stderr|all|stdio[*]`.\n// If the `lines` option is used, it is applied on each line, but using a different function.\nexport const stripNewline = (value, {stripFinalNewline}, fdNumber) => getStripFinalNewline(stripFinalNewline, fdNumber) && value !== undefined && !Array.isArray(value)\n\t? stripFinalNewlineFunction(value)\n\t: value;\n\n// Retrieve `stripFinalNewline` option value, including with `subprocess.all`\nexport const getStripFinalNewline = (stripFinalNewline, fdNumber) => fdNumber === 'all'\n\t? stripFinalNewline[1] || stripFinalNewline[2]\n\t: stripFinalNewline[fdNumber];\n", "import {Transform, getDefaultHighWaterMark} from 'node:stream';\nimport {isAsyncGenerator} from '../stdio/type.js';\nimport {getSplitLinesGenerator, getAppendNewlineGenerator} from './split.js';\nimport {getValidateTransformInput, getValidateTransformReturn} from './validate.js';\nimport {getEncodingTransformGenerator} from './encoding-transform.js';\nimport {\n\tpushChunks,\n\ttransformChunk,\n\tfinalChunks,\n\tdestroyTransform,\n} from './run-async.js';\nimport {\n\tpushChunksSync,\n\ttransformChunkSync,\n\tfinalChunksSync,\n\trunTransformSync,\n} from './run-sync.js';\n\n/*\nGenerators can be used to transform/filter standard streams.\n\nGenerators have a simple syntax, yet allows all of the following:\n- Sharing `state` between chunks\n- Flushing logic, by using a `final` function\n- Asynchronous logic\n- Emitting multiple chunks from a single source chunk, even if spaced in time, by using multiple `yield`\n- Filtering, by using no `yield`\n\nTherefore, there is no need to allow Node.js or web transform streams.\n\nThe `highWaterMark` is kept as the default value, since this is what `subprocess.std*` uses.\n\nChunks are currently processed serially. We could add a `concurrency` option to parallelize in the future.\n\nTransform an array of generator functions into a `Transform` stream.\n`Duplex.from(generator)` cannot be used because it does not allow setting the `objectMode` and `highWaterMark`.\n*/\nexport const generatorToStream = ({\n\tvalue,\n\tvalue: {transform, final, writableObjectMode, readableObjectMode},\n\toptionName,\n}, {encoding}) => {\n\tconst state = {};\n\tconst generators = addInternalGenerators(value, encoding, optionName);\n\n\tconst transformAsync = isAsyncGenerator(transform);\n\tconst finalAsync = isAsyncGenerator(final);\n\tconst transformMethod = transformAsync\n\t\t? pushChunks.bind(undefined, transformChunk, state)\n\t\t: pushChunksSync.bind(undefined, transformChunkSync);\n\tconst finalMethod = transformAsync || finalAsync\n\t\t? pushChunks.bind(undefined, finalChunks, state)\n\t\t: pushChunksSync.bind(undefined, finalChunksSync);\n\tconst destroyMethod = transformAsync || finalAsync\n\t\t? destroyTransform.bind(undefined, state)\n\t\t: undefined;\n\n\tconst stream = new Transform({\n\t\twritableObjectMode,\n\t\twritableHighWaterMark: getDefaultHighWaterMark(writableObjectMode),\n\t\treadableObjectMode,\n\t\treadableHighWaterMark: getDefaultHighWaterMark(readableObjectMode),\n\t\ttransform(chunk, encoding, done) {\n\t\t\ttransformMethod([chunk, generators, 0], this, done);\n\t\t},\n\t\tflush(done) {\n\t\t\tfinalMethod([generators], this, done);\n\t\t},\n\t\tdestroy: destroyMethod,\n\t});\n\treturn {stream};\n};\n\n// Applies transform generators in sync mode\nexport const runGeneratorsSync = (chunks, stdioItems, encoding, isInput) => {\n\tconst generators = stdioItems.filter(({type}) => type === 'generator');\n\tconst reversedGenerators = isInput ? generators.reverse() : generators;\n\n\tfor (const {value, optionName} of reversedGenerators) {\n\t\tconst generators = addInternalGenerators(value, encoding, optionName);\n\t\tchunks = runTransformSync(generators, chunks);\n\t}\n\n\treturn chunks;\n};\n\n// Generators used internally to convert the chunk type, validate it, and split into lines\nconst addInternalGenerators = (\n\t{transform, final, binary, writableObjectMode, readableObjectMode, preserveNewlines},\n\tencoding,\n\toptionName,\n) => {\n\tconst state = {};\n\treturn [\n\t\t{transform: getValidateTransformInput(writableObjectMode, optionName)},\n\t\tgetEncodingTransformGenerator(binary, encoding, writableObjectMode),\n\t\tgetSplitLinesGenerator(binary, preserveNewlines, writableObjectMode, state),\n\t\t{transform, final},\n\t\t{transform: getValidateTransformReturn(readableObjectMode, optionName)},\n\t\tgetAppendNewlineGenerator({\n\t\t\tbinary,\n\t\t\tpreserveNewlines,\n\t\t\treadableObjectMode,\n\t\t\tstate,\n\t\t}),\n\t].filter(Boolean);\n};\n", "// Split chunks line-wise for generators passed to the `std*` options\nexport const getSplitLinesGenerator = (binary, preserveNewlines, skipped, state) => binary || skipped\n\t? undefined\n\t: initializeSplitLines(preserveNewlines, state);\n\n// Same but for synchronous methods\nexport const splitLinesSync = (chunk, preserveNewlines, objectMode) => objectMode\n\t? chunk.flatMap(item => splitLinesItemSync(item, preserveNewlines))\n\t: splitLinesItemSync(chunk, preserveNewlines);\n\nconst splitLinesItemSync = (chunk, preserveNewlines) => {\n\tconst {transform, final} = initializeSplitLines(preserveNewlines, {});\n\treturn [...transform(chunk), ...final()];\n};\n\nconst initializeSplitLines = (preserveNewlines, state) => {\n\tstate.previousChunks = '';\n\treturn {\n\t\ttransform: splitGenerator.bind(undefined, state, preserveNewlines),\n\t\tfinal: linesFinal.bind(undefined, state),\n\t};\n};\n\n// This imperative logic is much faster than using `String.split()` and uses very low memory.\nconst splitGenerator = function * (state, preserveNewlines, chunk) {\n\tif (typeof chunk !== 'string') {\n\t\tyield chunk;\n\t\treturn;\n\t}\n\n\tlet {previousChunks} = state;\n\tlet start = -1;\n\n\tfor (let end = 0; end < chunk.length; end += 1) {\n\t\tif (chunk[end] === '\\n') {\n\t\t\tconst newlineLength = getNewlineLength(chunk, end, preserveNewlines, state);\n\t\t\tlet line = chunk.slice(start + 1, end + 1 - newlineLength);\n\n\t\t\tif (previousChunks.length > 0) {\n\t\t\t\tline = concatString(previousChunks, line);\n\t\t\t\tpreviousChunks = '';\n\t\t\t}\n\n\t\t\tyield line;\n\t\t\tstart = end;\n\t\t}\n\t}\n\n\tif (start !== chunk.length - 1) {\n\t\tpreviousChunks = concatString(previousChunks, chunk.slice(start + 1));\n\t}\n\n\tstate.previousChunks = previousChunks;\n};\n\nconst getNewlineLength = (chunk, end, preserveNewlines, state) => {\n\tif (preserveNewlines) {\n\t\treturn 0;\n\t}\n\n\tstate.isWindowsNewline = end !== 0 && chunk[end - 1] === '\\r';\n\treturn state.isWindowsNewline ? 2 : 1;\n};\n\nconst linesFinal = function * ({previousChunks}) {\n\tif (previousChunks.length > 0) {\n\t\tyield previousChunks;\n\t}\n};\n\n// Unless `preserveNewlines: true` is used, we strip the newline of each line.\n// This re-adds them after the user `transform` code has run.\nexport const getAppendNewlineGenerator = ({binary, preserveNewlines, readableObjectMode, state}) => binary || preserveNewlines || readableObjectMode\n\t? undefined\n\t: {transform: appendNewlineGenerator.bind(undefined, state)};\n\nconst appendNewlineGenerator = function * ({isWindowsNewline = false}, chunk) {\n\tconst {unixNewline, windowsNewline, LF, concatBytes} = typeof chunk === 'string' ? linesStringInfo : linesUint8ArrayInfo;\n\n\tif (chunk.at(-1) === LF) {\n\t\tyield chunk;\n\t\treturn;\n\t}\n\n\tconst newline = isWindowsNewline ? windowsNewline : unixNewline;\n\tyield concatBytes(chunk, newline);\n};\n\nconst concatString = (firstChunk, secondChunk) => `${firstChunk}${secondChunk}`;\n\nconst linesStringInfo = {\n\twindowsNewline: '\\r\\n',\n\tunixNewline: '\\n',\n\tLF: '\\n',\n\tconcatBytes: concatString,\n};\n\nconst concatUint8Array = (firstChunk, secondChunk) => {\n\tconst chunk = new Uint8Array(firstChunk.length + secondChunk.length);\n\tchunk.set(firstChunk, 0);\n\tchunk.set(secondChunk, firstChunk.length);\n\treturn chunk;\n};\n\nconst linesUint8ArrayInfo = {\n\twindowsNewline: new Uint8Array([0x0D, 0x0A]),\n\tunixNewline: new Uint8Array([0x0A]),\n\tLF: 0x0A,\n\tconcatBytes: concatUint8Array,\n};\n", "import {Buffer} from 'node:buffer';\nimport {isUint8Array} from '../utils/uint-array.js';\n\n// Validate the type of chunk argument passed to transform generators\nexport const getValidateTransformInput = (writableObjectMode, optionName) => writableObjectMode\n\t? undefined\n\t: validateStringTransformInput.bind(undefined, optionName);\n\nconst validateStringTransformInput = function * (optionName, chunk) {\n\tif (typeof chunk !== 'string' && !isUint8Array(chunk) && !Buffer.isBuffer(chunk)) {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option's transform must use \"objectMode: true\" to receive as input: ${typeof chunk}.`);\n\t}\n\n\tyield chunk;\n};\n\n// Validate the type of the value returned by transform generators\nexport const getValidateTransformReturn = (readableObjectMode, optionName) => readableObjectMode\n\t? validateObjectTransformReturn.bind(undefined, optionName)\n\t: validateStringTransformReturn.bind(undefined, optionName);\n\nconst validateObjectTransformReturn = function * (optionName, chunk) {\n\tvalidateEmptyReturn(optionName, chunk);\n\tyield chunk;\n};\n\nconst validateStringTransformReturn = function * (optionName, chunk) {\n\tvalidateEmptyReturn(optionName, chunk);\n\n\tif (typeof chunk !== 'string' && !isUint8Array(chunk)) {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option's function must yield a string or an Uint8Array, not ${typeof chunk}.`);\n\t}\n\n\tyield chunk;\n};\n\nconst validateEmptyReturn = (optionName, chunk) => {\n\tif (chunk === null || chunk === undefined) {\n\t\tthrow new TypeError(`The \\`${optionName}\\` option's function must not call \\`yield ${chunk}\\`.\nInstead, \\`yield\\` should either be called with a value, or not be called at all. For example:\n  if (condition) { yield value; }`);\n\t}\n};\n", "import {Buffer} from 'node:buffer';\nimport {StringDecoder} from 'node:string_decoder';\nimport {isUint8Array, bufferToUint8Array} from '../utils/uint-array.js';\n\n/*\nWhen using binary encodings, add an internal generator that converts chunks from `Buffer` to `string` or `Uint8Array`.\nChunks might be Buffer, Uint8Array or strings since:\n- `subprocess.stdout|stderr` emits Buffers\n- `subprocess.stdin.write()` accepts Buffer, Uint8Array or string\n- Previous generators might return Uint8Array or string\n\nHowever, those are converted to Buffer:\n- on writes: `Duplex.writable` `decodeStrings: true` default option\n- on reads: `Duplex.readable` `readableEncoding: null` default option\n*/\nexport const getEncodingTransformGenerator = (binary, encoding, skipped) => {\n\tif (skipped) {\n\t\treturn;\n\t}\n\n\tif (binary) {\n\t\treturn {transform: encodingUint8ArrayGenerator.bind(undefined, new TextEncoder())};\n\t}\n\n\tconst stringDecoder = new StringDecoder(encoding);\n\treturn {\n\t\ttransform: encodingStringGenerator.bind(undefined, stringDecoder),\n\t\tfinal: encodingStringFinal.bind(undefined, stringDecoder),\n\t};\n};\n\nconst encodingUint8ArrayGenerator = function * (textEncoder, chunk) {\n\tif (Buffer.isBuffer(chunk)) {\n\t\tyield bufferToUint8Array(chunk);\n\t} else if (typeof chunk === 'string') {\n\t\tyield textEncoder.encode(chunk);\n\t} else {\n\t\tyield chunk;\n\t}\n};\n\nconst encodingStringGenerator = function * (stringDecoder, chunk) {\n\tyield isUint8Array(chunk) ? stringDecoder.write(chunk) : chunk;\n};\n\nconst encodingStringFinal = function * (stringDecoder) {\n\tconst lastChunk = stringDecoder.end();\n\tif (lastChunk !== '') {\n\t\tyield lastChunk;\n\t}\n};\n", "import {callbackify} from 'node:util';\n\n// Applies a series of generator functions asynchronously\nexport const pushChunks = callbackify(async (getChunks, state, getChunksArguments, transformStream) => {\n\tstate.currentIterable = getChunks(...getChunksArguments);\n\n\ttry {\n\t\tfor await (const chunk of state.currentIterable) {\n\t\t\ttransformStream.push(chunk);\n\t\t}\n\t} finally {\n\t\tdelete state.currentIterable;\n\t}\n});\n\n// For each new chunk, apply each `transform()` method\nexport const transformChunk = async function * (chunk, generators, index) {\n\tif (index === generators.length) {\n\t\tyield chunk;\n\t\treturn;\n\t}\n\n\tconst {transform = identityGenerator} = generators[index];\n\tfor await (const transformedChunk of transform(chunk)) {\n\t\tyield * transformChunk(transformedChunk, generators, index + 1);\n\t}\n};\n\n// At the end, apply each `final()` method, followed by the `transform()` method of the next transforms\nexport const finalChunks = async function * (generators) {\n\tfor (const [index, {final}] of Object.entries(generators)) {\n\t\tyield * generatorFinalChunks(final, Number(index), generators);\n\t}\n};\n\nconst generatorFinalChunks = async function * (final, index, generators) {\n\tif (final === undefined) {\n\t\treturn;\n\t}\n\n\tfor await (const finalChunk of final()) {\n\t\tyield * transformChunk(finalChunk, generators, index + 1);\n\t}\n};\n\n// Cancel any ongoing async generator when the Transform is destroyed, e.g. when the subprocess errors\nexport const destroyTransform = callbackify(async ({currentIterable}, error) => {\n\tif (currentIterable !== undefined) {\n\t\tawait (error ? currentIterable.throw(error) : currentIterable.return());\n\t\treturn;\n\t}\n\n\tif (error) {\n\t\tthrow error;\n\t}\n});\n\nconst identityGenerator = function * (chunk) {\n\tyield chunk;\n};\n", "// Duplicate the code from `run-async.js` but as synchronous functions\nexport const pushChunksSync = (getChunksSync, getChunksArguments, transformStream, done) => {\n\ttry {\n\t\tfor (const chunk of getChunksSync(...getChunksArguments)) {\n\t\t\ttransformStream.push(chunk);\n\t\t}\n\n\t\tdone();\n\t} catch (error) {\n\t\tdone(error);\n\t}\n};\n\n// Run synchronous generators with `execaSync()`\nexport const runTransformSync = (generators, chunks) => [\n\t...chunks.flatMap(chunk => [...transformChunkSync(chunk, generators, 0)]),\n\t...finalChunksSync(generators),\n];\n\nexport const transformChunkSync = function * (chunk, generators, index) {\n\tif (index === generators.length) {\n\t\tyield chunk;\n\t\treturn;\n\t}\n\n\tconst {transform = identityGenerator} = generators[index];\n\tfor (const transformedChunk of transform(chunk)) {\n\t\tyield * transformChunkSync(transformedChunk, generators, index + 1);\n\t}\n};\n\nexport const finalChunksSync = function * (generators) {\n\tfor (const [index, {final}] of Object.entries(generators)) {\n\t\tyield * generatorFinalChunksSync(final, Number(index), generators);\n\t}\n};\n\nconst generatorFinalChunksSync = function * (final, index, generators) {\n\tif (final === undefined) {\n\t\treturn;\n\t}\n\n\tfor (const finalChunk of final()) {\n\t\tyield * transformChunkSync(finalChunk, generators, index + 1);\n\t}\n};\n\nconst identityGenerator = function * (chunk) {\n\tyield chunk;\n};\n", "import {runGeneratorsSync} from '../transform/generator.js';\nimport {joinToUint8Array, isUint8Array} from '../utils/uint-array.js';\nimport {TYPE_TO_MESSAGE} from '../stdio/type.js';\n\n// Apply `stdin`/`input`/`inputFile` options, before spawning, in sync mode, by converting it to the `input` option\nexport const addInputOptionsSync = (fileDescriptors, options) => {\n\tfor (const fdNumber of getInputFdNumbers(fileDescriptors)) {\n\t\taddInputOptionSync(fileDescriptors, fdNumber, options);\n\t}\n};\n\nconst getInputFdNumbers = fileDescriptors => new Set(Object.entries(fileDescriptors)\n\t.filter(([, {direction}]) => direction === 'input')\n\t.map(([fdNumber]) => Number(fdNumber)));\n\nconst addInputOptionSync = (fileDescriptors, fdNumber, options) => {\n\tconst {stdioItems} = fileDescriptors[fdNumber];\n\tconst allStdioItems = stdioItems.filter(({contents}) => contents !== undefined);\n\tif (allStdioItems.length === 0) {\n\t\treturn;\n\t}\n\n\tif (fdNumber !== 0) {\n\t\tconst [{type, optionName}] = allStdioItems;\n\t\tthrow new TypeError(`Only the \\`stdin\\` option, not \\`${optionName}\\`, can be ${TYPE_TO_MESSAGE[type]} with synchronous methods.`);\n\t}\n\n\tconst allContents = allStdioItems.map(({contents}) => contents);\n\tconst transformedContents = allContents.map(contents => applySingleInputGeneratorsSync(contents, stdioItems));\n\toptions.input = joinToUint8Array(transformedContents);\n};\n\nconst applySingleInputGeneratorsSync = (contents, stdioItems) => {\n\tconst newContents = runGeneratorsSync(contents, stdioItems, 'utf8', true);\n\tvalidateSerializable(newContents);\n\treturn joinToUint8Array(newContents);\n};\n\nconst validateSerializable = newContents => {\n\tconst invalidItem = newContents.find(item => typeof item !== 'string' && !isUint8Array(item));\n\tif (invalidItem !== undefined) {\n\t\tthrow new TypeError(`The \\`stdin\\` option is invalid: when passing objects as input, a transform must be used to serialize them to strings or Uint8Arrays: ${invalidItem}.`);\n\t}\n};\n", "import {writeFileSync, appendFileSync} from 'node:fs';\nimport {shouldLogOutput, logLinesSync} from '../verbose/output.js';\nimport {runGeneratorsSync} from '../transform/generator.js';\nimport {splitLinesSync} from '../transform/split.js';\nimport {joinToString, joinToUint8Array, bufferToUint8Array} from '../utils/uint-array.js';\nimport {FILE_TYPES} from '../stdio/type.js';\nimport {truncateMaxBufferSync} from './max-buffer.js';\n\n// Apply `stdout`/`stderr` options, after spawning, in sync mode\nexport const transformOutputSync = ({fileDescriptors, syncResult: {output}, options, isMaxBuffer, verboseInfo}) => {\n\tif (output === null) {\n\t\treturn {output: Array.from({length: 3})};\n\t}\n\n\tconst state = {};\n\tconst outputFiles = new Set([]);\n\tconst transformedOutput = output.map((result, fdNumber) =>\n\t\ttransformOutputResultSync({\n\t\t\tresult,\n\t\t\tfileDescriptors,\n\t\t\tfdNumber,\n\t\t\tstate,\n\t\t\toutputFiles,\n\t\t\tisMaxBuffer,\n\t\t\tverboseInfo,\n\t\t}, options));\n\treturn {output: transformedOutput, ...state};\n};\n\nconst transformOutputResultSync = (\n\t{result, fileDescriptors, fdNumber, state, outputFiles, isMaxBuffer, verboseInfo},\n\t{buffer, encoding, lines, stripFinalNewline, maxBuffer},\n) => {\n\tif (result === null) {\n\t\treturn;\n\t}\n\n\tconst truncatedResult = truncateMaxBufferSync(result, isMaxBuffer, maxBuffer);\n\tconst uint8ArrayResult = bufferToUint8Array(truncatedResult);\n\tconst {stdioItems, objectMode} = fileDescriptors[fdNumber];\n\tconst chunks = runOutputGeneratorsSync([uint8ArrayResult], stdioItems, encoding, state);\n\tconst {serializedResult, finalResult = serializedResult} = serializeChunks({\n\t\tchunks,\n\t\tobjectMode,\n\t\tencoding,\n\t\tlines,\n\t\tstripFinalNewline,\n\t\tfdNumber,\n\t});\n\n\tlogOutputSync({\n\t\tserializedResult,\n\t\tfdNumber,\n\t\tstate,\n\t\tverboseInfo,\n\t\tencoding,\n\t\tstdioItems,\n\t\tobjectMode,\n\t});\n\n\tconst returnedResult = buffer[fdNumber] ? finalResult : undefined;\n\n\ttry {\n\t\tif (state.error === undefined) {\n\t\t\twriteToFiles(serializedResult, stdioItems, outputFiles);\n\t\t}\n\n\t\treturn returnedResult;\n\t} catch (error) {\n\t\tstate.error = error;\n\t\treturn returnedResult;\n\t}\n};\n\n// Applies transform generators to `stdout`/`stderr`\nconst runOutputGeneratorsSync = (chunks, stdioItems, encoding, state) => {\n\ttry {\n\t\treturn runGeneratorsSync(chunks, stdioItems, encoding, false);\n\t} catch (error) {\n\t\tstate.error = error;\n\t\treturn chunks;\n\t}\n};\n\n// The contents is converted to three stages:\n//  - serializedResult: used when the target is a file path/URL or a file descriptor (including 'inherit')\n//  - finalResult/returnedResult: returned as `result.std*`\nconst serializeChunks = ({chunks, objectMode, encoding, lines, stripFinalNewline, fdNumber}) => {\n\tif (objectMode) {\n\t\treturn {serializedResult: chunks};\n\t}\n\n\tif (encoding === 'buffer') {\n\t\treturn {serializedResult: joinToUint8Array(chunks)};\n\t}\n\n\tconst serializedResult = joinToString(chunks, encoding);\n\tif (lines[fdNumber]) {\n\t\treturn {serializedResult, finalResult: splitLinesSync(serializedResult, !stripFinalNewline[fdNumber], objectMode)};\n\t}\n\n\treturn {serializedResult};\n};\n\nconst logOutputSync = ({serializedResult, fdNumber, state, verboseInfo, encoding, stdioItems, objectMode}) => {\n\tif (!shouldLogOutput({\n\t\tstdioItems,\n\t\tencoding,\n\t\tverboseInfo,\n\t\tfdNumber,\n\t})) {\n\t\treturn;\n\t}\n\n\tconst linesArray = splitLinesSync(serializedResult, false, objectMode);\n\n\ttry {\n\t\tlogLinesSync(linesArray, fdNumber, verboseInfo);\n\t} catch (error) {\n\t\tstate.error ??= error;\n\t}\n};\n\n// When the `std*` target is a file path/URL or a file descriptor\nconst writeToFiles = (serializedResult, stdioItems, outputFiles) => {\n\tfor (const {path, append} of stdioItems.filter(({type}) => FILE_TYPES.has(type))) {\n\t\tconst pathString = typeof path === 'string' ? path : path.toString();\n\t\tif (append || outputFiles.has(pathString)) {\n\t\t\tappendFileSync(path, serializedResult);\n\t\t} else {\n\t\t\toutputFiles.add(pathString);\n\t\t\twriteFileSync(path, serializedResult);\n\t\t}\n\t}\n};\n", "import {BINARY_ENCODINGS} from '../arguments/encoding-option.js';\nimport {TRANSFORM_TYPES} from '../stdio/type.js';\nimport {verboseLog, serializeVerboseMessage} from './log.js';\nimport {isFullVerbose} from './values.js';\n\n// `ignore` opts-out of `verbose` for a specific stream.\n// `ipc` cannot use piping.\n// `inherit` would result in double printing.\n// They can also lead to double printing when passing file descriptor integers or `process.std*`.\n// This only leaves with `pipe` and `overlapped`.\nexport const shouldLogOutput = ({stdioItems, encoding, verboseInfo, fdNumber}) => fdNumber !== 'all'\n\t&& isFullVerbose(verboseInfo, fdNumber)\n\t&& !BINARY_ENCODINGS.has(encoding)\n\t&& fdUsesVerbose(fdNumber)\n\t&& (stdioItems.some(({type, value}) => type === 'native' && PIPED_STDIO_VALUES.has(value))\n\t|| stdioItems.every(({type}) => TRANSFORM_TYPES.has(type)));\n\n// Printing input streams would be confusing.\n// Files and streams can produce big outputs, which we don't want to print.\n// We could print `stdio[3+]` but it often is redirected to files and streams, with the same issue.\n// So we only print stdout and stderr.\nconst fdUsesVerbose = fdNumber => fdNumber === 1 || fdNumber === 2;\n\nconst PIPED_STDIO_VALUES = new Set(['pipe', 'overlapped']);\n\n// `verbose: 'full'` printing logic with async methods\nexport const logLines = async (linesIterable, stream, fdNumber, verboseInfo) => {\n\tfor await (const line of linesIterable) {\n\t\tif (!isPipingStream(stream)) {\n\t\t\tlogLine(line, fdNumber, verboseInfo);\n\t\t}\n\t}\n};\n\n// `verbose: 'full'` printing logic with sync methods\nexport const logLinesSync = (linesArray, fdNumber, verboseInfo) => {\n\tfor (const line of linesArray) {\n\t\tlogLine(line, fdNumber, verboseInfo);\n\t}\n};\n\n// When `subprocess.stdout|stderr.pipe()` is called, `verbose` becomes a noop.\n// This prevents the following problems:\n//  - `.pipe()` achieves the same result as using `stdout: 'inherit'`, `stdout: stream`, etc. which also make `verbose` a noop.\n//    For example, `subprocess.stdout.pipe(process.stdin)` would print each line twice.\n//  - When chaining subprocesses with `subprocess.pipe(otherSubprocess)`, only the last one should print its output.\n// Detecting whether `.pipe()` is impossible without monkey-patching it, so we use the following undocumented property.\n// This is not a critical behavior since changes of the following property would only make `verbose` more verbose.\nconst isPipingStream = stream => stream._readableState.pipes.length > 0;\n\n// When `verbose` is `full`, print stdout|stderr\nconst logLine = (line, fdNumber, verboseInfo) => {\n\tconst verboseMessage = serializeVerboseMessage(line);\n\tverboseLog({\n\t\ttype: 'output',\n\t\tverboseMessage,\n\t\tfdNumber,\n\t\tverboseInfo,\n\t});\n};\n", "import {isUint8Array, concatUint8Arrays} from '../utils/uint-array.js';\nimport {stripNewline} from '../io/strip-newline.js';\n\n// Retrieve `result.all` with synchronous methods\nexport const getAllSync = ([, stdout, stderr], options) => {\n\tif (!options.all) {\n\t\treturn;\n\t}\n\n\tif (stdout === undefined) {\n\t\treturn stderr;\n\t}\n\n\tif (stderr === undefined) {\n\t\treturn stdout;\n\t}\n\n\tif (Array.isArray(stdout)) {\n\t\treturn Array.isArray(stderr)\n\t\t\t? [...stdout, ...stderr]\n\t\t\t: [...stdout, stripNewline(stderr, options, 'all')];\n\t}\n\n\tif (Array.isArray(stderr)) {\n\t\treturn [stripNewline(stdout, options, 'all'), ...stderr];\n\t}\n\n\tif (isUint8Array(stdout) && isUint8Array(stderr)) {\n\t\treturn concatUint8Arrays([stdout, stderr]);\n\t}\n\n\treturn `${stdout}${stderr}`;\n};\n", "import {once} from 'node:events';\nimport {DiscardedError} from '../return/final-error.js';\n\n// If `error` is emitted before `spawn`, `exit` will never be emitted.\n// However, `error` might be emitted after `spawn`.\n// In that case, `exit` will still be emitted.\n// Since the `exit` event contains the signal name, we want to make sure we are listening for it.\n// This function also takes into account the following unlikely cases:\n//  - `exit` being emitted in the same microtask as `spawn`\n//  - `error` being emitted multiple times\nexport const waitForExit = async (subprocess, context) => {\n\tconst [exitCode, signal] = await waitForExitOrError(subprocess);\n\tcontext.isForcefullyTerminated ??= false;\n\treturn [exitCode, signal];\n};\n\nconst waitForExitOrError = async subprocess => {\n\tconst [spawnPayload, exitPayload] = await Promise.allSettled([\n\t\tonce(subprocess, 'spawn'),\n\t\tonce(subprocess, 'exit'),\n\t]);\n\n\tif (spawnPayload.status === 'rejected') {\n\t\treturn [];\n\t}\n\n\treturn exitPayload.status === 'rejected'\n\t\t? waitForSubprocessExit(subprocess)\n\t\t: exitPayload.value;\n};\n\nconst waitForSubprocessExit = async subprocess => {\n\ttry {\n\t\treturn await once(subprocess, 'exit');\n\t} catch {\n\t\treturn waitForSubprocessExit(subprocess);\n\t}\n};\n\n// Retrieve the final exit code and|or signal name\nexport const waitForSuccessfulExit = async exitPromise => {\n\tconst [exitCode, signal] = await exitPromise;\n\n\tif (!isSubprocessErrorExit(exitCode, signal) && isFailedExit(exitCode, signal)) {\n\t\tthrow new DiscardedError();\n\t}\n\n\treturn [exitCode, signal];\n};\n\n// When the subprocess fails due to an `error` event\nconst isSubprocessErrorExit = (exitCode, signal) => exitCode === undefined && signal === undefined;\n// When the subprocess fails due to a non-0 exit code or to a signal termination\nexport const isFailedExit = (exitCode, signal) => exitCode !== 0 || signal !== null;\n", "import {DiscardedError} from '../return/final-error.js';\nimport {isMaxBufferSync} from '../io/max-buffer.js';\nimport {isFailedExit} from './exit-async.js';\n\n// Retrieve exit code, signal name and error information, with synchronous methods\nexport const getExitResultSync = ({error, status: exitCode, signal, output}, {maxBuffer}) => {\n\tconst resultError = getResultError(error, exitCode, signal);\n\tconst timedOut = resultError?.code === 'ETIMEDOUT';\n\tconst isMaxBuffer = isMaxBufferSync(resultError, output, maxBuffer);\n\treturn {\n\t\tresultError,\n\t\texitCode,\n\t\tsignal,\n\t\ttimedOut,\n\t\tisMaxBuffer,\n\t};\n};\n\nconst getResultError = (error, exitCode, signal) => {\n\tif (error !== undefined) {\n\t\treturn error;\n\t}\n\n\treturn isFailedExit(exitCode, signal) ? new DiscardedError() : undefined;\n};\n", "import {setMaxListeners} from 'node:events';\nimport {spawn} from 'node:child_process';\nimport {MaxBufferError} from 'get-stream';\nimport {handleCommand} from '../arguments/command.js';\nimport {normalizeOptions} from '../arguments/options.js';\nimport {SUBPROCESS_OPTIONS} from '../arguments/fd-options.js';\nimport {concatenateShell} from '../arguments/shell.js';\nimport {addIpcMethods} from '../ipc/methods.js';\nimport {makeError, makeSuccessResult} from '../return/result.js';\nimport {handleResult} from '../return/reject.js';\nimport {handleEarlyError} from '../return/early-error.js';\nimport {handleStdioAsync} from '../stdio/handle-async.js';\nimport {stripNewline} from '../io/strip-newline.js';\nimport {pipeOutputAsync} from '../io/output-async.js';\nimport {subprocessKill} from '../terminate/kill.js';\nimport {cleanupOnExit} from '../terminate/cleanup.js';\nimport {pipeToSubprocess} from '../pipe/setup.js';\nimport {makeAllStream} from '../resolve/all-async.js';\nimport {waitForSubprocessResult} from '../resolve/wait-subprocess.js';\nimport {addConvertedStreams} from '../convert/add.js';\nimport {createDeferred} from '../utils/deferred.js';\nimport {mergePromise} from './promise.js';\n\n// Main shared logic for all async methods: `execa()`, `$`, `execaNode()`\nexport const execaCoreAsync = (rawFile, rawArguments, rawOptions, createNested) => {\n\tconst {file, commandArguments, command, escapedCommand, startTime, verboseInfo, options, fileDescriptors} = handleAsyncArguments(rawFile, rawArguments, rawOptions);\n\tconst {subprocess, promise} = spawnSubprocessAsync({\n\t\tfile,\n\t\tcommandArguments,\n\t\toptions,\n\t\tstartTime,\n\t\tverboseInfo,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tfileDescriptors,\n\t});\n\tsubprocess.pipe = pipeToSubprocess.bind(undefined, {\n\t\tsource: subprocess,\n\t\tsourcePromise: promise,\n\t\tboundOptions: {},\n\t\tcreateNested,\n\t});\n\tmergePromise(subprocess, promise);\n\tSUBPROCESS_OPTIONS.set(subprocess, {options, fileDescriptors});\n\treturn subprocess;\n};\n\n// Compute arguments to pass to `child_process.spawn()`\nconst handleAsyncArguments = (rawFile, rawArguments, rawOptions) => {\n\tconst {command, escapedCommand, startTime, verboseInfo} = handleCommand(rawFile, rawArguments, rawOptions);\n\tconst {file, commandArguments, options: normalizedOptions} = normalizeOptions(rawFile, rawArguments, rawOptions);\n\tconst options = handleAsyncOptions(normalizedOptions);\n\tconst fileDescriptors = handleStdioAsync(options, verboseInfo);\n\treturn {\n\t\tfile,\n\t\tcommandArguments,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstartTime,\n\t\tverboseInfo,\n\t\toptions,\n\t\tfileDescriptors,\n\t};\n};\n\n// Options normalization logic specific to async methods.\n// Prevent passing the `timeout` option directly to `child_process.spawn()`.\nconst handleAsyncOptions = ({timeout, signal, ...options}) => {\n\tif (signal !== undefined) {\n\t\tthrow new TypeError('The \"signal\" option has been renamed to \"cancelSignal\" instead.');\n\t}\n\n\treturn {...options, timeoutDuration: timeout};\n};\n\nconst spawnSubprocessAsync = ({file, commandArguments, options, startTime, verboseInfo, command, escapedCommand, fileDescriptors}) => {\n\tlet subprocess;\n\ttry {\n\t\tsubprocess = spawn(...concatenateShell(file, commandArguments, options));\n\t} catch (error) {\n\t\treturn handleEarlyError({\n\t\t\terror,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tfileDescriptors,\n\t\t\toptions,\n\t\t\tstartTime,\n\t\t\tverboseInfo,\n\t\t});\n\t}\n\n\tconst controller = new AbortController();\n\tsetMaxListeners(Number.POSITIVE_INFINITY, controller.signal);\n\n\tconst originalStreams = [...subprocess.stdio];\n\tpipeOutputAsync(subprocess, fileDescriptors, controller);\n\tcleanupOnExit(subprocess, options, controller);\n\n\tconst context = {};\n\tconst onInternalError = createDeferred();\n\tsubprocess.kill = subprocessKill.bind(undefined, {\n\t\tkill: subprocess.kill.bind(subprocess),\n\t\toptions,\n\t\tonInternalError,\n\t\tcontext,\n\t\tcontroller,\n\t});\n\tsubprocess.all = makeAllStream(subprocess, options);\n\taddConvertedStreams(subprocess, options);\n\taddIpcMethods(subprocess, options);\n\n\tconst promise = handlePromise({\n\t\tsubprocess,\n\t\toptions,\n\t\tstartTime,\n\t\tverboseInfo,\n\t\tfileDescriptors,\n\t\toriginalStreams,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tcontext,\n\t\tonInternalError,\n\t\tcontroller,\n\t});\n\treturn {subprocess, promise};\n};\n\n// Asynchronous logic, as opposed to the previous logic which can be run synchronously, i.e. can be returned to user right away\nconst handlePromise = async ({subprocess, options, startTime, verboseInfo, fileDescriptors, originalStreams, command, escapedCommand, context, onInternalError, controller}) => {\n\tconst [\n\t\terrorInfo,\n\t\t[exitCode, signal],\n\t\tstdioResults,\n\t\tallResult,\n\t\tipcOutput,\n\t] = await waitForSubprocessResult({\n\t\tsubprocess,\n\t\toptions,\n\t\tcontext,\n\t\tverboseInfo,\n\t\tfileDescriptors,\n\t\toriginalStreams,\n\t\tonInternalError,\n\t\tcontroller,\n\t});\n\tcontroller.abort();\n\tonInternalError.resolve();\n\n\tconst stdio = stdioResults.map((stdioResult, fdNumber) => stripNewline(stdioResult, options, fdNumber));\n\tconst all = stripNewline(allResult, options, 'all');\n\tconst result = getAsyncResult({\n\t\terrorInfo,\n\t\texitCode,\n\t\tsignal,\n\t\tstdio,\n\t\tall,\n\t\tipcOutput,\n\t\tcontext,\n\t\toptions,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstartTime,\n\t});\n\treturn handleResult(result, verboseInfo, options);\n};\n\nconst getAsyncResult = ({errorInfo, exitCode, signal, stdio, all, ipcOutput, context, options, command, escapedCommand, startTime}) => 'error' in errorInfo\n\t? makeError({\n\t\terror: errorInfo.error,\n\t\tcommand,\n\t\tescapedCommand,\n\t\ttimedOut: context.terminationReason === 'timeout',\n\t\tisCanceled: context.terminationReason === 'cancel' || context.terminationReason === 'gracefulCancel',\n\t\tisGracefullyCanceled: context.terminationReason === 'gracefulCancel',\n\t\tisMaxBuffer: errorInfo.error instanceof MaxBufferError,\n\t\tisForcefullyTerminated: context.isForcefullyTerminated,\n\t\texitCode,\n\t\tsignal,\n\t\tstdio,\n\t\tall,\n\t\tipcOutput,\n\t\toptions,\n\t\tstartTime,\n\t\tisSync: false,\n\t})\n\t: makeSuccessResult({\n\t\tcommand,\n\t\tescapedCommand,\n\t\tstdio,\n\t\tall,\n\t\tipcOutput,\n\t\toptions,\n\t\tstartTime,\n\t});\n", "import process from 'node:process';\nimport {sendMessage} from './send.js';\nimport {getOneMessage} from './get-one.js';\nimport {getEachMessage} from './get-each.js';\nimport {getCancelSignal} from './graceful.js';\n\n// Add promise-based IPC methods in current process\nexport const addIpcMethods = (subprocess, {ipc}) => {\n\tObject.assign(subprocess, getIpcMethods(subprocess, false, ipc));\n};\n\n// Get promise-based IPC in the subprocess\nexport const getIpcExport = () => {\n\tconst anyProcess = process;\n\tconst isSubprocess = true;\n\tconst ipc = process.channel !== undefined;\n\n\treturn {\n\t\t...getIpcMethods(anyProcess, isSubprocess, ipc),\n\t\tgetCancelSignal: getCancelSignal.bind(undefined, {\n\t\t\tanyProcess,\n\t\t\tchannel: anyProcess.channel,\n\t\t\tisSubprocess,\n\t\t\tipc,\n\t\t}),\n\t};\n};\n\n// Retrieve the `ipc` shared by both the current process and the subprocess\nconst getIpcMethods = (anyProcess, isSubprocess, ipc) => ({\n\tsendMessage: sendMessage.bind(undefined, {\n\t\tanyProcess,\n\t\tchannel: anyProcess.channel,\n\t\tisSubprocess,\n\t\tipc,\n\t}),\n\tgetOneMessage: getOneMessage.bind(undefined, {\n\t\tanyProcess,\n\t\tchannel: anyProcess.channel,\n\t\tisSubprocess,\n\t\tipc,\n\t}),\n\tgetEachMessage: getEachMessage.bind(undefined, {\n\t\tanyProcess,\n\t\tchannel: anyProcess.channel,\n\t\tisSubprocess,\n\t\tipc,\n\t}),\n});\n", "import {once, on} from 'node:events';\nimport {\n\tvalidateIpcMethod,\n\tthrowOnEarlyDisconnect,\n\tdisconnect,\n\tgetStrictResponseError,\n} from './validation.js';\nimport {getIpcEmitter, isConnected} from './forward.js';\nimport {addReference, removeReference} from './reference.js';\n\n// Like `[sub]process.once('message')` but promise-based\nexport const getOneMessage = ({anyProcess, channel, isSubprocess, ipc}, {reference = true, filter} = {}) => {\n\tvalidateIpcMethod({\n\t\tmethodName: 'getOneMessage',\n\t\tisSubprocess,\n\t\tipc,\n\t\tisConnected: isConnected(anyProcess),\n\t});\n\n\treturn getOneMessageAsync({\n\t\tanyProcess,\n\t\tchannel,\n\t\tisSubprocess,\n\t\tfilter,\n\t\treference,\n\t});\n};\n\nconst getOneMessageAsync = async ({anyProcess, channel, isSubprocess, filter, reference}) => {\n\taddReference(channel, reference);\n\tconst ipcEmitter = getIpcEmitter(anyProcess, channel, isSubprocess);\n\tconst controller = new AbortController();\n\ttry {\n\t\treturn await Promise.race([\n\t\t\tgetMessage(ipcEmitter, filter, controller),\n\t\t\tthrowOnDisconnect(ipcEmitter, isSubprocess, controller),\n\t\t\tthrowOnStrictError(ipcEmitter, isSubprocess, controller),\n\t\t]);\n\t} catch (error) {\n\t\tdisconnect(anyProcess);\n\t\tthrow error;\n\t} finally {\n\t\tcontroller.abort();\n\t\tremoveReference(channel, reference);\n\t}\n};\n\nconst getMessage = async (ipcEmitter, filter, {signal}) => {\n\tif (filter === undefined) {\n\t\tconst [message] = await once(ipcEmitter, 'message', {signal});\n\t\treturn message;\n\t}\n\n\tfor await (const [message] of on(ipcEmitter, 'message', {signal})) {\n\t\tif (filter(message)) {\n\t\t\treturn message;\n\t\t}\n\t}\n};\n\nconst throwOnDisconnect = async (ipcEmitter, isSubprocess, {signal}) => {\n\tawait once(ipcEmitter, 'disconnect', {signal});\n\tthrowOnEarlyDisconnect(isSubprocess);\n};\n\nconst throwOnStrictError = async (ipcEmitter, isSubprocess, {signal}) => {\n\tconst [error] = await once(ipcEmitter, 'strict:error', {signal});\n\tthrow getStrictResponseError(error, isSubprocess);\n};\n", "import {once, on} from 'node:events';\nimport {validateIpcMethod, disconnect, getStrictResponseError} from './validation.js';\nimport {getIpcEmitter, isConnected} from './forward.js';\nimport {addReference, removeReference} from './reference.js';\n\n// Like `[sub]process.on('message')` but promise-based\nexport const getEachMessage = ({anyProcess, channel, isSubprocess, ipc}, {reference = true} = {}) => loopOnMessages({\n\tanyProcess,\n\tchannel,\n\tisSubprocess,\n\tipc,\n\tshouldAwait: !isSubprocess,\n\treference,\n});\n\n// Same but used internally\nexport const loopOnMessages = ({anyProcess, channel, isSubprocess, ipc, shouldAwait, reference}) => {\n\tvalidateIpcMethod({\n\t\tmethodName: 'getEachMessage',\n\t\tisSubprocess,\n\t\tipc,\n\t\tisConnected: isConnected(anyProcess),\n\t});\n\n\taddReference(channel, reference);\n\tconst ipcEmitter = getIpcEmitter(anyProcess, channel, isSubprocess);\n\tconst controller = new AbortController();\n\tconst state = {};\n\tstopOnDisconnect(anyProcess, ipcEmitter, controller);\n\tabortOnStrictError({\n\t\tipcEmitter,\n\t\tisSubprocess,\n\t\tcontroller,\n\t\tstate,\n\t});\n\treturn iterateOnMessages({\n\t\tanyProcess,\n\t\tchannel,\n\t\tipcEmitter,\n\t\tisSubprocess,\n\t\tshouldAwait,\n\t\tcontroller,\n\t\tstate,\n\t\treference,\n\t});\n};\n\nconst stopOnDisconnect = async (anyProcess, ipcEmitter, controller) => {\n\ttry {\n\t\tawait once(ipcEmitter, 'disconnect', {signal: controller.signal});\n\t\tcontroller.abort();\n\t} catch {}\n};\n\nconst abortOnStrictError = async ({ipcEmitter, isSubprocess, controller, state}) => {\n\ttry {\n\t\tconst [error] = await once(ipcEmitter, 'strict:error', {signal: controller.signal});\n\t\tstate.error = getStrictResponseError(error, isSubprocess);\n\t\tcontroller.abort();\n\t} catch {}\n};\n\nconst iterateOnMessages = async function * ({anyProcess, channel, ipcEmitter, isSubprocess, shouldAwait, controller, state, reference}) {\n\ttry {\n\t\tfor await (const [message] of on(ipcEmitter, 'message', {signal: controller.signal})) {\n\t\t\tthrowIfStrictError(state);\n\t\t\tyield message;\n\t\t}\n\t} catch {\n\t\tthrowIfStrictError(state);\n\t} finally {\n\t\tcontroller.abort();\n\t\tremoveReference(channel, reference);\n\n\t\tif (!isSubprocess) {\n\t\t\tdisconnect(anyProcess);\n\t\t}\n\n\t\tif (shouldAwait) {\n\t\t\tawait anyProcess;\n\t\t}\n\t}\n};\n\nconst throwIfStrictError = ({error}) => {\n\tif (error) {\n\t\tthrow error;\n\t}\n};\n", "import {ChildProcess} from 'node:child_process';\nimport {\n\tPassThrough,\n\tReadable,\n\tWritable,\n\tDuplex,\n} from 'node:stream';\nimport {cleanupCustomStreams} from '../stdio/handle.js';\nimport {makeEarlyError} from './result.js';\nimport {handleResult} from './reject.js';\n\n// When the subprocess fails to spawn.\n// We ensure the returned error is always both a promise and a subprocess.\nexport const handleEarlyError = ({error, command, escapedCommand, fileDescriptors, options, startTime, verboseInfo}) => {\n\tcleanupCustomStreams(fileDescriptors);\n\n\tconst subprocess = new ChildProcess();\n\tcreateDummyStreams(subprocess, fileDescriptors);\n\tObject.assign(subprocess, {readable, writable, duplex});\n\n\tconst earlyError = makeEarlyError({\n\t\terror,\n\t\tcommand,\n\t\tescapedCommand,\n\t\tfileDescriptors,\n\t\toptions,\n\t\tstartTime,\n\t\tisSync: false,\n\t});\n\tconst promise = handleDummyPromise(earlyError, verboseInfo, options);\n\treturn {subprocess, promise};\n};\n\nconst createDummyStreams = (subprocess, fileDescriptors) => {\n\tconst stdin = createDummyStream();\n\tconst stdout = createDummyStream();\n\tconst stderr = createDummyStream();\n\tconst extraStdio = Array.from({length: fileDescriptors.length - 3}, createDummyStream);\n\tconst all = createDummyStream();\n\tconst stdio = [stdin, stdout, stderr, ...extraStdio];\n\tObject.assign(subprocess, {\n\t\tstdin,\n\t\tstdout,\n\t\tstderr,\n\t\tall,\n\t\tstdio,\n\t});\n};\n\nconst createDummyStream = () => {\n\tconst stream = new PassThrough();\n\tstream.end();\n\treturn stream;\n};\n\nconst readable = () => new Readable({read() {}});\nconst writable = () => new Writable({write() {}});\nconst duplex = () => new Duplex({read() {}, write() {}});\n\nconst handleDummyPromise = async (error, verboseInfo, options) => handleResult(error, verboseInfo, options);\n", "import {createReadStream, createWriteStream} from 'node:fs';\nimport {Buffer} from 'node:buffer';\nimport {Readable, Writable, Duplex} from 'node:stream';\nimport {generatorToStream} from '../transform/generator.js';\nimport {handleStdio} from './handle.js';\nimport {TYPE_TO_MESSAGE} from './type.js';\n\n// Handle `input`, `inputFile`, `stdin`, `stdout` and `stderr` options, before spawning, in async mode\nexport const handleStdioAsync = (options, verboseInfo) => handleStdio(addPropertiesAsync, options, verboseInfo, false);\n\nconst forbiddenIfAsync = ({type, optionName}) => {\n\tthrow new TypeError(`The \\`${optionName}\\` option cannot be ${TYPE_TO_MESSAGE[type]}.`);\n};\n\n// Create streams used internally for piping when using specific values for the `std*` options, in async mode.\n// For example, `stdout: {file}` creates a file stream, which is piped from/to.\nconst addProperties = {\n\tfileNumber: forbiddenIfAsync,\n\tgenerator: generatorToStream,\n\tasyncGenerator: generatorToStream,\n\tnodeStream: ({value}) => ({stream: value}),\n\twebTransform({value: {transform, writableObjectMode, readableObjectMode}}) {\n\t\tconst objectMode = writableObjectMode || readableObjectMode;\n\t\tconst stream = Duplex.fromWeb(transform, {objectMode});\n\t\treturn {stream};\n\t},\n\tduplex: ({value: {transform}}) => ({stream: transform}),\n\tnative() {},\n};\n\nconst addPropertiesAsync = {\n\tinput: {\n\t\t...addProperties,\n\t\tfileUrl: ({value}) => ({stream: createReadStream(value)}),\n\t\tfilePath: ({value: {file}}) => ({stream: createReadStream(file)}),\n\t\twebStream: ({value}) => ({stream: Readable.fromWeb(value)}),\n\t\titerable: ({value}) => ({stream: Readable.from(value)}),\n\t\tasyncIterable: ({value}) => ({stream: Readable.from(value)}),\n\t\tstring: ({value}) => ({stream: Readable.from(value)}),\n\t\tuint8Array: ({value}) => ({stream: Readable.from(Buffer.from(value))}),\n\t},\n\toutput: {\n\t\t...addProperties,\n\t\tfileUrl: ({value}) => ({stream: createWriteStream(value)}),\n\t\tfilePath: ({value: {file, append}}) => ({stream: createWriteStream(file, append ? {flags: 'a'} : {})}),\n\t\twebStream: ({value}) => ({stream: Writable.fromWeb(value)}),\n\t\titerable: forbiddenIfAsync,\n\t\tasyncIterable: forbiddenIfAsync,\n\t\tstring: forbiddenIfAsync,\n\t\tuint8Array: forbiddenIfAsync,\n\t},\n};\n", "import {on, once} from 'node:events';\nimport {PassThrough as PassThroughStream, getDefaultHighWaterMark} from 'node:stream';\nimport {finished} from 'node:stream/promises';\n\nexport default function mergeStreams(streams) {\n\tif (!Array.isArray(streams)) {\n\t\tthrow new TypeError(`Expected an array, got \\`${typeof streams}\\`.`);\n\t}\n\n\tfor (const stream of streams) {\n\t\tvalidateStream(stream);\n\t}\n\n\tconst objectMode = streams.some(({readableObjectMode}) => readableObjectMode);\n\tconst highWaterMark = getHighWaterMark(streams, objectMode);\n\tconst passThroughStream = new MergedStream({\n\t\tobjectMode,\n\t\twritableHighWaterMark: highWaterMark,\n\t\treadableHighWaterMark: highWaterMark,\n\t});\n\n\tfor (const stream of streams) {\n\t\tpassThroughStream.add(stream);\n\t}\n\n\treturn passThroughStream;\n}\n\nconst getHighWaterMark = (streams, objectMode) => {\n\tif (streams.length === 0) {\n\t\treturn getDefaultHighWaterMark(objectMode);\n\t}\n\n\tconst highWaterMarks = streams\n\t\t.filter(({readableObjectMode}) => readableObjectMode === objectMode)\n\t\t.map(({readableHighWaterMark}) => readableHighWaterMark);\n\treturn Math.max(...highWaterMarks);\n};\n\nclass MergedStream extends PassThroughStream {\n\t#streams = new Set([]);\n\t#ended = new Set([]);\n\t#aborted = new Set([]);\n\t#onFinished;\n\t#unpipeEvent = Symbol('unpipe');\n\t#streamPromises = new WeakMap();\n\n\tadd(stream) {\n\t\tvalidateStream(stream);\n\n\t\tif (this.#streams.has(stream)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#streams.add(stream);\n\n\t\tthis.#onFinished ??= onMergedStreamFinished(this, this.#streams, this.#unpipeEvent);\n\t\tconst streamPromise = endWhenStreamsDone({\n\t\t\tpassThroughStream: this,\n\t\t\tstream,\n\t\t\tstreams: this.#streams,\n\t\t\tended: this.#ended,\n\t\t\taborted: this.#aborted,\n\t\t\tonFinished: this.#onFinished,\n\t\t\tunpipeEvent: this.#unpipeEvent,\n\t\t});\n\t\tthis.#streamPromises.set(stream, streamPromise);\n\n\t\tstream.pipe(this, {end: false});\n\t}\n\n\tasync remove(stream) {\n\t\tvalidateStream(stream);\n\n\t\tif (!this.#streams.has(stream)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst streamPromise = this.#streamPromises.get(stream);\n\t\tif (streamPromise === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.#streamPromises.delete(stream);\n\n\t\tstream.unpipe(this);\n\t\tawait streamPromise;\n\t\treturn true;\n\t}\n}\n\nconst onMergedStreamFinished = async (passThroughStream, streams, unpipeEvent) => {\n\tupdateMaxListeners(passThroughStream, PASSTHROUGH_LISTENERS_COUNT);\n\tconst controller = new AbortController();\n\n\ttry {\n\t\tawait Promise.race([\n\t\t\tonMergedStreamEnd(passThroughStream, controller),\n\t\t\tonInputStreamsUnpipe(passThroughStream, streams, unpipeEvent, controller),\n\t\t]);\n\t} finally {\n\t\tcontroller.abort();\n\t\tupdateMaxListeners(passThroughStream, -PASSTHROUGH_LISTENERS_COUNT);\n\t}\n};\n\nconst onMergedStreamEnd = async (passThroughStream, {signal}) => {\n\ttry {\n\t\tawait finished(passThroughStream, {signal, cleanup: true});\n\t} catch (error) {\n\t\terrorOrAbortStream(passThroughStream, error);\n\t\tthrow error;\n\t}\n};\n\nconst onInputStreamsUnpipe = async (passThroughStream, streams, unpipeEvent, {signal}) => {\n\tfor await (const [unpipedStream] of on(passThroughStream, 'unpipe', {signal})) {\n\t\tif (streams.has(unpipedStream)) {\n\t\t\tunpipedStream.emit(unpipeEvent);\n\t\t}\n\t}\n};\n\nconst validateStream = stream => {\n\tif (typeof stream?.pipe !== 'function') {\n\t\tthrow new TypeError(`Expected a readable stream, got: \\`${typeof stream}\\`.`);\n\t}\n};\n\nconst endWhenStreamsDone = async ({passThroughStream, stream, streams, ended, aborted, onFinished, unpipeEvent}) => {\n\tupdateMaxListeners(passThroughStream, PASSTHROUGH_LISTENERS_PER_STREAM);\n\tconst controller = new AbortController();\n\n\ttry {\n\t\tawait Promise.race([\n\t\t\tafterMergedStreamFinished(onFinished, stream, controller),\n\t\t\tonInputStreamEnd({\n\t\t\t\tpassThroughStream,\n\t\t\t\tstream,\n\t\t\t\tstreams,\n\t\t\t\tended,\n\t\t\t\taborted,\n\t\t\t\tcontroller,\n\t\t\t}),\n\t\t\tonInputStreamUnpipe({\n\t\t\t\tstream,\n\t\t\t\tstreams,\n\t\t\t\tended,\n\t\t\t\taborted,\n\t\t\t\tunpipeEvent,\n\t\t\t\tcontroller,\n\t\t\t}),\n\t\t]);\n\t} finally {\n\t\tcontroller.abort();\n\t\tupdateMaxListeners(passThroughStream, -PASSTHROUGH_LISTENERS_PER_STREAM);\n\t}\n\n\tif (streams.size > 0 && streams.size === ended.size + aborted.size) {\n\t\tif (ended.size === 0 && aborted.size > 0) {\n\t\t\tabortStream(passThroughStream);\n\t\t} else {\n\t\t\tendStream(passThroughStream);\n\t\t}\n\t}\n};\n\nconst afterMergedStreamFinished = async (onFinished, stream, {signal}) => {\n\ttry {\n\t\tawait onFinished;\n\t\tif (!signal.aborted) {\n\t\t\tabortStream(stream);\n\t\t}\n\t} catch (error) {\n\t\tif (!signal.aborted) {\n\t\t\terrorOrAbortStream(stream, error);\n\t\t}\n\t}\n};\n\nconst onInputStreamEnd = async ({passThroughStream, stream, streams, ended, aborted, controller: {signal}}) => {\n\ttry {\n\t\tawait finished(stream, {\n\t\t\tsignal,\n\t\t\tcleanup: true,\n\t\t\treadable: true,\n\t\t\twritable: false,\n\t\t});\n\t\tif (streams.has(stream)) {\n\t\t\tended.add(stream);\n\t\t}\n\t} catch (error) {\n\t\tif (signal.aborted || !streams.has(stream)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isAbortError(error)) {\n\t\t\taborted.add(stream);\n\t\t} else {\n\t\t\terrorStream(passThroughStream, error);\n\t\t}\n\t}\n};\n\nconst onInputStreamUnpipe = async ({stream, streams, ended, aborted, unpipeEvent, controller: {signal}}) => {\n\tawait once(stream, unpipeEvent, {signal});\n\n\tif (!stream.readable) {\n\t\treturn once(signal, 'abort', {signal});\n\t}\n\n\tstreams.delete(stream);\n\tended.delete(stream);\n\taborted.delete(stream);\n};\n\nconst endStream = stream => {\n\tif (stream.writable) {\n\t\tstream.end();\n\t}\n};\n\nconst errorOrAbortStream = (stream, error) => {\n\tif (isAbortError(error)) {\n\t\tabortStream(stream);\n\t} else {\n\t\terrorStream(stream, error);\n\t}\n};\n\n// This is the error thrown by `finished()` on `stream.destroy()`\nconst isAbortError = error => error?.code === 'ERR_STREAM_PREMATURE_CLOSE';\n\nconst abortStream = stream => {\n\tif (stream.readable || stream.writable) {\n\t\tstream.destroy();\n\t}\n};\n\n// `stream.destroy(error)` crashes the process with `uncaughtException` if no `error` event listener exists on `stream`.\n// We take care of error handling on user behalf, so we do not want this to happen.\nconst errorStream = (stream, error) => {\n\tif (!stream.destroyed) {\n\t\tstream.once('error', noop);\n\t\tstream.destroy(error);\n\t}\n};\n\nconst noop = () => {};\n\nconst updateMaxListeners = (passThroughStream, increment) => {\n\tconst maxListeners = passThroughStream.getMaxListeners();\n\tif (maxListeners !== 0 && maxListeners !== Number.POSITIVE_INFINITY) {\n\t\tpassThroughStream.setMaxListeners(maxListeners + increment);\n\t}\n};\n\n// Number of times `passThroughStream.on()` is called regardless of streams:\n//  - once due to `finished(passThroughStream)`\n//  - once due to `on(passThroughStream)`\nconst PASSTHROUGH_LISTENERS_COUNT = 2;\n\n// Number of times `passThroughStream.on()` is called per stream:\n//  - once due to `stream.pipe(passThroughStream)`\nconst PASSTHROUGH_LISTENERS_PER_STREAM = 1;\n", "import {finished} from 'node:stream/promises';\nimport {isStandardStream} from '../utils/standard-stream.js';\n\n// Similar to `Stream.pipeline(source, destination)`, but does not destroy standard streams\nexport const pipeStreams = (source, destination) => {\n\tsource.pipe(destination);\n\tonSourceFinish(source, destination);\n\tonDestinationFinish(source, destination);\n};\n\n// `source.pipe(destination)` makes `destination` end when `source` ends.\n// But it does not propagate aborts or errors. This function does it.\nconst onSourceFinish = async (source, destination) => {\n\tif (isStandardStream(source) || isStandardStream(destination)) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait finished(source, {cleanup: true, readable: true, writable: false});\n\t} catch {}\n\n\tendDestinationStream(destination);\n};\n\nexport const endDestinationStream = destination => {\n\tif (destination.writable) {\n\t\tdestination.end();\n\t}\n};\n\n// We do the same thing in the other direction as well.\nconst onDestinationFinish = async (source, destination) => {\n\tif (isStandardStream(source) || isStandardStream(destination)) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait finished(destination, {cleanup: true, readable: false, writable: true});\n\t} catch {}\n\n\tabortSourceStream(source);\n};\n\nexport const abortSourceStream = source => {\n\tif (source.readable) {\n\t\tsource.destroy();\n\t}\n};\n", "import mergeStreams from '@sindresorhus/merge-streams';\nimport {isStandardStream} from '../utils/standard-stream.js';\nimport {incrementMaxListeners} from '../utils/max-listeners.js';\nimport {TRANSFORM_TYPES} from '../stdio/type.js';\nimport {pipeStreams} from './pipeline.js';\n\n// Handle `input`, `inputFile`, `stdin`, `stdout` and `stderr` options, after spawning, in async mode\n// When multiple input streams are used, we merge them to ensure the output stream ends only once each input stream has ended\nexport const pipeOutputAsync = (subprocess, fileDescriptors, controller) => {\n\tconst pipeGroups = new Map();\n\n\tfor (const [fdNumber, {stdioItems, direction}] of Object.entries(fileDescriptors)) {\n\t\tfor (const {stream} of stdioItems.filter(({type}) => TRANSFORM_TYPES.has(type))) {\n\t\t\tpipeTransform(subprocess, stream, direction, fdNumber);\n\t\t}\n\n\t\tfor (const {stream} of stdioItems.filter(({type}) => !TRANSFORM_TYPES.has(type))) {\n\t\t\tpipeStdioItem({\n\t\t\t\tsubprocess,\n\t\t\t\tstream,\n\t\t\t\tdirection,\n\t\t\t\tfdNumber,\n\t\t\t\tpipeGroups,\n\t\t\t\tcontroller,\n\t\t\t});\n\t\t}\n\t}\n\n\tfor (const [outputStream, inputStreams] of pipeGroups.entries()) {\n\t\tconst inputStream = inputStreams.length === 1 ? inputStreams[0] : mergeStreams(inputStreams);\n\t\tpipeStreams(inputStream, outputStream);\n\t}\n};\n\n// When using transforms, `subprocess.stdin|stdout|stderr|stdio` is directly mutated\nconst pipeTransform = (subprocess, stream, direction, fdNumber) => {\n\tif (direction === 'output') {\n\t\tpipeStreams(subprocess.stdio[fdNumber], stream);\n\t} else {\n\t\tpipeStreams(stream, subprocess.stdio[fdNumber]);\n\t}\n\n\tconst streamProperty = SUBPROCESS_STREAM_PROPERTIES[fdNumber];\n\tif (streamProperty !== undefined) {\n\t\tsubprocess[streamProperty] = stream;\n\t}\n\n\tsubprocess.stdio[fdNumber] = stream;\n};\n\nconst SUBPROCESS_STREAM_PROPERTIES = ['stdin', 'stdout', 'stderr'];\n\n// Most `std*` option values involve piping `subprocess.std*` to a stream.\n// The stream is either passed by the user or created internally.\nconst pipeStdioItem = ({subprocess, stream, direction, fdNumber, pipeGroups, controller}) => {\n\tif (stream === undefined) {\n\t\treturn;\n\t}\n\n\tsetStandardStreamMaxListeners(stream, controller);\n\n\tconst [inputStream, outputStream] = direction === 'output'\n\t\t? [stream, subprocess.stdio[fdNumber]]\n\t\t: [subprocess.stdio[fdNumber], stream];\n\tconst outputStreams = pipeGroups.get(inputStream) ?? [];\n\tpipeGroups.set(inputStream, [...outputStreams, outputStream]);\n};\n\n// Multiple subprocesses might be piping from/to `process.std*` at the same time.\n// This is not necessarily an error and should not print a `maxListeners` warning.\nconst setStandardStreamMaxListeners = (stream, {signal}) => {\n\tif (isStandardStream(stream)) {\n\t\tincrementMaxListeners(stream, MAX_LISTENERS_INCREMENT, signal);\n\t}\n};\n\n// `source.pipe(destination)` adds at most 1 listener for each event.\n// If `stdin` option is an array, the values might be combined with `merge-streams`.\n// That library also listens for `source` end, which adds 1 more listener.\nconst MAX_LISTENERS_INCREMENT = 2;\n", "import {addAbortListener} from 'node:events';\nimport {onExit} from 'signal-exit';\n\n// If the `cleanup` option is used, call `subprocess.kill()` when the parent process exits\nexport const cleanupOnExit = (subprocess, {cleanup, detached}, {signal}) => {\n\tif (!cleanup || detached) {\n\t\treturn;\n\t}\n\n\tconst removeExitHandler = onExit(() => {\n\t\tsubprocess.kill();\n\t});\n\taddAbortListener(signal, () => {\n\t\tremoveExitHandler();\n\t});\n};\n", "/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n", "// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n", "import {normalizeParameters} from '../methods/parameters.js';\nimport {getStartTime} from '../return/duration.js';\nimport {SUBPROCESS_OPTIONS, getToStream, getFromStream} from '../arguments/fd-options.js';\nimport {isDenoExecPath} from '../arguments/file-url.js';\n\n// Normalize and validate arguments passed to `source.pipe(destination)`\nexport const normalizePipeArguments = ({source, sourcePromise, boundOptions, createNested}, ...pipeArguments) => {\n\tconst startTime = getStartTime();\n\tconst {\n\t\tdestination,\n\t\tdestinationStream,\n\t\tdestinationError,\n\t\tfrom,\n\t\tunpipeSignal,\n\t} = getDestinationStream(boundOptions, createNested, pipeArguments);\n\tconst {sourceStream, sourceError} = getSourceStream(source, from);\n\tconst {options: sourceOptions, fileDescriptors} = SUBPROCESS_OPTIONS.get(source);\n\treturn {\n\t\tsourcePromise,\n\t\tsourceStream,\n\t\tsourceOptions,\n\t\tsourceError,\n\t\tdestination,\n\t\tdestinationStream,\n\t\tdestinationError,\n\t\tunpipeSignal,\n\t\tfileDescriptors,\n\t\tstartTime,\n\t};\n};\n\nconst getDestinationStream = (boundOptions, createNested, pipeArguments) => {\n\ttry {\n\t\tconst {\n\t\t\tdestination,\n\t\t\tpipeOptions: {from, to, unpipeSignal} = {},\n\t\t} = getDestination(boundOptions, createNested, ...pipeArguments);\n\t\tconst destinationStream = getToStream(destination, to);\n\t\treturn {\n\t\t\tdestination,\n\t\t\tdestinationStream,\n\t\t\tfrom,\n\t\t\tunpipeSignal,\n\t\t};\n\t} catch (error) {\n\t\treturn {destinationError: error};\n\t}\n};\n\n// Piping subprocesses can use three syntaxes:\n//  - source.pipe('command', commandArguments, pipeOptionsOrDestinationOptions)\n//  - source.pipe`command commandArgument` or source.pipe(pipeOptionsOrDestinationOptions)`command commandArgument`\n//  - source.pipe(execa(...), pipeOptions)\nconst getDestination = (boundOptions, createNested, firstArgument, ...pipeArguments) => {\n\tif (Array.isArray(firstArgument)) {\n\t\tconst destination = createNested(mapDestinationArguments, boundOptions)(firstArgument, ...pipeArguments);\n\t\treturn {destination, pipeOptions: boundOptions};\n\t}\n\n\tif (typeof firstArgument === 'string' || firstArgument instanceof URL || isDenoExecPath(firstArgument)) {\n\t\tif (Object.keys(boundOptions).length > 0) {\n\t\t\tthrow new TypeError('Please use .pipe(\"file\", ..., options) or .pipe(execa(\"file\", ..., options)) instead of .pipe(options)(\"file\", ...).');\n\t\t}\n\n\t\tconst [rawFile, rawArguments, rawOptions] = normalizeParameters(firstArgument, ...pipeArguments);\n\t\tconst destination = createNested(mapDestinationArguments)(rawFile, rawArguments, rawOptions);\n\t\treturn {destination, pipeOptions: rawOptions};\n\t}\n\n\tif (SUBPROCESS_OPTIONS.has(firstArgument)) {\n\t\tif (Object.keys(boundOptions).length > 0) {\n\t\t\tthrow new TypeError('Please use .pipe(options)`command` or .pipe($(options)`command`) instead of .pipe(options)($`command`).');\n\t\t}\n\n\t\treturn {destination: firstArgument, pipeOptions: pipeArguments[0]};\n\t}\n\n\tthrow new TypeError(`The first argument must be a template string, an options object, or an Execa subprocess: ${firstArgument}`);\n};\n\n// Force `stdin: 'pipe'` with the destination subprocess\nconst mapDestinationArguments = ({options}) => ({options: {...options, stdin: 'pipe', piped: true}});\n\nconst getSourceStream = (source, from) => {\n\ttry {\n\t\tconst sourceStream = getFromStream(source, from);\n\t\treturn {sourceStream};\n\t} catch (error) {\n\t\treturn {sourceError: error};\n\t}\n};\n", "import {makeEarlyError} from '../return/result.js';\nimport {abortSourceStream, endDestinationStream} from '../io/pipeline.js';\n\n// When passing invalid arguments to `source.pipe()`, throw asynchronously.\n// We also abort both subprocesses.\nexport const handlePipeArgumentsError = ({\n\tsourceStream,\n\tsourceError,\n\tdestinationStream,\n\tdestinationError,\n\tfileDescriptors,\n\tsourceOptions,\n\tstartTime,\n}) => {\n\tconst error = getPipeArgumentsError({\n\t\tsourceStream,\n\t\tsourceError,\n\t\tdestinationStream,\n\t\tdestinationError,\n\t});\n\tif (error !== undefined) {\n\t\tthrow createNonCommandError({\n\t\t\terror,\n\t\t\tfileDescriptors,\n\t\t\tsourceOptions,\n\t\t\tstartTime,\n\t\t});\n\t}\n};\n\nconst getPipeArgumentsError = ({sourceStream, sourceError, destinationStream, destinationError}) => {\n\tif (sourceError !== undefined && destinationError !== undefined) {\n\t\treturn destinationError;\n\t}\n\n\tif (destinationError !== undefined) {\n\t\tabortSourceStream(sourceStream);\n\t\treturn destinationError;\n\t}\n\n\tif (sourceError !== undefined) {\n\t\tendDestinationStream(destinationStream);\n\t\treturn sourceError;\n\t}\n};\n\n// Specific error return value when passing invalid arguments to `subprocess.pipe()` or when using `unpipeSignal`\nexport const createNonCommandError = ({error, fileDescriptors, sourceOptions, startTime}) => makeEarlyError({\n\terror,\n\tcommand: PIPE_COMMAND_MESSAGE,\n\tescapedCommand: PIPE_COMMAND_MESSAGE,\n\tfileDescriptors,\n\toptions: sourceOptions,\n\tstartTime,\n\tisSync: false,\n});\n\nconst PIPE_COMMAND_MESSAGE = 'source.pipe(destination)';\n", "// Like Bash, we await both subprocesses. This is unlike some other shells which only await the destination subprocess.\n// Like Bash with the `pipefail` option, if either subprocess fails, the whole pipe fails.\n// Like Bash, if both subprocesses fail, we return the failure of the destination.\n// This ensures both subprocesses' errors are present, using `error.pipedFrom`.\nexport const waitForBothSubprocesses = async subprocessPromises => {\n\tconst [\n\t\t{status: sourceStatus, reason: sourceReason, value: sourceResult = sourceReason},\n\t\t{status: destinationStatus, reason: destinationReason, value: destinationResult = destinationReason},\n\t] = await subprocessPromises;\n\n\tif (!destinationResult.pipedFrom.includes(sourceResult)) {\n\t\tdestinationResult.pipedFrom.push(sourceResult);\n\t}\n\n\tif (destinationStatus === 'rejected') {\n\t\tthrow destinationResult;\n\t}\n\n\tif (sourceStatus === 'rejected') {\n\t\tthrow sourceResult;\n\t}\n\n\treturn destinationResult;\n};\n", "import {finished} from 'node:stream/promises';\nimport mergeStreams from '@sindresorhus/merge-streams';\nimport {incrementMaxListeners} from '../utils/max-listeners.js';\nimport {pipeStreams} from '../io/pipeline.js';\n\n// The piping behavior is like Bash.\n// In particular, when one subprocess exits, the other is not terminated by a signal.\n// Instead, its stdout (for the source) or stdin (for the destination) closes.\n// If the subprocess uses it, it will make it error with SIGPIPE or EPIPE (for the source) or end (for the destination).\n// If it does not use it, it will continue running.\n// This allows for subprocesses to gracefully exit and lower the coupling between subprocesses.\nexport const pipeSubprocessStream = (sourceStream, destinationStream, maxListenersController) => {\n\tconst mergedStream = MERGED_STREAMS.has(destinationStream)\n\t\t? pipeMoreSubprocessStream(sourceStream, destinationStream)\n\t\t: pipeFirstSubprocessStream(sourceStream, destinationStream);\n\tincrementMaxListeners(sourceStream, SOURCE_LISTENERS_PER_PIPE, maxListenersController.signal);\n\tincrementMaxListeners(destinationStream, DESTINATION_LISTENERS_PER_PIPE, maxListenersController.signal);\n\tcleanupMergedStreamsMap(destinationStream);\n\treturn mergedStream;\n};\n\n// We use `merge-streams` to allow for multiple sources to pipe to the same destination.\nconst pipeFirstSubprocessStream = (sourceStream, destinationStream) => {\n\tconst mergedStream = mergeStreams([sourceStream]);\n\tpipeStreams(mergedStream, destinationStream);\n\tMERGED_STREAMS.set(destinationStream, mergedStream);\n\treturn mergedStream;\n};\n\nconst pipeMoreSubprocessStream = (sourceStream, destinationStream) => {\n\tconst mergedStream = MERGED_STREAMS.get(destinationStream);\n\tmergedStream.add(sourceStream);\n\treturn mergedStream;\n};\n\nconst cleanupMergedStreamsMap = async destinationStream => {\n\ttry {\n\t\tawait finished(destinationStream, {cleanup: true, readable: false, writable: true});\n\t} catch {}\n\n\tMERGED_STREAMS.delete(destinationStream);\n};\n\nconst MERGED_STREAMS = new WeakMap();\n\n// Number of listeners set up on `sourceStream` by each `sourceStream.pipe(destinationStream)`\n// Those are added by `merge-streams`\nconst SOURCE_LISTENERS_PER_PIPE = 2;\n// Number of listeners set up on `destinationStream` by each `sourceStream.pipe(destinationStream)`\n// Those are added by `finished()` in `cleanupMergedStreamsMap()`\nconst DESTINATION_LISTENERS_PER_PIPE = 1;\n", "import {aborted} from 'node:util';\nimport {createNonCommandError} from './throw.js';\n\n// When passing an `unpipeSignal` option, abort piping when the signal is aborted.\n// However, do not terminate the subprocesses.\nexport const unpipeOnAbort = (unpipeSignal, unpipeContext) => unpipeSignal === undefined\n\t? []\n\t: [unpipeOnSignalAbort(unpipeSignal, unpipeContext)];\n\nconst unpipeOnSignalAbort = async (unpipeSignal, {sourceStream, mergedStream, fileDescriptors, sourceOptions, startTime}) => {\n\tawait aborted(unpipeSignal, sourceStream);\n\tawait mergedStream.remove(sourceStream);\n\tconst error = new Error('Pipe canceled by `unpipeSignal` option.');\n\tthrow createNonCommandError({\n\t\terror,\n\t\tfileDescriptors,\n\t\tsourceOptions,\n\t\tstartTime,\n\t});\n};\n", "import isPlainObject from 'is-plain-obj';\nimport {normalizePipeArguments} from './pipe-arguments.js';\nimport {handlePipeArgumentsError} from './throw.js';\nimport {waitForBothSubprocesses} from './sequence.js';\nimport {pipeSubprocessStream} from './streaming.js';\nimport {unpipeOnAbort} from './abort.js';\n\n// Pipe a subprocess' `stdout`/`stderr`/`stdio` into another subprocess' `stdin`\nexport const pipeToSubprocess = (sourceInfo, ...pipeArguments) => {\n\tif (isPlainObject(pipeArguments[0])) {\n\t\treturn pipeToSubprocess.bind(undefined, {\n\t\t\t...sourceInfo,\n\t\t\tboundOptions: {...sourceInfo.boundOptions, ...pipeArguments[0]},\n\t\t});\n\t}\n\n\tconst {destination, ...normalizedInfo} = normalizePipeArguments(sourceInfo, ...pipeArguments);\n\tconst promise = handlePipePromise({...normalizedInfo, destination});\n\tpromise.pipe = pipeToSubprocess.bind(undefined, {\n\t\t...sourceInfo,\n\t\tsource: destination,\n\t\tsourcePromise: promise,\n\t\tboundOptions: {},\n\t});\n\treturn promise;\n};\n\n// Asynchronous logic when piping subprocesses\nconst handlePipePromise = async ({\n\tsourcePromise,\n\tsourceStream,\n\tsourceOptions,\n\tsourceError,\n\tdestination,\n\tdestinationStream,\n\tdestinationError,\n\tunpipeSignal,\n\tfileDescriptors,\n\tstartTime,\n}) => {\n\tconst subprocessPromises = getSubprocessPromises(sourcePromise, destination);\n\thandlePipeArgumentsError({\n\t\tsourceStream,\n\t\tsourceError,\n\t\tdestinationStream,\n\t\tdestinationError,\n\t\tfileDescriptors,\n\t\tsourceOptions,\n\t\tstartTime,\n\t});\n\tconst maxListenersController = new AbortController();\n\ttry {\n\t\tconst mergedStream = pipeSubprocessStream(sourceStream, destinationStream, maxListenersController);\n\t\treturn await Promise.race([\n\t\t\twaitForBothSubprocesses(subprocessPromises),\n\t\t\t...unpipeOnAbort(unpipeSignal, {\n\t\t\t\tsourceStream,\n\t\t\t\tmergedStream,\n\t\t\t\tsourceOptions,\n\t\t\t\tfileDescriptors,\n\t\t\t\tstartTime,\n\t\t\t}),\n\t\t]);\n\t} finally {\n\t\tmaxListenersController.abort();\n\t}\n};\n\n// `.pipe()` awaits the subprocess promises.\n// When invalid arguments are passed to `.pipe()`, we throw an error, which prevents awaiting them.\n// We need to ensure this does not create unhandled rejections.\nconst getSubprocessPromises = (sourcePromise, destination) => Promise.allSettled([sourcePromise, destination]);\n", "import {setImmediate} from 'node:timers/promises';\nimport getStream, {getStreamAsArrayBuffer, getStreamAsArray} from 'get-stream';\nimport {isArrayBuffer} from '../utils/uint-array.js';\nimport {shouldLogOutput, logLines} from '../verbose/output.js';\nimport {iterateForResult} from './iterate.js';\nimport {handleMaxBuffer} from './max-buffer.js';\nimport {getStripFinalNewline} from './strip-newline.js';\n\n// Retrieve `result.stdout|stderr|all|stdio[*]`\nexport const getStreamOutput = async ({stream, onStreamEnd, fdNumber, encoding, buffer, maxBuffer, lines, allMixed, stripFinalNewline, verboseInfo, streamInfo}) => {\n\tconst logPromise = logOutputAsync({\n\t\tstream,\n\t\tonStreamEnd,\n\t\tfdNumber,\n\t\tencoding,\n\t\tallMixed,\n\t\tverboseInfo,\n\t\tstreamInfo,\n\t});\n\n\tif (!buffer) {\n\t\tawait Promise.all([resumeStream(stream), logPromise]);\n\t\treturn;\n\t}\n\n\tconst stripFinalNewlineValue = getStripFinalNewline(stripFinalNewline, fdNumber);\n\tconst iterable = iterateForResult({\n\t\tstream,\n\t\tonStreamEnd,\n\t\tlines,\n\t\tencoding,\n\t\tstripFinalNewline: stripFinalNewlineValue,\n\t\tallMixed,\n\t});\n\tconst [output] = await Promise.all([\n\t\tgetStreamContents({\n\t\t\tstream,\n\t\t\titerable,\n\t\t\tfdNumber,\n\t\t\tencoding,\n\t\t\tmaxBuffer,\n\t\t\tlines,\n\t\t}),\n\t\tlogPromise,\n\t]);\n\treturn output;\n};\n\nconst logOutputAsync = async ({stream, onStreamEnd, fdNumber, encoding, allMixed, verboseInfo, streamInfo: {fileDescriptors}}) => {\n\tif (!shouldLogOutput({\n\t\tstdioItems: fileDescriptors[fdNumber]?.stdioItems,\n\t\tencoding,\n\t\tverboseInfo,\n\t\tfdNumber,\n\t})) {\n\t\treturn;\n\t}\n\n\tconst linesIterable = iterateForResult({\n\t\tstream,\n\t\tonStreamEnd,\n\t\tlines: true,\n\t\tencoding,\n\t\tstripFinalNewline: true,\n\t\tallMixed,\n\t});\n\tawait logLines(linesIterable, stream, fdNumber, verboseInfo);\n};\n\n// When using `buffer: false`, users need to read `subprocess.stdout|stderr|all` right away\n// See https://github.com/sindresorhus/execa/issues/730 and https://github.com/sindresorhus/execa/pull/729#discussion_r1465496310\nconst resumeStream = async stream => {\n\tawait setImmediate();\n\tif (stream.readableFlowing === null) {\n\t\tstream.resume();\n\t}\n};\n\nconst getStreamContents = async ({stream, stream: {readableObjectMode}, iterable, fdNumber, encoding, maxBuffer, lines}) => {\n\ttry {\n\t\tif (readableObjectMode || lines) {\n\t\t\treturn await getStreamAsArray(iterable, {maxBuffer});\n\t\t}\n\n\t\tif (encoding === 'buffer') {\n\t\t\treturn new Uint8Array(await getStreamAsArrayBuffer(iterable, {maxBuffer}));\n\t\t}\n\n\t\treturn await getStream(iterable, {maxBuffer});\n\t} catch (error) {\n\t\treturn handleBufferedData(handleMaxBuffer({\n\t\t\terror,\n\t\t\tstream,\n\t\t\treadableObjectMode,\n\t\t\tlines,\n\t\t\tencoding,\n\t\t\tfdNumber,\n\t\t}));\n\t}\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\n// They are automatically closed and flushed by Node.js when the subprocess exits\n// When `buffer` is `false`, `streamPromise` is `undefined` and there is no buffered data to retrieve\nexport const getBufferedData = async streamPromise => {\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn handleBufferedData(error);\n\t}\n};\n\n// Ensure we are returning Uint8Arrays when using `encoding: 'buffer'`\nconst handleBufferedData = ({bufferedData}) => isArrayBuffer(bufferedData)\n\t? new Uint8Array(bufferedData)\n\t: bufferedData;\n", "import {on} from 'node:events';\nimport {getDefaultHighWaterMark} from 'node:stream';\nimport {getEncodingTransformGenerator} from '../transform/encoding-transform.js';\nimport {getSplitLinesGenerator} from '../transform/split.js';\nimport {transformChunkSync, finalChunksSync} from '../transform/run-sync.js';\n\n// Iterate over lines of `subprocess.stdout`, used by `subprocess.readable|duplex|iterable()`\nexport const iterateOnSubprocessStream = ({subprocessStdout, subprocess, binary, shouldEncode, encoding, preserveNewlines}) => {\n\tconst controller = new AbortController();\n\tstopReadingOnExit(subprocess, controller);\n\treturn iterateOnStream({\n\t\tstream: subprocessStdout,\n\t\tcontroller,\n\t\tbinary,\n\t\tshouldEncode: !subprocessStdout.readableObjectMode && shouldEncode,\n\t\tencoding,\n\t\tshouldSplit: !subprocessStdout.readableObjectMode,\n\t\tpreserveNewlines,\n\t});\n};\n\nconst stopReadingOnExit = async (subprocess, controller) => {\n\ttry {\n\t\tawait subprocess;\n\t} catch {} finally {\n\t\tcontroller.abort();\n\t}\n};\n\n// Iterate over lines of `subprocess.stdout`, used by `result.stdout` and the `verbose: 'full'` option.\n// Applies the `lines` and `encoding` options.\nexport const iterateForResult = ({stream, onStreamEnd, lines, encoding, stripFinalNewline, allMixed}) => {\n\tconst controller = new AbortController();\n\tstopReadingOnStreamEnd(onStreamEnd, controller, stream);\n\tconst objectMode = stream.readableObjectMode && !allMixed;\n\treturn iterateOnStream({\n\t\tstream,\n\t\tcontroller,\n\t\tbinary: encoding === 'buffer',\n\t\tshouldEncode: !objectMode,\n\t\tencoding,\n\t\tshouldSplit: !objectMode && lines,\n\t\tpreserveNewlines: !stripFinalNewline,\n\t});\n};\n\nconst stopReadingOnStreamEnd = async (onStreamEnd, controller, stream) => {\n\ttry {\n\t\tawait onStreamEnd;\n\t} catch {\n\t\tstream.destroy();\n\t} finally {\n\t\tcontroller.abort();\n\t}\n};\n\nconst iterateOnStream = ({stream, controller, binary, shouldEncode, encoding, shouldSplit, preserveNewlines}) => {\n\tconst onStdoutChunk = on(stream, 'data', {\n\t\tsignal: controller.signal,\n\t\thighWaterMark: HIGH_WATER_MARK,\n\t\t// Backward compatibility with older name for this option\n\t\t// See https://github.com/nodejs/node/pull/52080#discussion_r1525227861\n\t\t// @todo Remove after removing support for Node 21\n\t\thighWatermark: HIGH_WATER_MARK,\n\t});\n\treturn iterateOnData({\n\t\tonStdoutChunk,\n\t\tcontroller,\n\t\tbinary,\n\t\tshouldEncode,\n\t\tencoding,\n\t\tshouldSplit,\n\t\tpreserveNewlines,\n\t});\n};\n\nexport const DEFAULT_OBJECT_HIGH_WATER_MARK = getDefaultHighWaterMark(true);\n\n// The `highWaterMark` of `events.on()` is measured in number of events, not in bytes.\n// Not knowing the average amount of bytes per `data` event, we use the same heuristic as streams in objectMode, since they have the same issue.\n// Therefore, we use the value of `getDefaultHighWaterMark(true)`.\n// Note: this option does not exist on Node 18, but this is ok since the logic works without it. It just consumes more memory.\nconst HIGH_WATER_MARK = DEFAULT_OBJECT_HIGH_WATER_MARK;\n\nconst iterateOnData = async function * ({onStdoutChunk, controller, binary, shouldEncode, encoding, shouldSplit, preserveNewlines}) {\n\tconst generators = getGenerators({\n\t\tbinary,\n\t\tshouldEncode,\n\t\tencoding,\n\t\tshouldSplit,\n\t\tpreserveNewlines,\n\t});\n\n\ttry {\n\t\tfor await (const [chunk] of onStdoutChunk) {\n\t\t\tyield * transformChunkSync(chunk, generators, 0);\n\t\t}\n\t} catch (error) {\n\t\tif (!controller.signal.aborted) {\n\t\t\tthrow error;\n\t\t}\n\t} finally {\n\t\tyield * finalChunksSync(generators);\n\t}\n};\n\nconst getGenerators = ({binary, shouldEncode, encoding, shouldSplit, preserveNewlines}) => [\n\tgetEncodingTransformGenerator(binary, encoding, !shouldEncode),\n\tgetSplitLinesGenerator(binary, preserveNewlines, !shouldSplit, {}),\n].filter(Boolean);\n", "import {finished} from 'node:stream/promises';\n\n// Wraps `finished(stream)` to handle the following case:\n//  - When the subprocess exits, Node.js automatically calls `subprocess.stdin.destroy()`, which we need to ignore.\n//  - However, we still need to throw if `subprocess.stdin.destroy()` is called before subprocess exit.\nexport const waitForStream = async (stream, fdNumber, streamInfo, {isSameDirection, stopOnExit = false} = {}) => {\n\tconst state = handleStdinDestroy(stream, streamInfo);\n\tconst abortController = new AbortController();\n\ttry {\n\t\tawait Promise.race([\n\t\t\t...(stopOnExit ? [streamInfo.exitPromise] : []),\n\t\t\tfinished(stream, {cleanup: true, signal: abortController.signal}),\n\t\t]);\n\t} catch (error) {\n\t\tif (!state.stdinCleanedUp) {\n\t\t\thandleStreamError(error, fdNumber, streamInfo, isSameDirection);\n\t\t}\n\t} finally {\n\t\tabortController.abort();\n\t}\n};\n\n// If `subprocess.stdin` is destroyed before being fully written to, it is considered aborted and should throw an error.\n// This can happen for example when user called `subprocess.stdin.destroy()` before `subprocess.stdin.end()`.\n// However, Node.js calls `subprocess.stdin.destroy()` on exit for cleanup purposes.\n// https://github.com/nodejs/node/blob/0b4cdb4b42956cbd7019058e409e06700a199e11/lib/internal/child_process.js#L278\n// This is normal and should not throw an error.\n// Therefore, we need to differentiate between both situations to know whether to throw an error.\n// Unfortunately, events (`close`, `error`, `end`, `exit`) cannot be used because `.destroy()` can take an arbitrary amount of time.\n// For example, `stdin: 'pipe'` is implemented as a TCP socket, and its `.destroy()` method waits for TCP disconnection.\n// Therefore `.destroy()` might end before or after subprocess exit, based on OS speed and load.\n// The only way to detect this is to spy on `subprocess.stdin._destroy()` by wrapping it.\n// If `subprocess.exitCode` or `subprocess.signalCode` is set, it means `.destroy()` is being called by Node.js itself.\nconst handleStdinDestroy = (stream, {originalStreams: [originalStdin], subprocess}) => {\n\tconst state = {stdinCleanedUp: false};\n\tif (stream === originalStdin) {\n\t\tspyOnStdinDestroy(stream, subprocess, state);\n\t}\n\n\treturn state;\n};\n\nconst spyOnStdinDestroy = (subprocessStdin, subprocess, state) => {\n\tconst {_destroy} = subprocessStdin;\n\tsubprocessStdin._destroy = (...destroyArguments) => {\n\t\tsetStdinCleanedUp(subprocess, state);\n\t\t_destroy.call(subprocessStdin, ...destroyArguments);\n\t};\n};\n\nconst setStdinCleanedUp = ({exitCode, signalCode}, state) => {\n\tif (exitCode !== null || signalCode !== null) {\n\t\tstate.stdinCleanedUp = true;\n\t}\n};\n\n// We ignore EPIPEs on writable streams and aborts on readable streams since those can happen normally.\n// When one stream errors, the error is propagated to the other streams on the same file descriptor.\n// Those other streams might have a different direction due to the above.\n// When this happens, the direction of both the initial stream and the others should then be taken into account.\n// Therefore, we keep track of whether a stream error is currently propagating.\nconst handleStreamError = (error, fdNumber, streamInfo, isSameDirection) => {\n\tif (!shouldIgnoreStreamError(error, fdNumber, streamInfo, isSameDirection)) {\n\t\tthrow error;\n\t}\n};\n\nconst shouldIgnoreStreamError = (error, fdNumber, streamInfo, isSameDirection = true) => {\n\tif (streamInfo.propagating) {\n\t\treturn isStreamEpipe(error) || isStreamAbort(error);\n\t}\n\n\tstreamInfo.propagating = true;\n\treturn isInputFileDescriptor(streamInfo, fdNumber) === isSameDirection\n\t\t? isStreamEpipe(error)\n\t\t: isStreamAbort(error);\n};\n\n// Unfortunately, we cannot use the stream's class or properties to know whether it is readable or writable.\n// For example, `subprocess.stdin` is technically a Duplex, but can only be used as a writable.\n// Therefore, we need to use the file descriptor's direction (`stdin` is input, `stdout` is output, etc.).\n// However, while `subprocess.std*` and transforms follow that direction, any stream passed the `std*` option has the opposite direction.\n// For example, `subprocess.stdin` is a writable, but the `stdin` option is a readable.\nexport const isInputFileDescriptor = ({fileDescriptors}, fdNumber) => fdNumber !== 'all' && fileDescriptors[fdNumber].direction === 'input';\n\n// When `stream.destroy()` is called without an `error` argument, stream is aborted.\n// This is the only way to abort a readable stream, which can be useful in some instances.\n// Therefore, we ignore this error on readable streams.\nexport const isStreamAbort = error => error?.code === 'ERR_STREAM_PREMATURE_CLOSE';\n\n// When `stream.write()` is called but the underlying source has been closed, `EPIPE` is emitted.\n// When piping subprocesses, the source subprocess usually decides when to stop piping.\n// However, there are some instances when the destination does instead, such as `... | head -n1`.\n// It notifies the source by using `EPIPE`.\n// Therefore, we ignore this error on writable streams.\nconst isStreamEpipe = error => error?.code === 'EPIPE';\n", "import {getStreamOutput} from '../io/contents.js';\nimport {waitForStream, isInputFileDescriptor} from './wait-stream.js';\n\n// Read the contents of `subprocess.std*` and|or wait for its completion\nexport const waitForStdioStreams = ({subprocess, encoding, buffer, maxBuffer, lines, stripFinalNewline, verboseInfo, streamInfo}) => subprocess.stdio.map((stream, fdNumber) => waitForSubprocessStream({\n\tstream,\n\tfdNumber,\n\tencoding,\n\tbuffer: buffer[fdNumber],\n\tmaxBuffer: maxBuffer[fdNumber],\n\tlines: lines[fdNumber],\n\tallMixed: false,\n\tstripFinalNewline,\n\tverboseInfo,\n\tstreamInfo,\n}));\n\n// Read the contents of `subprocess.std*` or `subprocess.all` and|or wait for its completion\nexport const waitForSubprocessStream = async ({stream, fdNumber, encoding, buffer, maxBuffer, lines, allMixed, stripFinalNewline, verboseInfo, streamInfo}) => {\n\tif (!stream) {\n\t\treturn;\n\t}\n\n\tconst onStreamEnd = waitForStream(stream, fdNumber, streamInfo);\n\tif (isInputFileDescriptor(streamInfo, fdNumber)) {\n\t\tawait onStreamEnd;\n\t\treturn;\n\t}\n\n\tconst [output] = await Promise.all([\n\t\tgetStreamOutput({\n\t\t\tstream,\n\t\t\tonStreamEnd,\n\t\t\tfdNumber,\n\t\t\tencoding,\n\t\t\tbuffer,\n\t\t\tmaxBuffer,\n\t\t\tlines,\n\t\t\tallMixed,\n\t\t\tstripFinalNewline,\n\t\t\tverboseInfo,\n\t\t\tstreamInfo,\n\t\t}),\n\t\tonStreamEnd,\n\t]);\n\treturn output;\n};\n", "import mergeStreams from '@sindresorhus/merge-streams';\nimport {waitForSubprocessStream} from './stdio.js';\n\n// `all` interleaves `stdout` and `stderr`\nexport const makeAllStream = ({stdout, stderr}, {all}) => all && (stdout || stderr)\n\t? mergeStreams([stdout, stderr].filter(Boolean))\n\t: undefined;\n\n// Read the contents of `subprocess.all` and|or wait for its completion\nexport const waitForAllStream = ({subprocess, encoding, buffer, maxBuffer, lines, stripFinalNewline, verboseInfo, streamInfo}) => waitForSubprocessStream({\n\t...getAllStream(subprocess, buffer),\n\tfdNumber: 'all',\n\tencoding,\n\tmaxBuffer: maxBuffer[1] + maxBuffer[2],\n\tlines: lines[1] || lines[2],\n\tallMixed: getAllMixed(subprocess),\n\tstripFinalNewline,\n\tverboseInfo,\n\tstreamInfo,\n});\n\nconst getAllStream = ({stdout, stderr, all}, [, bufferStdout, bufferStderr]) => {\n\tconst buffer = bufferStdout || bufferStderr;\n\tif (!buffer) {\n\t\treturn {stream: all, buffer};\n\t}\n\n\tif (!bufferStdout) {\n\t\treturn {stream: stderr, buffer};\n\t}\n\n\tif (!bufferStderr) {\n\t\treturn {stream: stdout, buffer};\n\t}\n\n\treturn {stream: all, buffer};\n};\n\n// When `subprocess.stdout` is in objectMode but not `subprocess.stderr` (or the opposite), we need to use both:\n//  - `getStreamAsArray()` for the chunks in objectMode, to return as an array without changing each chunk\n//  - `getStreamAsArrayBuffer()` or `getStream()` for the chunks not in objectMode, to convert them from Buffers to string or Uint8Array\n// We do this by emulating the Buffer -> string|Uint8Array conversion performed by `get-stream` with our own, which is identical.\nconst getAllMixed = ({all, stdout, stderr}) => all\n\t&& stdout\n\t&& stderr\n\t&& stdout.readableObjectMode !== stderr.readableObjectMode;\n", "import {once} from 'node:events';\nimport {isStream as isNodeStream} from 'is-stream';\nimport {throwOnTimeout} from '../terminate/timeout.js';\nimport {throwOnCancel} from '../terminate/cancel.js';\nimport {throwOnGracefulCancel} from '../terminate/graceful.js';\nimport {isStandardStream} from '../utils/standard-stream.js';\nimport {TRANSFORM_TYPES} from '../stdio/type.js';\nimport {getBufferedData} from '../io/contents.js';\nimport {waitForIpcOutput, getBufferedIpcOutput} from '../ipc/buffer-messages.js';\nimport {sendIpcInput} from '../ipc/ipc-input.js';\nimport {waitForAllStream} from './all-async.js';\nimport {waitForStdioStreams} from './stdio.js';\nimport {waitForExit, waitForSuccessfulExit} from './exit-async.js';\nimport {waitForStream} from './wait-stream.js';\n\n// Retrieve result of subprocess: exit code, signal, error, streams (stdout/stderr/all)\nexport const waitForSubprocessResult = async ({\n\tsubprocess,\n\toptions: {\n\t\tencoding,\n\t\tbuffer,\n\t\tmaxBuffer,\n\t\tlines,\n\t\ttimeoutDuration: timeout,\n\t\tcancelSignal,\n\t\tgracefulCancel,\n\t\tforceKillAfterDelay,\n\t\tstripFinalNewline,\n\t\tipc,\n\t\tipcInput,\n\t},\n\tcontext,\n\tverboseInfo,\n\tfileDescriptors,\n\toriginalStreams,\n\tonInternalError,\n\tcontroller,\n}) => {\n\tconst exitPromise = waitForExit(subprocess, context);\n\tconst streamInfo = {\n\t\toriginalStreams,\n\t\tfileDescriptors,\n\t\tsubprocess,\n\t\texitPromise,\n\t\tpropagating: false,\n\t};\n\n\tconst stdioPromises = waitForStdioStreams({\n\t\tsubprocess,\n\t\tencoding,\n\t\tbuffer,\n\t\tmaxBuffer,\n\t\tlines,\n\t\tstripFinalNewline,\n\t\tverboseInfo,\n\t\tstreamInfo,\n\t});\n\tconst allPromise = waitForAllStream({\n\t\tsubprocess,\n\t\tencoding,\n\t\tbuffer,\n\t\tmaxBuffer,\n\t\tlines,\n\t\tstripFinalNewline,\n\t\tverboseInfo,\n\t\tstreamInfo,\n\t});\n\tconst ipcOutput = [];\n\tconst ipcOutputPromise = waitForIpcOutput({\n\t\tsubprocess,\n\t\tbuffer,\n\t\tmaxBuffer,\n\t\tipc,\n\t\tipcOutput,\n\t\tverboseInfo,\n\t});\n\tconst originalPromises = waitForOriginalStreams(originalStreams, subprocess, streamInfo);\n\tconst customStreamsEndPromises = waitForCustomStreamsEnd(fileDescriptors, streamInfo);\n\n\ttry {\n\t\treturn await Promise.race([\n\t\t\tPromise.all([\n\t\t\t\t{},\n\t\t\t\twaitForSuccessfulExit(exitPromise),\n\t\t\t\tPromise.all(stdioPromises),\n\t\t\t\tallPromise,\n\t\t\t\tipcOutputPromise,\n\t\t\t\tsendIpcInput(subprocess, ipcInput),\n\t\t\t\t...originalPromises,\n\t\t\t\t...customStreamsEndPromises,\n\t\t\t]),\n\t\t\tonInternalError,\n\t\t\tthrowOnSubprocessError(subprocess, controller),\n\t\t\t...throwOnTimeout(subprocess, timeout, context, controller),\n\t\t\t...throwOnCancel({\n\t\t\t\tsubprocess,\n\t\t\t\tcancelSignal,\n\t\t\t\tgracefulCancel,\n\t\t\t\tcontext,\n\t\t\t\tcontroller,\n\t\t\t}),\n\t\t\t...throwOnGracefulCancel({\n\t\t\t\tsubprocess,\n\t\t\t\tcancelSignal,\n\t\t\t\tgracefulCancel,\n\t\t\t\tforceKillAfterDelay,\n\t\t\t\tcontext,\n\t\t\t\tcontroller,\n\t\t\t}),\n\t\t]);\n\t} catch (error) {\n\t\tcontext.terminationReason ??= 'other';\n\t\treturn Promise.all([\n\t\t\t{error},\n\t\t\texitPromise,\n\t\t\tPromise.all(stdioPromises.map(stdioPromise => getBufferedData(stdioPromise))),\n\t\t\tgetBufferedData(allPromise),\n\t\t\tgetBufferedIpcOutput(ipcOutputPromise, ipcOutput),\n\t\t\tPromise.allSettled(originalPromises),\n\t\t\tPromise.allSettled(customStreamsEndPromises),\n\t\t]);\n\t}\n};\n\n// Transforms replace `subprocess.std*`, which means they are not exposed to users.\n// However, we still want to wait for their completion.\nconst waitForOriginalStreams = (originalStreams, subprocess, streamInfo) =>\n\toriginalStreams.map((stream, fdNumber) => stream === subprocess.stdio[fdNumber]\n\t\t? undefined\n\t\t: waitForStream(stream, fdNumber, streamInfo));\n\n// Some `stdin`/`stdout`/`stderr` options create a stream, e.g. when passing a file path.\n// The `.pipe()` method automatically ends that stream when `subprocess` ends.\n// This makes sure we wait for the completion of those streams, in order to catch any error.\nconst waitForCustomStreamsEnd = (fileDescriptors, streamInfo) => fileDescriptors.flatMap(({stdioItems}, fdNumber) => stdioItems\n\t.filter(({value, stream = value}) => isNodeStream(stream, {checkOpen: false}) && !isStandardStream(stream))\n\t.map(({type, value, stream = value}) => waitForStream(stream, fdNumber, streamInfo, {\n\t\tisSameDirection: TRANSFORM_TYPES.has(type),\n\t\tstopOnExit: type === 'native',\n\t})));\n\n// Fails when the subprocess emits an `error` event\nconst throwOnSubprocessError = async (subprocess, {signal}) => {\n\tconst [error] = await once(subprocess, 'error', {signal});\n\tthrow error;\n};\n", "import {verboseLog, serializeVerboseMessage} from './log.js';\nimport {isFullVerbose} from './values.js';\n\n// When `verbose` is `'full'`, print IPC messages from the subprocess\nexport const shouldLogIpc = verboseInfo => isFullVerbose(verboseInfo, 'ipc');\n\nexport const logIpcOutput = (message, verboseInfo) => {\n\tconst verboseMessage = serializeVerboseMessage(message);\n\tverboseLog({\n\t\ttype: 'ipc',\n\t\tverboseMessage,\n\t\tfdNumber: 'ipc',\n\t\tverboseInfo,\n\t});\n};\n", "import {checkIpcMaxBuffer} from '../io/max-buffer.js';\nimport {shouldLogIpc, logIpcOutput} from '../verbose/ipc.js';\nimport {getFdSpecificValue} from '../arguments/specific.js';\nimport {loopOnMessages} from './get-each.js';\n\n// Iterate through IPC messages sent by the subprocess\nexport const waitForIpcOutput = async ({\n\tsubprocess,\n\tbuffer: bufferArray,\n\tmaxBuffer: maxBufferArray,\n\tipc,\n\tipcOutput,\n\tverboseInfo,\n}) => {\n\tif (!ipc) {\n\t\treturn ipcOutput;\n\t}\n\n\tconst isVerbose = shouldLogIpc(verboseInfo);\n\tconst buffer = getFdSpecificValue(bufferArray, 'ipc');\n\tconst maxBuffer = getFdSpecificValue(maxBufferArray, 'ipc');\n\n\tfor await (const message of loopOnMessages({\n\t\tanyProcess: subprocess,\n\t\tchannel: subprocess.channel,\n\t\tisSubprocess: false,\n\t\tipc,\n\t\tshouldAwait: false,\n\t\treference: true,\n\t})) {\n\t\tif (buffer) {\n\t\t\tcheckIpcMaxBuffer(subprocess, ipcOutput, maxBuffer);\n\t\t\tipcOutput.push(message);\n\t\t}\n\n\t\tif (isVerbose) {\n\t\t\tlogIpcOutput(message, verboseInfo);\n\t\t}\n\t}\n\n\treturn ipcOutput;\n};\n\nexport const getBufferedIpcOutput = async (ipcOutputPromise, ipcOutput) => {\n\tawait Promise.allSettled([ipcOutputPromise]);\n\treturn ipcOutput;\n};\n", "import {createDeferred} from '../utils/deferred.js';\n\n// When using multiple `.readable()`/`.writable()`/`.duplex()`, `final` and `destroy` should wait for other streams\nexport const initializeConcurrentStreams = () => ({\n\treadableDestroy: new WeakMap(),\n\twritableFinal: new WeakMap(),\n\twritableDestroy: new WeakMap(),\n});\n\n// Each file descriptor + `waitName` has its own array of promises.\n// Each promise is a single `.readable()`/`.writable()`/`.duplex()` call.\nexport const addConcurrentStream = (concurrentStreams, stream, waitName) => {\n\tconst weakMap = concurrentStreams[waitName];\n\tif (!weakMap.has(stream)) {\n\t\tweakMap.set(stream, []);\n\t}\n\n\tconst promises = weakMap.get(stream);\n\tconst promise = createDeferred();\n\tpromises.push(promise);\n\tconst resolve = promise.resolve.bind(promise);\n\treturn {resolve, promises};\n};\n\n// Wait for other streams, but stop waiting when subprocess ends\nexport const waitForConcurrentStreams = async ({resolve, promises}, subprocess) => {\n\tresolve();\n\tconst [isSubprocessExit] = await Promise.race([\n\t\tPromise.allSettled([true, subprocess]),\n\t\tPromise.all([false, ...promises]),\n\t]);\n\treturn !isSubprocessExit;\n};\n", "import {Readable} from 'node:stream';\nimport {callbackify} from 'node:util';\nimport {BINARY_ENCODINGS} from '../arguments/encoding-option.js';\nimport {getFromStream} from '../arguments/fd-options.js';\nimport {iterateOnSubprocessStream, DEFAULT_OBJECT_HIGH_WATER_MARK} from '../io/iterate.js';\nimport {createDeferred} from '../utils/deferred.js';\nimport {addConcurrentStream, waitForConcurrentStreams} from './concurrent.js';\nimport {\n\tsafeWaitForSubprocessStdin,\n\twaitForSubprocessStdout,\n\twaitForSubprocess,\n\tdestroyOtherStream,\n} from './shared.js';\n\n// Create a `Readable` stream that forwards from `stdout` and awaits the subprocess\nexport const createReadable = ({subprocess, concurrentStreams, encoding}, {from, binary: binaryOption = true, preserveNewlines = true} = {}) => {\n\tconst binary = binaryOption || BINARY_ENCODINGS.has(encoding);\n\tconst {subprocessStdout, waitReadableDestroy} = getSubprocessStdout(subprocess, from, concurrentStreams);\n\tconst {readableEncoding, readableObjectMode, readableHighWaterMark} = getReadableOptions(subprocessStdout, binary);\n\tconst {read, onStdoutDataDone} = getReadableMethods({\n\t\tsubprocessStdout,\n\t\tsubprocess,\n\t\tbinary,\n\t\tencoding,\n\t\tpreserveNewlines,\n\t});\n\tconst readable = new Readable({\n\t\tread,\n\t\tdestroy: callbackify(onReadableDestroy.bind(undefined, {subprocessStdout, subprocess, waitReadableDestroy})),\n\t\thighWaterMark: readableHighWaterMark,\n\t\tobjectMode: readableObjectMode,\n\t\tencoding: readableEncoding,\n\t});\n\tonStdoutFinished({\n\t\tsubprocessStdout,\n\t\tonStdoutDataDone,\n\t\treadable,\n\t\tsubprocess,\n\t});\n\treturn readable;\n};\n\n// Retrieve `stdout` (or other stream depending on `from`)\nexport const getSubprocessStdout = (subprocess, from, concurrentStreams) => {\n\tconst subprocessStdout = getFromStream(subprocess, from);\n\tconst waitReadableDestroy = addConcurrentStream(concurrentStreams, subprocessStdout, 'readableDestroy');\n\treturn {subprocessStdout, waitReadableDestroy};\n};\n\nexport const getReadableOptions = ({readableEncoding, readableObjectMode, readableHighWaterMark}, binary) => binary\n\t? {readableEncoding, readableObjectMode, readableHighWaterMark}\n\t: {readableEncoding, readableObjectMode: true, readableHighWaterMark: DEFAULT_OBJECT_HIGH_WATER_MARK};\n\nexport const getReadableMethods = ({subprocessStdout, subprocess, binary, encoding, preserveNewlines}) => {\n\tconst onStdoutDataDone = createDeferred();\n\tconst onStdoutData = iterateOnSubprocessStream({\n\t\tsubprocessStdout,\n\t\tsubprocess,\n\t\tbinary,\n\t\tshouldEncode: !binary,\n\t\tencoding,\n\t\tpreserveNewlines,\n\t});\n\n\treturn {\n\t\tread() {\n\t\t\tonRead(this, onStdoutData, onStdoutDataDone);\n\t\t},\n\t\tonStdoutDataDone,\n\t};\n};\n\n// Forwards data from `stdout` to `readable`\nconst onRead = async (readable, onStdoutData, onStdoutDataDone) => {\n\ttry {\n\t\tconst {value, done} = await onStdoutData.next();\n\t\tif (done) {\n\t\t\tonStdoutDataDone.resolve();\n\t\t} else {\n\t\t\treadable.push(value);\n\t\t}\n\t} catch {}\n};\n\n// When `subprocess.stdout` ends/aborts/errors, do the same on `readable`.\n// Await the subprocess, for the same reason as above.\nexport const onStdoutFinished = async ({subprocessStdout, onStdoutDataDone, readable, subprocess, subprocessStdin}) => {\n\ttry {\n\t\tawait waitForSubprocessStdout(subprocessStdout);\n\t\tawait subprocess;\n\t\tawait safeWaitForSubprocessStdin(subprocessStdin);\n\t\tawait onStdoutDataDone;\n\n\t\tif (readable.readable) {\n\t\t\treadable.push(null);\n\t\t}\n\t} catch (error) {\n\t\tawait safeWaitForSubprocessStdin(subprocessStdin);\n\t\tdestroyOtherReadable(readable, error);\n\t}\n};\n\n// When `readable` aborts/errors, do the same on `subprocess.stdout`\nexport const onReadableDestroy = async ({subprocessStdout, subprocess, waitReadableDestroy}, error) => {\n\tif (await waitForConcurrentStreams(waitReadableDestroy, subprocess)) {\n\t\tdestroyOtherReadable(subprocessStdout, error);\n\t\tawait waitForSubprocess(subprocess, error);\n\t}\n};\n\nconst destroyOtherReadable = (stream, error) => {\n\tdestroyOtherStream(stream, stream.readable, error);\n};\n", "import {finished} from 'node:stream/promises';\nimport {isStreamAbort} from '../resolve/wait-stream.js';\n\nexport const safeWaitForSubprocessStdin = async subprocessStdin => {\n\tif (subprocessStdin === undefined) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait waitForSubprocessStdin(subprocessStdin);\n\t} catch {}\n};\n\nexport const safeWaitForSubprocessStdout = async subprocessStdout => {\n\tif (subprocessStdout === undefined) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait waitForSubprocessStdout(subprocessStdout);\n\t} catch {}\n};\n\nexport const waitForSubprocessStdin = async subprocessStdin => {\n\tawait finished(subprocessStdin, {cleanup: true, readable: false, writable: true});\n};\n\nexport const waitForSubprocessStdout = async subprocessStdout => {\n\tawait finished(subprocessStdout, {cleanup: true, readable: true, writable: false});\n};\n\n// When `readable` or `writable` aborts/errors, awaits the subprocess, for the reason mentioned above\nexport const waitForSubprocess = async (subprocess, error) => {\n\tawait subprocess;\n\tif (error) {\n\t\tthrow error;\n\t}\n};\n\nexport const destroyOtherStream = (stream, isOpen, error) => {\n\tif (error && !isStreamAbort(error)) {\n\t\tstream.destroy(error);\n\t} else if (isOpen) {\n\t\tstream.destroy();\n\t}\n};\n", "import {Writable} from 'node:stream';\nimport {callbackify} from 'node:util';\nimport {getToStream} from '../arguments/fd-options.js';\nimport {addConcurrentStream, waitForConcurrentStreams} from './concurrent.js';\nimport {\n\tsafeWaitForSubprocessStdout,\n\twaitForSubprocessStdin,\n\twaitForSubprocess,\n\tdestroyOtherStream,\n} from './shared.js';\n\n// Create a `Writable` stream that forwards to `stdin` and awaits the subprocess\nexport const createWritable = ({subprocess, concurrentStreams}, {to} = {}) => {\n\tconst {subprocessStdin, waitWritableFinal, waitWritableDestroy} = getSubprocessStdin(subprocess, to, concurrentStreams);\n\tconst writable = new Writable({\n\t\t...getWritableMethods(subprocessStdin, subprocess, waitWritableFinal),\n\t\tdestroy: callbackify(onWritableDestroy.bind(undefined, {\n\t\t\tsubprocessStdin,\n\t\t\tsubprocess,\n\t\t\twaitWritableFinal,\n\t\t\twaitWritableDestroy,\n\t\t})),\n\t\thighWaterMark: subprocessStdin.writableHighWaterMark,\n\t\tobjectMode: subprocessStdin.writableObjectMode,\n\t});\n\tonStdinFinished(subprocessStdin, writable);\n\treturn writable;\n};\n\n// Retrieve `stdin` (or other stream depending on `to`)\nexport const getSubprocessStdin = (subprocess, to, concurrentStreams) => {\n\tconst subprocessStdin = getToStream(subprocess, to);\n\tconst waitWritableFinal = addConcurrentStream(concurrentStreams, subprocessStdin, 'writableFinal');\n\tconst waitWritableDestroy = addConcurrentStream(concurrentStreams, subprocessStdin, 'writableDestroy');\n\treturn {subprocessStdin, waitWritableFinal, waitWritableDestroy};\n};\n\nexport const getWritableMethods = (subprocessStdin, subprocess, waitWritableFinal) => ({\n\twrite: onWrite.bind(undefined, subprocessStdin),\n\tfinal: callbackify(onWritableFinal.bind(undefined, subprocessStdin, subprocess, waitWritableFinal)),\n});\n\n// Forwards data from `writable` to `stdin`\nconst onWrite = (subprocessStdin, chunk, encoding, done) => {\n\tif (subprocessStdin.write(chunk, encoding)) {\n\t\tdone();\n\t} else {\n\t\tsubprocessStdin.once('drain', done);\n\t}\n};\n\n// Ensures that the writable `final` and readable `end` events awaits the subprocess.\n// Like this, any subprocess failure is propagated as a stream `error` event, instead of being lost.\n// The user does not need to `await` the subprocess anymore, but now needs to await the stream completion or error.\n// When multiple writables are targeting the same stream, they wait for each other, unless the subprocess ends first.\nconst onWritableFinal = async (subprocessStdin, subprocess, waitWritableFinal) => {\n\tif (await waitForConcurrentStreams(waitWritableFinal, subprocess)) {\n\t\tif (subprocessStdin.writable) {\n\t\t\tsubprocessStdin.end();\n\t\t}\n\n\t\tawait subprocess;\n\t}\n};\n\n// When `subprocess.stdin` ends/aborts/errors, do the same on `writable`.\nexport const onStdinFinished = async (subprocessStdin, writable, subprocessStdout) => {\n\ttry {\n\t\tawait waitForSubprocessStdin(subprocessStdin);\n\t\tif (writable.writable) {\n\t\t\twritable.end();\n\t\t}\n\t} catch (error) {\n\t\tawait safeWaitForSubprocessStdout(subprocessStdout);\n\t\tdestroyOtherWritable(writable, error);\n\t}\n};\n\n// When `writable` aborts/errors, do the same on `subprocess.stdin`\nexport const onWritableDestroy = async ({subprocessStdin, subprocess, waitWritableFinal, waitWritableDestroy}, error) => {\n\tawait waitForConcurrentStreams(waitWritableFinal, subprocess);\n\tif (await waitForConcurrentStreams(waitWritableDestroy, subprocess)) {\n\t\tdestroyOtherWritable(subprocessStdin, error);\n\t\tawait waitForSubprocess(subprocess, error);\n\t}\n};\n\nconst destroyOtherWritable = (stream, error) => {\n\tdestroyOtherStream(stream, stream.writable, error);\n};\n", "import {Duplex} from 'node:stream';\nimport {callbackify} from 'node:util';\nimport {BINARY_ENCODINGS} from '../arguments/encoding-option.js';\nimport {\n\tgetSubprocessStdout,\n\tgetReadableOptions,\n\tgetReadableMethods,\n\tonStdoutFinished,\n\tonReadableDestroy,\n} from './readable.js';\nimport {\n\tgetSubprocessStdin,\n\tgetWritableMethods,\n\tonStdinFinished,\n\tonWritableDestroy,\n} from './writable.js';\n\n// Create a `Duplex` stream combining both `subprocess.readable()` and `subprocess.writable()`\nexport const createDuplex = ({subprocess, concurrentStreams, encoding}, {from, to, binary: binaryOption = true, preserveNewlines = true} = {}) => {\n\tconst binary = binaryOption || BINARY_ENCODINGS.has(encoding);\n\tconst {subprocessStdout, waitReadableDestroy} = getSubprocessStdout(subprocess, from, concurrentStreams);\n\tconst {subprocessStdin, waitWritableFinal, waitWritableDestroy} = getSubprocessStdin(subprocess, to, concurrentStreams);\n\tconst {readableEncoding, readableObjectMode, readableHighWaterMark} = getReadableOptions(subprocessStdout, binary);\n\tconst {read, onStdoutDataDone} = getReadableMethods({\n\t\tsubprocessStdout,\n\t\tsubprocess,\n\t\tbinary,\n\t\tencoding,\n\t\tpreserveNewlines,\n\t});\n\tconst duplex = new Duplex({\n\t\tread,\n\t\t...getWritableMethods(subprocessStdin, subprocess, waitWritableFinal),\n\t\tdestroy: callbackify(onDuplexDestroy.bind(undefined, {\n\t\t\tsubprocessStdout,\n\t\t\tsubprocessStdin,\n\t\t\tsubprocess,\n\t\t\twaitReadableDestroy,\n\t\t\twaitWritableFinal,\n\t\t\twaitWritableDestroy,\n\t\t})),\n\t\treadableHighWaterMark,\n\t\twritableHighWaterMark: subprocessStdin.writableHighWaterMark,\n\t\treadableObjectMode,\n\t\twritableObjectMode: subprocessStdin.writableObjectMode,\n\t\tencoding: readableEncoding,\n\t});\n\tonStdoutFinished({\n\t\tsubprocessStdout,\n\t\tonStdoutDataDone,\n\t\treadable: duplex,\n\t\tsubprocess,\n\t\tsubprocessStdin,\n\t});\n\tonStdinFinished(subprocessStdin, duplex, subprocessStdout);\n\treturn duplex;\n};\n\nconst onDuplexDestroy = async ({subprocessStdout, subprocessStdin, subprocess, waitReadableDestroy, waitWritableFinal, waitWritableDestroy}, error) => {\n\tawait Promise.all([\n\t\tonReadableDestroy({subprocessStdout, subprocess, waitReadableDestroy}, error),\n\t\tonWritableDestroy({\n\t\t\tsubprocessStdin,\n\t\t\tsubprocess,\n\t\t\twaitWritableFinal,\n\t\t\twaitWritableDestroy,\n\t\t}, error),\n\t]);\n};\n", "import {BINARY_ENCODINGS} from '../arguments/encoding-option.js';\nimport {getFromStream} from '../arguments/fd-options.js';\nimport {iterateOnSubprocessStream} from '../io/iterate.js';\n\n// Convert the subprocess to an async iterable\nexport const createIterable = (subprocess, encoding, {\n\tfrom,\n\tbinary: binaryOption = false,\n\tpreserveNewlines = false,\n} = {}) => {\n\tconst binary = binaryOption || BINARY_ENCODINGS.has(encoding);\n\tconst subprocessStdout = getFromStream(subprocess, from);\n\tconst onStdoutData = iterateOnSubprocessStream({\n\t\tsubprocessStdout,\n\t\tsubprocess,\n\t\tbinary,\n\t\tshouldEncode: true,\n\t\tencoding,\n\t\tpreserveNewlines,\n\t});\n\treturn iterateOnStdoutData(onStdoutData, subprocessStdout, subprocess);\n};\n\nconst iterateOnStdoutData = async function * (onStdoutData, subprocessStdout, subprocess) {\n\ttry {\n\t\tyield * onStdoutData;\n\t} finally {\n\t\tif (subprocessStdout.readable) {\n\t\t\tsubprocessStdout.destroy();\n\t\t}\n\n\t\tawait subprocess;\n\t}\n};\n", "import {initializeConcurrentStreams} from './concurrent.js';\nimport {createReadable} from './readable.js';\nimport {createWritable} from './writable.js';\nimport {createDuplex} from './duplex.js';\nimport {createIterable} from './iterable.js';\n\n// Add methods to convert the subprocess to a stream or iterable\nexport const addConvertedStreams = (subprocess, {encoding}) => {\n\tconst concurrentStreams = initializeConcurrentStreams();\n\tsubprocess.readable = createReadable.bind(undefined, {subprocess, concurrentStreams, encoding});\n\tsubprocess.writable = createWritable.bind(undefined, {subprocess, concurrentStreams});\n\tsubprocess.duplex = createDuplex.bind(undefined, {subprocess, concurrentStreams, encoding});\n\tsubprocess.iterable = createIterable.bind(undefined, subprocess, encoding);\n\tsubprocess[Symbol.asyncIterator] = createIterable.bind(undefined, subprocess, encoding, {});\n};\n", "// The return value is a mixin of `subprocess` and `Promise`\nexport const mergePromise = (subprocess, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\tconst value = descriptor.value.bind(promise);\n\t\tReflect.defineProperty(subprocess, property, {...descriptor, value});\n\t}\n};\n\n// eslint-disable-next-line unicorn/prefer-top-level-await\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\n\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property),\n]);\n", "import isPlainObject from 'is-plain-obj';\nimport {FD_SPECIFIC_OPTIONS} from '../arguments/specific.js';\n\n// Deep merge specific options like `env`. Shallow merge the other ones.\nexport const mergeOptions = (boundOptions, options) => {\n\tconst newOptions = Object.fromEntries(\n\t\tObject.entries(options).map(([optionName, optionValue]) => [\n\t\t\toptionName,\n\t\t\tmergeOption(optionName, boundOptions[optionName], optionValue),\n\t\t]),\n\t);\n\treturn {...boundOptions, ...newOptions};\n};\n\nconst mergeOption = (optionName, boundOptionValue, optionValue) => {\n\tif (DEEP_OPTIONS.has(optionName) && isPlainObject(boundOptionValue) && isPlainObject(optionValue)) {\n\t\treturn {...boundOptionValue, ...optionValue};\n\t}\n\n\treturn optionValue;\n};\n\nconst DEEP_OPTIONS = new Set(['env', ...FD_SPECIFIC_OPTIONS]);\n", "import isPlainObject from 'is-plain-obj';\nimport {normalizeParameters} from './parameters.js';\nimport {isTemplateString, parseTemplates} from './template.js';\nimport {execaCoreSync} from './main-sync.js';\nimport {execaCoreAsync} from './main-async.js';\nimport {mergeOptions} from './bind.js';\n\n// Wraps every exported methods to provide the following features:\n//  - template string syntax: execa`command argument`\n//  - options binding: boundExeca = execa(options)\n//  - optional argument/options: execa(file), execa(file, args), execa(file, options), execa(file, args, options)\n// `mapArguments()` and `setBoundExeca()` allows for method-specific logic.\nexport const createExeca = (mapArguments, boundOptions, deepOptions, setBoundExeca) => {\n\tconst createNested = (mapArguments, boundOptions, setBoundExeca) => createExeca(mapArguments, boundOptions, deepOptions, setBoundExeca);\n\tconst boundExeca = (...execaArguments) => callBoundExeca({\n\t\tmapArguments,\n\t\tdeepOptions,\n\t\tboundOptions,\n\t\tsetBoundExeca,\n\t\tcreateNested,\n\t}, ...execaArguments);\n\n\tif (setBoundExeca !== undefined) {\n\t\tsetBoundExeca(boundExeca, createNested, boundOptions);\n\t}\n\n\treturn boundExeca;\n};\n\nconst callBoundExeca = ({mapArguments, deepOptions = {}, boundOptions = {}, setBoundExeca, createNested}, firstArgument, ...nextArguments) => {\n\tif (isPlainObject(firstArgument)) {\n\t\treturn createNested(mapArguments, mergeOptions(boundOptions, firstArgument), setBoundExeca);\n\t}\n\n\tconst {file, commandArguments, options, isSync} = parseArguments({\n\t\tmapArguments,\n\t\tfirstArgument,\n\t\tnextArguments,\n\t\tdeepOptions,\n\t\tboundOptions,\n\t});\n\treturn isSync\n\t\t? execaCoreSync(file, commandArguments, options)\n\t\t: execaCoreAsync(file, commandArguments, options, createNested);\n};\n\nconst parseArguments = ({mapArguments, firstArgument, nextArguments, deepOptions, boundOptions}) => {\n\tconst callArguments = isTemplateString(firstArgument)\n\t\t? parseTemplates(firstArgument, nextArguments)\n\t\t: [firstArgument, ...nextArguments];\n\tconst [initialFile, initialArguments, initialOptions] = normalizeParameters(...callArguments);\n\tconst mergedOptions = mergeOptions(mergeOptions(deepOptions, boundOptions), initialOptions);\n\tconst {\n\t\tfile = initialFile,\n\t\tcommandArguments = initialArguments,\n\t\toptions = mergedOptions,\n\t\tisSync = false,\n\t} = mapArguments({file: initialFile, commandArguments: initialArguments, options: mergedOptions});\n\treturn {\n\t\tfile,\n\t\tcommandArguments,\n\t\toptions,\n\t\tisSync,\n\t};\n};\n", "// Main logic for `execaCommand()`\nexport const mapCommandAsync = ({file, commandArguments}) => parseCommand(file, commandArguments);\n\n// Main logic for `execaCommandSync()`\nexport const mapCommandSync = ({file, commandArguments}) => ({...parseCommand(file, commandArguments), isSync: true});\n\n// Convert `execaCommand(command)` into `execa(file, ...commandArguments)`\nconst parseCommand = (command, unusedArguments) => {\n\tif (unusedArguments.length > 0) {\n\t\tthrow new TypeError(`The command and its arguments must be passed as a single string: ${command} ${unusedArguments}.`);\n\t}\n\n\tconst [file, ...commandArguments] = parseCommandString(command);\n\treturn {file, commandArguments};\n};\n\n// Convert `command` string into an array of file or arguments to pass to $`${...fileOrCommandArguments}`\nexport const parseCommandString = command => {\n\tif (typeof command !== 'string') {\n\t\tthrow new TypeError(`The command must be a string: ${String(command)}.`);\n\t}\n\n\tconst trimmedCommand = command.trim();\n\tif (trimmedCommand === '') {\n\t\treturn [];\n\t}\n\n\tconst tokens = [];\n\tfor (const token of trimmedCommand.split(SPACES_REGEXP)) {\n\t\t// Allow spaces to be escaped by a backslash if not meant as a delimiter\n\t\tconst previousToken = tokens.at(-1);\n\t\tif (previousToken && previousToken.endsWith('\\\\')) {\n\t\t\t// Merge previous token with current one\n\t\t\ttokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n\t\t} else {\n\t\t\ttokens.push(token);\n\t\t}\n\t}\n\n\treturn tokens;\n};\n\nconst SPACES_REGEXP = / +/g;\n", "// Sets `$.sync` and `$.s`\nexport const setScriptSync = (boundExeca, createNested, boundOptions) => {\n\tboundExeca.sync = createNested(mapScriptSync, boundOptions);\n\tboundExeca.s = boundExeca.sync;\n};\n\n// Main logic for `$`\nexport const mapScriptAsync = ({options}) => getScriptOptions(options);\n\n// Main logic for `$.sync`\nconst mapScriptSync = ({options}) => ({...getScriptOptions(options), isSync: true});\n\n// `$` is like `execa` but with script-friendly options: `{stdin: 'inherit', preferLocal: true}`\nconst getScriptOptions = options => ({options: {...getScriptStdinOption(options), ...options}});\n\nconst getScriptStdinOption = ({input, inputFile, stdio}) => input === undefined && inputFile === undefined && stdio === undefined\n\t? {stdin: 'inherit'}\n\t: {};\n\n// When using $(...).pipe(...), most script-friendly options should apply to both commands.\n// However, some options (like `stdin: 'inherit'`) would create issues with piping, i.e. cannot be deep.\nexport const deepScriptOptions = {preferLocal: true};\n", "import {createExeca} from './lib/methods/create.js';\nimport {mapCommandAsync, mapCommandSync} from './lib/methods/command.js';\nimport {mapNode} from './lib/methods/node.js';\nimport {mapScriptAsync, setScriptSync, deepScriptOptions} from './lib/methods/script.js';\nimport {getIpcExport} from './lib/ipc/methods.js';\n\nexport {parseCommandString} from './lib/methods/command.js';\nexport {ExecaError, ExecaSyncError} from './lib/return/final-error.js';\n\nexport const execa = createExeca(() => ({}));\nexport const execaSync = createExeca(() => ({isSync: true}));\nexport const execaCommand = createExeca(mapCommandAsync);\nexport const execaCommandSync = createExeca(mapCommandSync);\nexport const execaNode = createExeca(mapNode);\nexport const $ = createExeca(mapScriptAsync, {}, deepScriptOptions, setScriptSync);\n\nconst {\n\tsendMessage,\n\tgetOneMessage,\n\tgetEachMessage,\n\tgetCancelSignal,\n} = getIpcExport();\nexport {\n\tsendMessage,\n\tgetOneMessage,\n\tgetEachMessage,\n\tgetCancelSignal,\n};\n", "// src/lib/docker.ts\nimport { execa } from \"execa\";\nimport path from \"path\";\nimport { appDir, envFile, HLConfig } from \"./config.js\";\n\nexport async function buildAndPush(opts: {\n  context: string;\n  dockerfile?: string;\n  tags: string[];\n  platforms?: string;\n}) {\n  const args = [\"buildx\", \"build\", \"--push\"];\n  if (opts.platforms) args.push(\"--platform\", opts.platforms);\n  for (const t of opts.tags) args.push(\"-t\", t);\n  if (opts.dockerfile) args.push(\"--file\", opts.dockerfile);\n  args.push(opts.context);\n  await execa(\"docker\", args, { stdio: \"inherit\" });\n}\n\nexport async function retagLatest(image: string, fromTag: string) {\n  await execa(\"docker\", [\"pull\", fromTag], { stdio: \"inherit\" });\n  await execa(\"docker\", [\"tag\", fromTag, `${image}:latest`], {\n    stdio: \"inherit\",\n  });\n  await execa(\"docker\", [\"push\", `${image}:latest`], { stdio: \"inherit\" });\n}\n\nexport async function restartCompose(cfg: HLConfig) {\n  const dir = appDir(cfg.app);\n  await execa(\"docker\", [\"compose\", \"-f\", \"compose.yml\", \"pull\"], {\n    cwd: dir,\n    stdio: \"inherit\",\n  });\n  await execa(\"docker\", [\"compose\", \"-f\", \"compose.yml\", \"up\", \"-d\"], {\n    cwd: dir,\n    stdio: \"inherit\",\n  });\n}\n\nexport async function runMigrations(cfg: HLConfig, imageTag: string) {\n  const dir = appDir(cfg.app);\n  const envPath = envFile(cfg.app);\n  const envArgs = Object.entries(cfg.migrations.env).flatMap(([k, v]) => [\n    \"-e\",\n    `${k}=${v}`,\n  ]);\n  // run attached to app network so it can reach db\n  const runArgs = [\n    \"run\",\n    \"--rm\",\n    \"--env-file\",\n    envPath,\n    \"--network\",\n    cfg.network,\n    imageTag,\n    ...cfg.migrations.command,\n  ];\n  await execa(\"docker\", [\"run\", ...envArgs, ...runArgs], {\n    cwd: dir,\n    stdio: \"inherit\",\n  });\n}\n\nexport async function inspectContainerNetworks(name: string) {\n  const { stdout } = await execa(\"docker\", [\n    \"inspect\",\n    name,\n    \"--format\",\n    \"{{json .NetworkSettings.Networks}}\",\n  ]);\n  return stdout;\n}\n\nexport function tagFor(cfg: HLConfig, sha: string, branch: string) {\n  const short = sha.slice(0, 7);\n  return {\n    sha: `${cfg.image}:${short}`,\n    branchSha: `${cfg.image}:${branch}-${short}`,\n    latest: `${cfg.image}:latest`,\n  };\n}\n\nexport function composePath(cfg: HLConfig) {\n  return path.join(appDir(cfg.app), \"compose.yml\");\n}\n", "// src/lib/health.ts\nimport http from \"http\";\nimport { parseDuration } from \"./config.js\";\n\nexport async function waitForHealthy(\n  url: string,\n  timeout: string,\n  interval: string\n) {\n  const timeoutMs = parseDuration(timeout);\n  const intervalMs = parseDuration(interval);\n  const start = Date.now();\n  while (Date.now() - start < timeoutMs) {\n    const ok = await ping(url);\n    if (ok) return;\n    await new Promise((r) => setTimeout(r, intervalMs));\n  }\n  throw new Error(`health check timed out: ${url}`);\n}\n\nfunction ping(urlStr: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    const req = http.get(urlStr, (res) => {\n      res.resume();\n      resolve(res.statusCode! >= 200 && res.statusCode! < 400);\n    });\n    req.on(\"error\", () => resolve(false));\n    req.setTimeout(3000, () => {\n      req.destroy();\n      resolve(false);\n    });\n  });\n}\n", "let FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nexport const $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t)\n}\n\nfunction init(x, y) {\n\tlet rgx = new RegExp(`\\\\x1b\\\\[${y}m`, 'g');\n\tlet open = `\\x1b[${x}m`, close = `\\x1b[${y}m`;\n\n\treturn function (txt) {\n\t\tif (!$.enabled || txt == null) return txt;\n\t\treturn open + (!!~(''+txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n\t};\n}\n\n// modifiers\nexport const reset = init(0, 0);\nexport const bold = init(1, 22);\nexport const dim = init(2, 22);\nexport const italic = init(3, 23);\nexport const underline = init(4, 24);\nexport const inverse = init(7, 27);\nexport const hidden = init(8, 28);\nexport const strikethrough = init(9, 29);\n\n// colors\nexport const black = init(30, 39);\nexport const red = init(31, 39);\nexport const green = init(32, 39);\nexport const yellow = init(33, 39);\nexport const blue = init(34, 39);\nexport const magenta = init(35, 39);\nexport const cyan = init(36, 39);\nexport const white = init(37, 39);\nexport const gray = init(90, 39);\nexport const grey = init(90, 39);\n\n// background colors\nexport const bgBlack = init(40, 49);\nexport const bgRed = init(41, 49);\nexport const bgGreen = init(42, 49);\nexport const bgYellow = init(43, 49);\nexport const bgBlue = init(44, 49);\nexport const bgMagenta = init(45, 49);\nexport const bgCyan = init(46, 49);\nexport const bgWhite = init(47, 49);\n", "// src/lib/log.ts\nimport { bold, gray, green, red, yellow } from \"kleur/colors\";\nexport const log = (m: string) => console.log(gray(\"\u2022\"), m);\nexport const ok = (m: string) => console.log(green(\"\u2713\"), bold(m));\nexport const warn = (m: string) => console.log(yellow(\"!\"), m);\nexport const err = (m: string) => console.error(red(\"x\"), m);\n", "// src/commands/deploy.ts\nimport { Command } from \"commander\";\nimport { loadConfig } from \"../lib/config.js\";\nimport {\n  buildAndPush,\n  retagLatest,\n  restartCompose,\n  runMigrations,\n  tagFor,\n} from \"../lib/docker.js\";\nimport { waitForHealthy } from \"../lib/health.js\";\nimport { log, ok } from \"../lib/log.js\";\n\nexport function register(prog: Command) {\n  prog\n    .command(\"deploy\")\n    .description(\n      \"Build->push->migrate->restart->health (invoke from post-receive)\"\n    )\n    .requiredOption(\"--app <name>\")\n    .requiredOption(\"--sha <sha>\")\n    .option(\"--branch <name>\", \"git branch\", \"master\")\n    .option(\"--context <dir>\", \"build context\", \".\")\n    .option(\"--dockerfile <path>\", \"Dockerfile path\", \"Dockerfile\")\n    .action(async (opts) => {\n      const cfg = await loadConfig(opts.app);\n      const tags = tagFor(cfg, opts.sha, opts.branch);\n\n      log(`building ${cfg.app} ${opts.branch} (${opts.sha.slice(0, 7)})`);\n      await buildAndPush({\n        context: opts.context,\n        dockerfile: opts.dockerfile,\n        tags: [tags.sha, tags.branchSha, tags.latest],\n        platforms: cfg.platforms,\n      });\n\n      log(\"running migrations\");\n      await runMigrations(cfg, tags.sha);\n\n      log(\"retagging latest\");\n      await retagLatest(cfg.image, tags.sha);\n\n      log(\"restarting compose\");\n      await restartCompose(cfg);\n\n      log(\"waiting for health\");\n      await waitForHealthy(\n        cfg.health.url,\n        cfg.health.timeout,\n        cfg.health.interval\n      );\n\n      ok(\"deploy complete\");\n    });\n}\n", "// src/commands/compose.ts\nimport { Command } from \"commander\";\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport { appDir } from \"../lib/config.js\";\nimport { writeUnit } from \"../lib/systemd.js\";\nimport { log, ok } from \"../lib/log.js\";\n\nexport function register(prog: Command) {\n  prog\n    .command(\"init\")\n    .description(\"Create compose.yml, .env, systemd for an app\")\n    .requiredOption(\"--app <name>\")\n    .requiredOption(\"--image <ref>\")\n    .requiredOption(\"--domain <host>\")\n    .requiredOption(\"--port <num>\", \"internal container port\")\n    .option(\"--network <name>\", \"traefik network\", \"traefik_proxy\")\n    .option(\"--resolver <name>\", \"acme resolver\", \"myresolver\")\n    .action(async (opts) => {\n      const d = appDir(opts.app);\n      await fs.mkdir(d, { recursive: true });\n\n      const envPath = path.join(d, \".env\");\n      try {\n        await fs.access(envPath);\n      } catch {\n        await fs.writeFile(\n          envPath,\n          `APP=${opts.app}\\nDOMAIN=${opts.domain}\\nSERVICE_PORT=${opts.port}\\n`\n        );\n      }\n\n      const compose = `version: \"3.9\"\nservices:\n  ${opts.app}:\n    image: ${opts.image}:latest\n    restart: unless-stopped\n    env_file: [.env]\n    networks: [${opts.network}]\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.${opts.app}.rule=Host(\\\\\\`${\"${DOMAIN}\"}\\\\\\`)\"\n      - \"traefik.http.routers.${opts.app}.entrypoints=websecure\"\n      - \"traefik.http.routers.${opts.app}.tls.certresolver=${opts.resolver}\"\n      - \"traefik.http.services.${\n        opts.app\n      }.loadbalancer.server.port=${\"${SERVICE_PORT}\"}\"\nnetworks:\n  ${opts.network}:\n    external: true\n    name: ${opts.network}\n`;\n      await fs.writeFile(path.join(d, \"compose.yml\"), compose);\n\n      const unit = await writeUnit(opts.app);\n      log(`wrote ${path.join(d, \"compose.yml\")} and ${envPath}`);\n      ok(`enabled ${unit}`);\n    });\n}\n", "// src/lib/systemd.ts\nimport { execa } from \"execa\";\nimport { promises as fs } from \"fs\";\nimport { appDir } from \"./config.js\";\n\nexport async function writeUnit(app: string) {\n  const unit = `app-${app}.service`;\n  const wd = appDir(app);\n  const text = `[Unit]\nDescription=Compose stack for ${app}\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=${wd}\nExecStart=/usr/bin/docker compose -f compose.yml up -d\nExecStop=/usr/bin/docker compose -f compose.yml down\nTimeoutStartSec=0\n\n[Install]\nWantedBy=multi-user.target\n`;\n  await fs.writeFile(`/etc/systemd/system/${unit}`, text);\n  await execa(\"systemctl\", [\"daemon-reload\"], { stdio: \"inherit\" });\n  await execa(\"systemctl\", [\"enable\", \"--now\", unit], { stdio: \"inherit\" });\n  return unit;\n}\n", "// src/commands/rollback.ts\nimport { Command } from \"commander\";\nimport { loadConfig } from \"../lib/config.js\";\nimport { retagLatest, restartCompose } from \"../lib/docker.js\";\nimport { waitForHealthy } from \"../lib/health.js\";\nimport { log, ok } from \"../lib/log.js\";\n\nexport function register(prog: Command) {\n  prog\n    .command(\"rollback\")\n    .description(\"Retag :latest to a previous sha and restart (health-gated)\")\n    .argument(\"<app>\")\n    .argument(\"<sha>\", \"commit sha or image short tag\")\n    .action(async (app, sha) => {\n      const cfg = await loadConfig(app);\n      const from = `${cfg.image}:${sha.slice(0, 7)}`;\n      log(`retagging ${from} -> ${cfg.image}:latest`);\n      await retagLatest(cfg.image, from);\n      log(\"restarting compose\");\n      await restartCompose(cfg);\n      log(\"waiting for health\");\n      await waitForHealthy(\n        cfg.health.url,\n        cfg.health.timeout,\n        cfg.health.interval\n      );\n      ok(\"rollback complete\");\n    });\n}\n", "// src/commands/secrets.ts\nimport { Command } from \"commander\";\nimport { promises as fs } from \"fs\";\nimport { appDir, envFile } from \"../lib/config.js\";\n\nexport function register(prog: Command) {\n  const cmd = prog.command(\"secrets\").description(\"Manage .env secrets\");\n\n  cmd\n    .command(\"set\")\n    .argument(\"<app>\")\n    .argument(\"<pairs...>\", \"KEY=VALUE\")\n    .action(async (app, pairs: string[]) => {\n      const f = envFile(app);\n      await fs.mkdir(appDir(app), { recursive: true });\n      try {\n        await fs.access(f);\n      } catch {\n        await fs.writeFile(f, \"\");\n      }\n      const text = await fs.readFile(f, \"utf8\");\n      const lines = text.split(\"\\n\");\n      const map = new Map<string, string>();\n      for (const l of lines)\n        if (l && !l.startsWith(\"#\")) {\n          const i = l.indexOf(\"=\");\n          if (i > 0) map.set(l.slice(0, i), l.slice(i + 1));\n        }\n      for (const kv of pairs) {\n        const i = kv.indexOf(\"=\");\n        if (i < 1) throw new Error(`bad pair: ${kv}`);\n        map.set(kv.slice(0, i), kv.slice(i + 1));\n      }\n      const out =\n        Array.from(map.entries())\n          .map(([k, v]) => `${k}=${v}`)\n          .join(\"\\n\") + \"\\n\";\n      await fs.writeFile(f, out, { mode: 0o600 });\n      console.log(`updated ${f}`);\n    });\n\n  cmd\n    .command(\"ls\")\n    .argument(\"<app>\")\n    .action(async (app) => {\n      const txt = await fs.readFile(envFile(app), \"utf8\").catch(() => \"\");\n      for (const l of txt.split(\"\\n\")) {\n        if (!l || l.startsWith(\"#\")) continue;\n        const i = l.indexOf(\"=\");\n        if (i > 0) console.log(l.slice(0, i) + \"=***\");\n      }\n    });\n}\n", "// src/cli.ts\nimport { Command } from \"commander\";\nimport { register as regDeploy } from \"./commands/deploy.js\";\nimport { register as regCompose } from \"./commands/compose.js\";\nimport { register as regRollback } from \"./commands/rollback.js\";\nimport { register as regSecrets } from \"./commands/secrets.js\";\n\nconst prog = new Command().name(\"hl\").description(\"Homelab deploy toolbox\");\nregDeploy(prog);\nregCompose(prog);\nregRollback(prog);\nregSecrets(prog);\nprog.parseAsync().catch((e) => {\n  console.error(e?.stderr || e?.stack || e);\n  process.exit(1);\n});\n"],
  "mappings": "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G,EAChB,OAAO,YACP,YAAY,yCACZ,SAAS,OACT,GAEMH,GAAS,GACFD,GAAS,GCftB,IAAAK,GAAqB,mBCEd,IAAMC,GAAQ,CACrB,CACA,KAAK,SACL,OAAO,EACP,OAAO,YACP,YAAY,kBACZ,SAAS,OACT,EACA,CACA,KAAK,SACL,OAAO,EACP,OAAO,YACP,YAAY,gCACZ,SAAS,MACT,EACA,CACA,KAAK,UACL,OAAO,EACP,OAAO,OACP,YAAY,iCACZ,SAAS,OACT,EACA,CACA,KAAK,SACL,OAAO,EACP,OAAO,OACP,YAAY,8BACZ,SAAS,MACT,EACA,CACA,KAAK,UACL,OAAO,EACP,OAAO,OACP,YAAY,sBACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,EACP,OAAO,OACP,YAAY,UACZ,SAAS,MACT,EACA,CACA,KAAK,SACL,OAAO,EACP,OAAO,OACP,YAAY,UACZ,SAAS,KACT,EACA,CACA,KAAK,SACL,OAAO,EACP,OAAO,OACP,YACA,oEACA,SAAS,KACT,EACA,CACA,KAAK,SACL,OAAO,EACP,OAAO,YACP,YAAY,oDACZ,SAAS,OACT,EACA,CACA,KAAK,SACL,OAAO,EACP,OAAO,OACP,YAAY,kCACZ,SAAS,MACT,EACA,CACA,KAAK,UACL,OAAO,EACP,OAAO,YACP,YAAY,qBACZ,SAAS,QACT,OAAO,EACP,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,8BACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,OACP,YAAY,qBACZ,SAAS,MACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,8BACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,wBACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,mBACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,cACZ,SAAS,MACT,EACA,CACA,KAAK,YACL,OAAO,GACP,OAAO,YACP,YAAY,+BACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,SACP,YAAY,+CACZ,SAAS,OACT,EACA,CACA,KAAK,SACL,OAAO,GACP,OAAO,SACP,YAAY,+CACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,UACP,YAAY,WACZ,SAAS,QACT,OAAO,EACP,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,QACP,YAAY,SACZ,SAAS,QACT,OAAO,EACP,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,QACP,YAAY,mCACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,QACP,YAAY,gDACZ,SAAS,OACT,EACA,CACA,KAAK,WACL,OAAO,GACP,OAAO,YACP,YAAY,oCACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,QACP,YAAY,qDACZ,SAAS,OACT,EACA,CACA,KAAK,SACL,OAAO,GACP,OAAO,SACP,YAAY,mCACZ,SAAS,KACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,OACP,YAAY,oBACZ,SAAS,KACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,OACP,YAAY,eACZ,SAAS,KACT,EACA,CACA,KAAK,YACL,OAAO,GACP,OAAO,YACP,YAAY,mBACZ,SAAS,KACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,mBACZ,SAAS,KACT,EACA,CACA,KAAK,WACL,OAAO,GACP,OAAO,SACP,YAAY,+BACZ,SAAS,KACT,EACA,CACA,KAAK,QACL,OAAO,GACP,OAAO,YACP,YAAY,mBACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,YACP,YAAY,gBACZ,SAAS,OACT,EACA,CACA,KAAK,UACL,OAAO,GACP,OAAO,SACP,YAAY,kCACZ,SAAS,OACT,EACA,CACA,KAAK,SACL,OAAO,GACP,OAAO,YACP,YAAY,8BACZ,SAAS,SACT,EACA,CACA,KAAK,SACL,OAAO,GACP,OAAO,OACP,YAAY,sBACZ,SAAS,OACT,EACA,CACA,KAAK,YACL,OA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",
  "names": ["require_error", "__commonJSMin", "exports", "CommanderError", "exitCode", "code", "message", "InvalidArgumentError", "require_argument", "__commonJSMin", "exports", "InvalidArgumentError", "Argument", "name", "description", "value", "previous", "fn", "values", "arg", "humanReadableArgName", "nameOutput", "require_help", "__commonJSMin", "exports", "humanReadableArgName", "Help", "cmd", "visibleCommands", "helpCommand", "a", "b", "getSortKey", "option", "visibleOptions", "helpOption", "removeShort", "removeLong", "globalOptions", "ancestorCmd", "argument", "args", "arg", "helper", "max", "command", "cmdName", "ancestorCmdNames", "extraInfo", "choice", "extraDescripton", "termWidth", "helpWidth", "itemIndentWidth", "itemSeparatorWidth", "formatItem", "term", "description", "fullText", "formatList", "textArray", "output", "commandDescription", "argumentList", "optionList", "globalOptionList", "commandList", "str", "width", "indent", "minColumnWidth", "indents", "manualIndent", "columnWidth", "leadingStr", "columnText", "indentString", "breaks", "regex", "lines", "line", "i", "require_option", "__commonJSMin", "exports", "InvalidArgumentError", "Option", "flags", "description", "optionFlags", "splitOptionFlags", "value", "arg", "names", "impliedOptionValues", "newImplied", "name", "fn", "mandatory", "hide", "previous", "values", "camelcase", "DualOptions", "options", "option", "key", "optionKey", "preset", "negativeValue", "str", "word", "shortFlag", "longFlag", "flagParts", "require_suggestSimilar", "__commonJSMin", "exports", "editDistance", "a", "b", "d", "i", "j", "cost", "suggestSimilar", "word", "candidates", "searchingOptions", "candidate", "similar", "bestDistance", "minSimilarity", "distance", "length", "require_command", "__commonJSMin", "exports", "EventEmitter", "childProcess", "path", "fs", "process", "Argument", "humanReadableArgName", "CommanderError", "Help", "Option", "DualOptions", "suggestSimilar", "Command", "_Command", "name", "str", "write", "sourceCommand", "result", "command", "nameAndArgs", "actionOptsOrExecDesc", "execOpts", "desc", "opts", "args", "cmd", "configuration", "displayHelp", "displaySuggestion", "description", "fn", "defaultValue", "argument", "names", "detail", "previousArgument", "enableOrNameAndArgs", "helpName", "helpArgs", "helpDescription", "helpCommand", "deprecatedDescription", "event", "listener", "allowedValues", "err", "exitCode", "code", "message", "expectedArgsCount", "actionArgs", "flags", "target", "value", "previous", "invalidArgumentMessage", "option", "matchingOption", "matchingFlag", "knownBy", "alreadyUsed", "existingCmd", "newCmd", "oname", "positiveLongFlag", "handleOptionValue", "val", "invalidValueMessage", "valueSource", "oldValue", "config", "regex", "def", "m", "parseArg", "combine", "allowUnknown", "allowExcess", "positional", "passThrough", "storeAsProperties", "key", "source", "argv", "parseOptions", "execArgv", "userArgs", "subcommand", "launchWithNode", "sourceExt", "findFile", "baseDir", "baseName", "localBin", "foundExt", "ext", "executableFile", "executableDir", "resolvedScriptPath", "localFile", "legacyName", "proc", "incrementNodeInspectorPort", "signal", "exitCallback", "executableDirMessage", "executableMissing", "wrappedError", "commandName", "operands", "unknown", "subCommand", "promiseChain", "subcommandName", "arg", "i", "myParseArg", "parsedValue", "processedArgs", "declaredArg", "index", "processed", "v", "promise", "hooks", "hookedCommand", "callback", "hookDetail", "hook", "parsed", "checkForUnknownOptions", "commandEvent", "anOption", "definedNonDefaultOptions", "optionKey", "conflictingAndDefined", "defined", "dest", "maybeOption", "activeVariadicOption", "len", "combinedOptions", "errorOptions", "dualHelper", "hasCustomOptionValue", "impliedKey", "conflictingOption", "findBestOptionFromValue", "optionValue", "negativeOption", "positiveOption", "getErrorMessage", "bestOption", "flag", "suggestion", "candidateFlags", "moreFlags", "receivedArgs", "expected", "s", "unknownName", "candidateNames", "versionOption", "argsDescription", "alias", "matchingCommand", "aliases", "filename", "contextOptions", "helper", "context", "deprecatedCallback", "helpInformation", "position", "text", "helpEvent", "helpStr", "helpOption", "debugOption", "debugHost", "debugPort", "match", "require_commander", "__commonJSMin", "exports", "Argument", "Command", "CommanderError", "InvalidArgumentError", "Help", "Option", "name", "flags", "description", "require_windows", "__commonJSMin", "exports", "module", "isexe", "sync", "fs", "checkPathExt", "path", "options", "pathext", "i", "p", "checkStat", "stat", "cb", "er", "require_mode", "__commonJSMin", "exports", "module", "isexe", "sync", "fs", "path", "options", "cb", "er", "stat", "checkStat", "checkMode", "mod", "uid", "gid", "myUid", "myGid", "u", "g", "o", "ug", "ret", "require_isexe", "__commonJSMin", "exports", "module", "fs", "core", "isexe", "sync", "path", "options", "cb", "resolve", "reject", "er", "is", "require_which", "__commonJSMin", "exports", "module", "isWindows", "path", "COLON", "isexe", "getNotFoundError", "cmd", "getPathInfo", "opt", "colon", "pathEnv", "pathExtExe", "pathExt", "which", "cb", "found", "step", "i", "resolve", "reject", "ppRaw", "pathPart", "pCmd", "p", "subStep", "ii", "ext", "er", "is", "res", "whichSync", "j", "cur", "require_path_key", "__commonJSMin", "exports", "module", "pathKey", "options", "environment", "key", "require_resolveCommand", "__commonJSMin", "exports", "module", "path", "which", "getPathKey", "resolveCommandAttempt", "parsed", "withoutPathExt", "env", "cwd", "hasCustomCwd", "shouldSwitchCwd", "resolved", "resolveCommand", "require_escape", "__commonJSMin", "exports", "module", "metaCharsRegExp", "escapeCommand", "arg", "escapeArgument", "doubleEscapeMetaChars", "require_shebang_regex", "__commonJSMin", "exports", "module", "require_shebang_command", "__commonJSMin", "exports", "module", "shebangRegex", "string", "match", "path", "argument", "binary", "require_readShebang", "__commonJSMin", "exports", "module", "fs", "shebangCommand", "readShebang", "command", "buffer", "fd", "require_parse", "__commonJSMin", "exports", "module", "path", "resolveCommand", "escape", "readShebang", "isWin", "isExecutableRegExp", "isCmdShimRegExp", "detectShebang", "parsed", "shebang", "parseNonShell", "commandFile", "needsShell", "needsDoubleEscapeMetaChars", "arg", "shellCommand", "parse", "command", "args", "options", "require_enoent", "__commonJSMin", "exports", "module", "isWin", "notFoundError", "original", "syscall", "hookChildProcess", "cp", "parsed", "originalEmit", "name", "arg1", "err", "verifyENOENT", "status", "verifyENOENTSync", "require_cross_spawn", "__commonJSMin", "exports", "module", "cp", "parse", "enoent", "spawn", "command", "args", "options", "parsed", "spawned", "spawnSync", "result", "import_index", "program", "createCommand", "createArgument", "createOption", "CommanderError", "InvalidArgumentError", "InvalidOptionArgumentError", "Command", "Argument", "Option", "Help", "commander", "import_fs", "import_path", "isNothing", "subject", "isObject", "toArray", "sequence", "extend", "target", "source", "index", "length", "key", "sourceKeys", "repeat", "string", "count", "result", "cycle", "isNegativeZero", "number", "isNothing_1", "isObject_1", "toArray_1", "repeat_1", "isNegativeZero_1", "extend_1", "common", "formatError", "exception", "compact", "where", "message", "YAMLException$1", "reason", "mark", "getLine", "buffer", "lineStart", "lineEnd", "position", "maxLineLength", "head", "tail", "maxHalfLength", "padStart", "max", "makeSnippet", "options", "re", "lineStarts", "lineEnds", "match", "foundLineNo", "i", "line", "lineNoLength", "snippet", "TYPE_CONSTRUCTOR_OPTIONS", "YAML_NODE_KINDS", "compileStyleAliases", "map", "style", "alias", "Type$1", "tag", "name", "data", "type", "compileList", "schema", "currentType", "newIndex", "previousType", "previousIndex", "compileMap", "collectType", "Schema$1", "definition", "implicit", "explicit", "type$1", "str", "seq", "failsafe", "resolveYamlNull", "constructYamlNull", "isNull", "object", "_null", "resolveYamlBoolean", "constructYamlBoolean", "isBoolean", "bool", "isHexCode", "c", "isOctCode", "isDecCode", "resolveYamlInteger", "hasDigits", "ch", "constructYamlInteger", "value", "sign", "isInteger", "int", "obj", "YAML_FLOAT_PATTERN", "resolveYamlFloat", "constructYamlFloat", "SCIENTIFIC_WITHOUT_DOT", "representYamlFloat", "res", "isFloat", "float", "json", "core", "YAML_DATE_REGEXP", "YAML_TIMESTAMP_REGEXP", "resolveYamlTimestamp", "constructYamlTimestamp", "year", "month", "day", "hour", "minute", "second", "fraction", "delta", "tz_hour", "tz_minute", "date", "representYamlTimestamp", "timestamp", "resolveYamlMerge", "merge", "BASE64_MAP", "resolveYamlBinary", "code", "idx", "bitlen", "constructYamlBinary", "tailbits", "input", "bits", "representYamlBinary", "isBinary", "binary", "_hasOwnProperty$3", "_toString$2", "resolveYamlOmap", "objectKeys", "pair", "pairKey", "pairHasKey", "constructYamlOmap", "omap", "_toString$1", "resolveYamlPairs", "keys", "constructYamlPairs", "pairs", "_hasOwnProperty$2", "resolveYamlSet", "constructYamlSet", "set", "_default", "_hasOwnProperty$1", "CONTEXT_FLOW_IN", "CONTEXT_FLOW_OUT", "CONTEXT_BLOCK_IN", "CONTEXT_BLOCK_OUT", "CHOMPING_CLIP", "CHOMPING_STRIP", "CHOMPING_KEEP", "PATTERN_NON_PRINTABLE", "PATTERN_NON_ASCII_LINE_BREAKS", "PATTERN_FLOW_INDICATORS", "PATTERN_TAG_HANDLE", "PATTERN_TAG_URI", "_class", "is_EOL", "is_WHITE_SPACE", "is_WS_OR_EOL", "is_FLOW_INDICATOR", "fromHexCode", "lc", "escapedHexLen", "fromDecimalCode", "simpleEscapeSequence", "charFromCodepoint", "simpleEscapeCheck", "simpleEscapeMap", "State$1", "generateError", "state", "throwError", "throwWarning", "directiveHandlers", "args", "major", "minor", "handle", "prefix", "captureSegment", "start", "end", "checkJson", "_position", "_length", "_character", "_result", "mergeMappings", "destination", "overridableKeys", "quantity", "storeMappingPair", "keyTag", "keyNode", "valueNode", "startLine", "startLineStart", "startPos", "readLineBreak", "skipSeparationSpace", "allowComments", "checkIndent", "lineBreaks", "testDocumentSeparator", "writeFoldedLines", "readPlainScalar", "nodeIndent", "withinFlowCollection", "preceding", "following", "captureStart", "captureEnd", "hasPendingContent", "_line", "_lineStart", "_lineIndent", "_kind", "readSingleQuotedScalar", "readDoubleQuotedScalar", "hexLength", "hexResult", "tmp", "readFlowCollection", "readNext", "_pos", "_tag", "_anchor", "terminator", "isPair", "isExplicitPair", "isMapping", "composeNode", "readBlockScalar", "folding", "chomping", "didReadContent", "detectedIndent", "textIndent", "emptyLines", "atMoreIndented", "readBlockSequence", "detected", "readBlockMapping", "flowIndent", "allowCompact", "_keyLine", "_keyLineStart", "_keyPos", "atExplicitKey", "readTagProperty", "isVerbatim", "isNamed", "tagHandle", "tagName", "readAnchorProperty", "readAlias", "parentIndent", "nodeContext", "allowToSeek", "allowBlockStyles", "allowBlockScalars", "allowBlockCollections", "indentStatus", "atNewLine", "hasContent", "typeIndex", "typeQuantity", "typeList", "blockIndent", "readDocument", "documentStart", "directiveName", "directiveArgs", "hasDirectives", "loadDocuments", "nullpos", "loadAll$1", "iterator", "documents", "load$1", "loadAll_1", "load_1", "loader", "_toString", "_hasOwnProperty", "CHAR_BOM", "CHAR_TAB", "CHAR_LINE_FEED", "CHAR_CARRIAGE_RETURN", "CHAR_SPACE", "CHAR_EXCLAMATION", "CHAR_DOUBLE_QUOTE", "CHAR_SHARP", "CHAR_PERCENT", "CHAR_AMPERSAND", "CHAR_SINGLE_QUOTE", "CHAR_ASTERISK", "CHAR_COMMA", "CHAR_MINUS", "CHAR_COLON", "CHAR_EQUALS", "CHAR_GREATER_THAN", "CHAR_QUESTION", "CHAR_COMMERCIAL_AT", "CHAR_LEFT_SQUARE_BRACKET", "CHAR_RIGHT_SQUARE_BRACKET", "CHAR_GRAVE_ACCENT", "CHAR_LEFT_CURLY_BRACKET", "CHAR_VERTICAL_LINE", "CHAR_RIGHT_CURLY_BRACKET", "ESCAPE_SEQUENCES", "DEPRECATED_BOOLEANS_SYNTAX", "DEPRECATED_BASE60_SYNTAX", "compileStyleMap", "encodeHex", "character", "QUOTING_TYPE_SINGLE", "QUOTING_TYPE_DOUBLE", "State", "indentString", "spaces", "ind", "next", "generateNextLine", "level", "testImplicitResolving", "isWhitespace", "isPrintable", "isNsCharOrWhitespace", "isPlainSafe", "prev", "inblock", "cIsNsCharOrWhitespace", "cIsNsChar", "isPlainSafeFirst", "isPlainSafeLast", "codePointAt", "pos", "first", "needIndentIndicator", "leadingSpaceRe", "STYLE_PLAIN", "STYLE_SINGLE", "STYLE_LITERAL", "STYLE_FOLDED", "STYLE_DOUBLE", "chooseScalarStyle", "singleLineOnly", "indentPerLevel", "lineWidth", "testAmbiguousType", "quotingType", "forceQuotes", "char", "prevChar", "hasLineBreak", "hasFoldableLine", "shouldTrackWidth", "previousLineBreak", "plain", "writeScalar", "iskey", "indent", "testAmbiguity", "blockHeader", "dropEndingNewline", "foldString", "escapeString", "indentIndicator", "clip", "keep", "chomp", "width", "lineRe", "nextLF", "foldLine", "prevMoreIndented", "moreIndented", "breakRe", "curr", "escapeSeq", "writeFlowSequence", "writeNode", "writeBlockSequence", "writeFlowMapping", "objectKeyList", "objectKey", "objectValue", "pairBuffer", "writeBlockMapping", "explicitPair", "detectType", "block", "isblockseq", "tagStr", "objectOrArray", "duplicateIndex", "duplicate", "getDuplicateReferences", "objects", "duplicatesIndexes", "inspectNode", "dump$1", "dump_1", "dumper", "renamed", "from", "to", "Type", "Schema", "FAILSAFE_SCHEMA", "JSON_SCHEMA", "CORE_SCHEMA", "DEFAULT_SCHEMA", "load", "loadAll", "dump", "YAMLException", "types", "safeLoad", "safeLoadAll", "safeDump", "jsYaml", "js_yaml_default", "external_exports", "__export", "BRAND", "DIRTY", "EMPTY_PATH", "INVALID", "NEVER", "OK", "ParseStatus", "ZodType", "ZodAny", "ZodArray", "ZodBigInt", "ZodBoolean", "ZodBranded", "ZodCatch", "ZodDate", "ZodDefault", "ZodDiscriminatedUnion", "ZodEffects", "ZodEnum", "ZodError", "ZodFirstPartyTypeKind", "ZodFunction", "ZodIntersection", "ZodIssueCode", "ZodLazy", "ZodLiteral", "ZodMap", "ZodNaN", "ZodNativeEnum", "ZodNever", "ZodNull", "ZodNullable", "ZodNumber", "ZodObject", "ZodOptional", "ZodParsedType", "ZodPipeline", "ZodPromise", "ZodReadonly", "ZodRecord", "ZodSet", "ZodString", "ZodSymbol", "ZodTuple", "ZodUndefined", "ZodUnion", "ZodUnknown", "ZodVoid", "addIssueToContext", "anyType", "arrayType", "bigIntType", "booleanType", "coerce", "custom", "dateType", "datetimeRegex", "en_default", "discriminatedUnionType", "effectsType", "enumType", "functionType", "getErrorMap", "getParsedType", "instanceOfType", "intersectionType", "isAborted", "isAsync", "isDirty", "isValid", "late", "lazyType", "literalType", "makeIssue", "mapType", "nanType", "nativeEnumType", "neverType", "nullType", "nullableType", "numberType", "objectType", "objectUtil", "oboolean", "onumber", "optionalType", "ostring", "pipelineType", "preprocessType", "promiseType", "quotelessJson", "recordType", "setType", "setErrorMap", "strictObjectType", "stringType", "symbolType", "tupleType", "undefinedType", "unionType", "unknownType", "util", "voidType", "util", "_", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "val", "joinValues", "array", "separator", "value", "objectUtil", "first", "second", "ZodParsedType", "getParsedType", "data", "ZodIssueCode", "util", "quotelessJson", "obj", "ZodError", "_ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "value", "formErrors", "firstEl", "errorMap", "issue", "_ctx", "message", "ZodIssueCode", "ZodParsedType", "util", "en_default", "overrideErrorMap", "en_default", "setErrorMap", "map", "overrideErrorMap", "getErrorMap", "makeIssue", "params", "data", "path", "errorMaps", "issueData", "fullPath", "fullIssue", "errorMessage", "maps", "m", "map", "EMPTY_PATH", "addIssueToContext", "ctx", "overrideMap", "getErrorMap", "issue", "en_default", "x", "ParseStatus", "_ParseStatus", "status", "results", "arrayValue", "s", "INVALID", "pairs", "syncPairs", "pair", "key", "value", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "errorUtil", "message", "ParseInputLazyPath", "parent", "value", "path", "key", "handleResult", "ctx", "result", "isValid", "error", "ZodError", "processCreateParams", "params", "errorMap", "invalid_type_error", "required_error", "description", "iss", "message", "ZodType", "input", "getParsedType", "ParseStatus", "isAsync", "data", "err", "maybeAsyncResult", "check", "getIssueProperties", "val", "setError", "ZodIssueCode", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "def", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "ZodReadonly", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "jwtRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "ipv4Regex", "ipv4CidrRegex", "ipv6Regex", "ipv6CidrRegex", "base64Regex", "base64urlRegex", "dateRegexSource", "dateRegex", "timeRegexSource", "args", "secondsRegexSource", "secondsQuantifier", "timeRegex", "datetimeRegex", "regex", "opts", "isValidIP", "ip", "version", "isValidJWT", "jwt", "alg", "header", "base64", "decoded", "isValidCidr", "ZodString", "_ZodString", "ZodParsedType", "addIssueToContext", "INVALID", "status", "tooBig", "tooSmall", "util", "validation", "errorUtil", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "_ZodNumber", "kind", "inclusive", "ZodBigInt", "_ZodBigInt", "ZodBoolean", "OK", "ZodDate", "_ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "_ZodArray", "item", "i", "schema", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "_ZodObject", "shape", "keys", "shapeKeys", "extraKeys", "pairs", "keyValidator", "unknownKeys", "catchall", "syncPairs", "pair", "issue", "defaultError", "augmentation", "merging", "index", "mask", "newField", "createZodEnum", "handleResults", "results", "unionErrors", "childCtx", "dirty", "issues", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "_ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "a", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "isAborted", "merged", "isDirty", "left", "right", "_ZodTuple", "items", "itemIndex", "x", "rest", "schemas", "ZodRecord", "_ZodRecord", "keyType", "valueType", "first", "second", "third", "ZodMap", "finalMap", "ZodSet", "_ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "ZodFunction", "_ZodFunction", "makeArgsIssue", "makeIssue", "getErrorMap", "en_default", "makeReturnsIssue", "returns", "fn", "me", "parsedArgs", "e", "parsedReturns", "returnType", "func", "getter", "values", "_ZodEnum", "expectedValues", "enumValues", "newDef", "opt", "nativeEnumValues", "promisified", "effect", "checkCtx", "arg", "processed", "DIRTY", "executeRefinement", "acc", "inner", "base", "preprocess", "ZodOptional", "ZodType", "input", "ZodParsedType", "OK", "type", "params", "ZodFirstPartyTypeKind", "processCreateParams", "ZodNullable", "ZodDefault", "ctx", "data", "ZodCatch", "newCtx", "result", "isAsync", "ZodError", "ZodNaN", "addIssueToContext", "ZodIssueCode", "INVALID", "BRAND", "ZodBranded", "ZodPipeline", "_ZodPipeline", "status", "inResult", "DIRTY", "a", "b", "ZodReadonly", "freeze", "isValid", "cleanParams", "p", "custom", "check", "_params", "fatal", "ZodAny", "r", "_fatal", "late", "ZodObject", "ZodFirstPartyTypeKind", "instanceOfType", "cls", "params", "custom", "data", "stringType", "ZodString", "numberType", "ZodNumber", "nanType", "ZodNaN", "bigIntType", "ZodBigInt", "booleanType", "ZodBoolean", "dateType", "ZodDate", "symbolType", "ZodSymbol", "undefinedType", "ZodUndefined", "nullType", "ZodNull", "anyType", "ZodAny", "unknownType", "ZodUnknown", "neverType", "ZodNever", "voidType", "ZodVoid", "arrayType", "ZodArray", "objectType", "ZodObject", "strictObjectType", "unionType", "ZodUnion", "discriminatedUnionType", "ZodDiscriminatedUnion", "intersectionType", "ZodIntersection", "tupleType", "ZodTuple", "recordType", "ZodRecord", "mapType", "ZodMap", "setType", "ZodSet", "functionType", "ZodFunction", "lazyType", "ZodLazy", "literalType", "ZodLiteral", "enumType", "ZodEnum", "nativeEnumType", "ZodNativeEnum", "promiseType", "ZodPromise", "effectsType", "ZodEffects", "optionalType", "ZodOptional", "nullableType", "ZodNullable", "preprocessType", "pipelineType", "ZodPipeline", "ostring", "onumber", "oboolean", "coerce", "arg", "NEVER", "INVALID", "HL_ROOT", "ConfigSchema", "external_exports", "loadConfig", "app", "p", "path", "txt", "fs", "raw", "js_yaml_default", "appDir", "envFile", "parseDuration", "s", "m", "n", "isPlainObject", "value", "prototype", "import_node_url", "safeNormalizeFileUrl", "file", "name", "fileString", "normalizeFileUrl", "normalizeDenoExecPath", "isDenoExecPath", "normalizeParameters", "rawFile", "rawArguments", "rawOptions", "filePath", "safeNormalizeFileUrl", "commandArguments", "options", "isPlainObject", "commandArgument", "normalizedArguments", "nullByteArgument", "normalizedArgument", "import_node_child_process", "import_node_string_decoder", "objectToString", "isArrayBuffer", "value", "isUint8Array", "bufferToUint8Array", "buffer", "textEncoder", "stringToUint8Array", "string", "textDecoder", "uint8ArrayToString", "uint8Array", "joinToString", "uint8ArraysOrStrings", "encoding", "uint8ArraysToStrings", "uint8ArrayOrString", "decoder", "strings", "finalString", "joinToUint8Array", "concatUint8Arrays", "stringsToUint8Arrays", "uint8Arrays", "result", "getJoinLength", "index", "joinLength", "isTemplateString", "templates", "parseTemplates", "expressions", "tokens", "index", "template", "parseTemplate", "file", "commandArguments", "nextTokens", "leadingWhitespaces", "trailingWhitespaces", "splitByWhitespaces", "newTokens", "concatTokens", "expression", "expressionTokens", "parseExpression", "rawTemplate", "templateStart", "DELIMITERS", "templateIndex", "rawIndex", "rawCharacter", "nextRawCharacter", "ESCAPE_LENGTH", "isSeparated", "typeOfExpression", "isPlainObject", "getSubprocessResult", "stdout", "isUint8Array", "uint8ArrayToString", "import_node_child_process", "import_node_util", "import_node_process", "isStandardStream", "stream", "STANDARD_STREAMS", "process", "STANDARD_STREAMS_ALIASES", "getStreamName", "fdNumber", "normalizeFdSpecificOptions", "options", "optionsCopy", "optionName", "FD_SPECIFIC_OPTIONS", "normalizeFdSpecificOption", "optionBaseArray", "getStdioLength", "optionArray", "normalizeFdSpecificValue", "addDefaultValue", "stdio", "STANDARD_STREAMS_ALIASES", "optionValue", "isPlainObject", "normalizeOptionObject", "fdName", "compareFdName", "fdNumber", "parseFdName", "fdNameA", "fdNameB", "getFdNameOrder", "parseFd", "regexpResult", "FD_REGEXP", "DEFAULT_OPTIONS", "verboseDefault", "getFdSpecificValue", "isVerbose", "verbose", "fdNumber", "getFdVerbose", "isFullVerbose", "getVerboseFunction", "fdVerbose", "isVerboseFunction", "getFdGenericVerbose", "getFdSpecificValue", "VERBOSE_VALUES", "import_node_util", "import_node_process", "import_node_util", "joinCommand", "filePath", "rawArguments", "fileAndArguments", "command", "escapedCommand", "fileAndArgument", "quoteString", "escapeControlCharacters", "escapeLines", "lines", "line", "SPECIAL_CHAR_REGEXP", "character", "escapeControlCharacter", "commonEscape", "COMMON_ESCAPES", "codepoint", "codepointHex", "ASTRAL_START", "getSpecialCharRegExp", "escapedArgument", "NO_ESCAPE_REGEXP", "import_node_process", "isUnicodeSupported", "env", "process", "TERM", "TERM_PROGRAM", "common", "specialMainSymbols", "specialFallbackSymbols", "mainSymbols", "fallbackSymbols", "shouldUseMain", "isUnicodeSupported", "figures", "figures_default", "replacements", "import_node_tty", "hasColors", "tty", "format", "open", "close", "input", "openCode", "closeCode", "string", "index", "result", "lastIndex", "replaceCode", "reset", "bold", "dim", "italic", "underline", "overline", "inverse", "hidden", "strikethrough", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "gray", "bgBlack", "bgRed", "bgGreen", "bgYellow", "bgBlue", "bgMagenta", "bgCyan", "bgWhite", "bgGray", "redBright", "greenBright", "yellowBright", "blueBright", "magentaBright", "cyanBright", "whiteBright", "bgRedBright", "bgGreenBright", "bgYellowBright", "bgBlueBright", "bgMagentaBright", "bgCyanBright", "bgWhiteBright", "defaultVerboseFunction", "type", "message", "timestamp", "piped", "commandId", "failed", "reject", "timestampString", "serializeTimestamp", "icon", "ICONS", "color", "COLORS", "gray", "padField", "field", "padding", "getFinalIcon", "figures_default", "identity", "string", "bold", "redBright", "yellowBright", "applyVerboseOnLines", "printedLines", "verboseInfo", "fdNumber", "verboseFunction", "getVerboseFunction", "verboseLine", "verboseObject", "applyVerboseFunction", "printedLine", "appendNewline", "verboseLog", "type", "verboseMessage", "fdNumber", "verboseInfo", "result", "verboseObject", "getVerboseObject", "printedLines", "getPrintedLines", "finalLines", "applyVerboseOnLines", "escapedCommand", "commandId", "piped", "options", "message", "getPrintedLine", "defaultVerboseFunction", "serializeVerboseMessage", "messageString", "escapeLines", "TAB_SIZE", "logCommand", "escapedCommand", "verboseInfo", "isVerbose", "verboseLog", "getVerboseInfo", "verbose", "escapedCommand", "rawOptions", "validateVerbose", "commandId", "getCommandId", "isVerbose", "COMMAND_ID", "fdVerbose", "VERBOSE_VALUES", "isVerboseFunction", "allowedValues", "allowedValue", "import_node_process", "getStartTime", "getDurationMs", "startTime", "handleCommand", "filePath", "rawArguments", "rawOptions", "startTime", "getStartTime", "command", "escapedCommand", "joinCommand", "verbose", "normalizeFdSpecificOption", "verboseInfo", "getVerboseInfo", "logCommand", "import_node_path", "import_node_process", "import_cross_spawn", "import_node_process", "import_node_path", "pathKey", "options", "env", "platform", "key", "import_node_util", "import_node_child_process", "import_node_path", "import_node_url", "execFileOriginal", "execFileCallback", "toPath", "urlOrPath", "traversePathUp", "startPath", "currentPath", "path", "toPath", "previousPath", "TEN_MEGABYTES_IN_BYTES", "npmRunPath", "cwd", "process", "pathOption", "pathKey", "preferLocal", "execPath", "addExecPath", "cwdPath", "path", "toPath", "result", "pathParts", "applyPreferLocal", "applyExecPath", "directory", "traversePathUp", "pathPart", "npmRunPathEnv", "env", "options", "pathName", "import_promises", "getFinalError", "originalError", "message", "isSync", "ErrorClass", "ExecaSyncError", "ExecaError", "options", "DiscardedError", "setErrorName", "value", "execaErrorSymbol", "isExecaError", "error", "isErrorInstance", "import_node_os", "import_node_os", "getRealtimeSignals", "length", "SIGRTMAX", "SIGRTMIN", "getRealtimeSignal", "value", "index", "import_node_os", "SIGNALS", "getSignals", "realtimeSignals", "getRealtimeSignals", "SIGNALS", "normalizeSignal", "name", "defaultNumber", "description", "action", "forced", "standard", "constantSignal", "supported", "getSignalsByName", "signals", "getSignals", "getSignalByName", "name", "number", "description", "supported", "action", "forced", "standard", "signalsByName", "getSignalsByNumber", "length", "signalsA", "value", "getSignalByNumber", "signal", "findSignalByNumber", "signalA", "signalsByNumber", "normalizeKillSignal", "killSignal", "optionName", "normalizeSignal", "normalizeSignalArgument", "signal", "signalNameOrInteger", "normalizeSignalInteger", "normalizeSignalName", "getAvailableSignals", "signalInteger", "signalsIntegerToName", "getSignalsIntegerToName", "signalName", "getAvailableSignalNames", "getAvailableSignalIntegers", "signalIntegerTwo", "getSignalDescription", "signalsByName", "normalizeForceKillAfterDelay", "forceKillAfterDelay", "DEFAULT_FORCE_KILL_TIMEOUT", "subprocessKill", "kill", "killSignal", "onInternalError", "context", "controller", "signalOrError", "errorArgument", "signal", "error", "parseKillArguments", "emitKillError", "killResult", "setKillTimeout", "isErrorInstance", "normalizeSignalArgument", "killOnTimeout", "controllerSignal", "import_node_events", "onAbortedSignal", "mainSignal", "stopSignal", "validateCancelSignal", "cancelSignal", "throwOnCancel", "subprocess", "gracefulCancel", "context", "controller", "terminateOnCancel", "signal", "onAbortedSignal", "import_promises", "import_node_util", "validateIpcMethod", "methodName", "isSubprocess", "ipc", "isConnected", "validateIpcOption", "validateConnection", "getMethodName", "getOtherProcessName", "throwOnEarlyDisconnect", "throwOnStrictDeadlockError", "getStrictResponseError", "error", "throwOnMissingStrict", "throwOnStrictDisconnect", "getAbortDisconnectError", "throwOnMissingParent", "handleEpipeError", "handleSerializationError", "message", "isSerializationError", "code", "SERIALIZATION_ERROR_CODES", "SERIALIZATION_ERROR_MESSAGES", "serializationErrorMessage", "parameters", "getNamespaceName", "disconnect", "anyProcess", "createDeferred", "methods", "promise", "resolve", "reject", "getToStream", "destination", "to", "options", "fileDescriptors", "SUBPROCESS_OPTIONS", "fdNumber", "getFdNumber", "destinationStream", "getInvalidStdioOptionMessage", "getFromStream", "source", "from", "sourceStream", "fdName", "isWritable", "parseFdNumber", "validateFdNumber", "parseFd", "validOptions", "defaultValue", "getOptionName", "fileDescriptor", "getUsedDescriptor", "optionName", "optionValue", "getInvalidStdioOption", "serializeOptionValue", "stdin", "stdout", "stderr", "stdio", "usedDescriptor", "value", "import_node_events", "import_node_events", "incrementMaxListeners", "eventEmitter", "maxListenersIncrement", "signal", "maxListeners", "import_node_events", "import_node_events", "import_promises", "addReference", "channel", "reference", "addReferenceCount", "removeReference", "removeReferenceCount", "undoAddedReferences", "isSubprocess", "redoAddedReferences", "onMessage", "anyProcess", "channel", "isSubprocess", "ipcEmitter", "wrappedMessage", "handleStrictResponse", "handleAbort", "INCOMING_MESSAGES", "incomingMessages", "waitForOutgoingMessages", "message", "handleStrictRequest", "onDisconnect", "boundOnMessage", "abortOnDisconnect", "redoAddedReferences", "getIpcEmitter", "anyProcess", "channel", "isSubprocess", "IPC_EMITTERS", "ipcEmitter", "forwardEvents", "boundOnMessage", "onMessage", "onDisconnect", "undoAddedReferences", "isConnected", "handleSendStrict", "anyProcess", "channel", "isSubprocess", "message", "strict", "ipcEmitter", "getIpcEmitter", "hasListeners", "hasMessageListeners", "count", "REQUEST_TYPE", "validateStrictDeadlock", "outgoingMessages", "wrappedMessage", "id", "STRICT_RESPONSES", "handleStrictRequest", "response", "RESPONSE_TYPE", "sendMessage", "error", "handleStrictResponse", "waitForStrictResponse", "deferred", "createDeferred", "controller", "isDeadlock", "throwOnDisconnect", "throwOnStrictDeadlockError", "throwOnMissingStrict", "signal", "incrementMaxListeners", "throwOnStrictDisconnect", "startSendMessage", "anyProcess", "wrappedMessage", "strict", "OUTGOING_MESSAGES", "outgoingMessages", "onMessageSent", "createDeferred", "id", "outgoingMessage", "endSendMessage", "waitForOutgoingMessages", "ipcEmitter", "hasMessageListeners", "validateStrictDeadlock", "getMinListenerCount", "SUBPROCESS_OPTIONS", "getFdSpecificValue", "sendMessage", "anyProcess", "channel", "isSubprocess", "ipc", "message", "strict", "methodName", "validateIpcMethod", "sendMessageAsync", "wrappedMessage", "handleSendStrict", "outgoingMessagesState", "startSendMessage", "sendOneMessage", "error", "disconnect", "endSendMessage", "sendMethod", "getSendMethod", "waitForStrictResponse", "handleEpipeError", "handleSerializationError", "PROCESS_SEND_METHODS", "sendAbort", "subprocess", "message", "methodName", "validateConnection", "sendOneMessage", "GRACEFUL_CANCEL_TYPE", "getCancelSignal", "anyProcess", "channel", "isSubprocess", "ipc", "startIpc", "cancelController", "cancelListening", "throwOnMissingParent", "abortOnDisconnect", "getIpcEmitter", "handleAbort", "wrappedMessage", "getAbortDisconnectError", "validateGracefulCancel", "gracefulCancel", "cancelSignal", "ipc", "serialization", "throwOnGracefulCancel", "subprocess", "forceKillAfterDelay", "context", "controller", "sendOnAbort", "signal", "onAbortedSignal", "reason", "getReason", "sendAbort", "killOnTimeout", "error", "import_promises", "validateTimeout", "timeout", "throwOnTimeout", "subprocess", "context", "controller", "killAfterTimeout", "signal", "DiscardedError", "import_node_process", "import_node_path", "mapNode", "options", "handleNodeOption", "file", "commandArguments", "shouldHandleNode", "nodePath", "nodeOptions", "nodeOption", "cwd", "formerNodePath", "normalizedNodePath", "safeNormalizeFileUrl", "resolvedNodePath", "path", "newOptions", "import_node_v8", "validateIpcInputOption", "ipcInput", "ipc", "serialization", "validateIpcInput", "validateAdvancedInput", "error", "validateJsonInput", "sendIpcInput", "subprocess", "validateEncoding", "encoding", "ENCODINGS", "correctEncoding", "getCorrectEncoding", "serializeEncoding", "correctEncodings", "TEXT_ENCODINGS", "BINARY_ENCODINGS", "lowerEncoding", "ENCODING_ALIASES", "import_node_fs", "import_node_path", "import_node_process", "normalizeCwd", "cwd", "getDefaultCwd", "cwdString", "safeNormalizeFileUrl", "path", "process", "error", "fixCwdError", "originalMessage", "cwdStat", "normalizeOptions", "filePath", "rawArguments", "rawOptions", "normalizeCwd", "processedFile", "processedArguments", "processedOptions", "handleNodeOption", "file", "commandArguments", "initialOptions", "crossSpawn", "fdOptions", "normalizeFdSpecificOptions", "options", "addDefaultOptions", "validateTimeout", "validateEncoding", "validateIpcInputOption", "validateCancelSignal", "validateGracefulCancel", "normalizeFileUrl", "getEnv", "normalizeKillSignal", "normalizeForceKillAfterDelay", "lines", "fdNumber", "BINARY_ENCODINGS", "process", "path", "extendEnv", "preferLocal", "cwd", "localDirectory", "encoding", "reject", "cleanup", "all", "windowsHide", "killSignal", "forceKillAfterDelay", "gracefulCancel", "ipcInput", "ipc", "serialization", "envOption", "node", "nodePath", "env", "npmRunPathEnv", "concatenateShell", "file", "commandArguments", "options", "import_node_util", "stripFinalNewline", "input", "stripFinalNewlineString", "stripFinalNewlineBinary", "LF", "CR", "LF_BINARY", "CR_BINARY", "import_node_events", "import_promises", "isStream", "stream", "checkOpen", "isWritableStream", "isReadableStream", "isDuplexStream", "options", "a", "c", "#n", "#r", "#e", "e", "t", "#s", "n", "i", "o", "r", "u", "h", "s", "getAsyncIterable", "stream", "isReadableStream", "nodeImports", "getStreamIterable", "toString", "h", "controller", "state", "handleStreamEnd", "chunk", "error", "getStreamContents", "stream", "init", "convertChunk", "getSize", "truncateChunk", "addChunk", "getFinalChunk", "finalize", "maxBuffer", "asyncIterable", "getAsyncIterable", "state", "chunk", "chunkType", "getChunkType", "convertedChunk", "appendChunk", "appendFinalChunk", "error", "normalizedError", "chunkSize", "newLength", "addNewChunk", "truncatedChunk", "MaxBufferError", "typeOfChunk", "prototypeName", "objectToString", "identity", "value", "noop", "getContentsProperty", "contents", "throwObjectStream", "chunk", "getLengthProperty", "convertedChunk", "getStreamAsArray", "stream", "options", "getStreamContents", "arrayMethods", "initArray", "increment", "addArrayChunk", "convertedChunk", "contents", "identity", "noop", "getContentsProperty", "getStreamAsArrayBuffer", "stream", "options", "getStreamContents", "arrayBufferMethods", "initArrayBuffer", "useTextEncoder", "chunk", "textEncoder", "useUint8Array", "useUint8ArrayWithOffset", "truncateArrayBufferChunk", "convertedChunk", "chunkSize", "addArrayBufferChunk", "contents", "previousLength", "length", "newContents", "hasArrayBufferResize", "resizeArrayBuffer", "resizeArrayBufferSlow", "arrayBuffer", "getNewContentsLength", "SCALE_FACTOR", "finalizeArrayBuffer", "throwObjectStream", "getLengthProperty", "noop", "getStreamAsString", "stream", "options", "getStreamContents", "stringMethods", "initString", "useTextDecoder", "chunk", "textDecoder", "addStringChunk", "convertedChunk", "contents", "truncateStringChunk", "chunkSize", "getFinalStringChunk", "finalChunk", "identity", "throwObjectStream", "getLengthProperty", "getContentsProperty", "nodeImports", "handleMaxBuffer", "error", "stream", "readableObjectMode", "lines", "encoding", "fdNumber", "MaxBufferError", "unit", "getMaxBufferUnit", "checkIpcMaxBuffer", "subprocess", "ipcOutput", "maxBuffer", "getMaxBufferMessage", "streamName", "threshold", "getMaxBufferInfo", "getFdSpecificValue", "getStreamName", "isMaxBufferSync", "resultError", "output", "result", "getMaxBufferSync", "truncateMaxBufferSync", "isMaxBuffer", "maxBufferValue", "stdoutMaxBuffer", "createMessages", "stdio", "all", "ipcOutput", "originalError", "signal", "signalDescription", "exitCode", "escapedCommand", "timedOut", "isCanceled", "isGracefullyCanceled", "isMaxBuffer", "isForcefullyTerminated", "forceKillAfterDelay", "killSignal", "maxBuffer", "timeout", "cwd", "errorCode", "prefix", "getErrorPrefix", "originalMessage", "getOriginalMessage", "suffix", "shortMessage", "messageStdio", "message", "ipcMessage", "serializeIpcMessage", "messagePart", "escapeLines", "stripFinalNewline", "serializeMessagePart", "forcefulSuffix", "getForcefulSuffix", "getMaxBufferMessage", "getSignalDescription", "DiscardedError", "isExecaError", "escapedOriginalMessage", "fixCwdError", "messageItem", "serializeMessageItem", "isUint8Array", "uint8ArrayToString", "makeSuccessResult", "command", "escapedCommand", "stdio", "all", "ipcOutput", "cwd", "startTime", "omitUndefinedProperties", "getDurationMs", "makeEarlyError", "error", "fileDescriptors", "options", "isSync", "makeError", "originalError", "timedOut", "isCanceled", "isGracefullyCanceled", "isMaxBuffer", "isForcefullyTerminated", "rawExitCode", "rawSignal", "timeoutDuration", "timeout", "forceKillAfterDelay", "killSignal", "maxBuffer", "exitCode", "signal", "signalDescription", "normalizeExitPayload", "originalMessage", "shortMessage", "message", "createMessages", "getFinalError", "getErrorProperties", "result", "value", "getSignalDescription", "toZeroIfInfinity", "value", "parseNumber", "milliseconds", "parseBigint", "parseMilliseconds", "isZero", "value", "pluralize", "word", "count", "SECOND_ROUNDING_EPSILON", "ONE_DAY_IN_MILLISECONDS", "prettyMilliseconds", "milliseconds", "options", "isBigInt", "sign", "result", "floorDecimals", "decimalDigits", "flooredInterimValue", "add", "long", "short", "valueString", "wholeDigits", "minLength", "parsed", "parseMilliseconds", "days", "seconds", "microseconds", "nanoseconds", "millisecondsAndBelow", "millisecondsDecimalDigits", "roundedMilliseconds", "millisecondsString", "secondsDecimalDigits", "secondsFixed", "secondsString", "separator", "logError", "result", "verboseInfo", "verboseLog", "logResult", "result", "verboseInfo", "isVerbose", "logError", "logDuration", "verboseMessage", "prettyMilliseconds", "verboseLog", "handleResult", "result", "verboseInfo", "reject", "logResult", "import_node_fs", "getStdioItemType", "value", "optionName", "isAsyncGenerator", "isSyncGenerator", "isUrl", "isFilePathObject", "isWebStream", "isStream", "isUint8Array", "isAsyncIterableObject", "isIterableObject", "isTransformStream", "getTransformStreamType", "isTransformOptions", "getTransformObjectType", "isDuplexStream", "getDuplexType", "getGeneratorObjectType", "validateNonGeneratorType", "final", "binary", "objectMode", "typeName", "checkUndefinedOption", "checkBooleanOption", "transform", "isGenerator", "isPlainObject", "isRegularUrl", "key", "FILE_PATH_KEYS", "isFilePathString", "file", "isUnknownStdioString", "type", "KNOWN_STDIO_STRINGS", "isReadableStream", "isWritableStream", "isObject", "TRANSFORM_TYPES", "FILE_TYPES", "SPECIAL_DUPLICATE_TYPES_SYNC", "SPECIAL_DUPLICATE_TYPES", "FORBID_DUPLICATE_TYPES", "TYPE_TO_MESSAGE", "getTransformObjectModes", "objectMode", "index", "newTransforms", "direction", "getOutputObjectModes", "getInputObjectModes", "writableObjectMode", "readableObjectMode", "getFdObjectMode", "stdioItems", "lastTransform", "type", "TRANSFORM_TYPES", "normalizeTransforms", "stdioItems", "optionName", "direction", "options", "type", "TRANSFORM_TYPES", "getTransforms", "encoding", "transforms", "newTransforms", "index", "stdioItem", "normalizeTransform", "sortTransforms", "normalizeDuplex", "normalizeTransformStream", "normalizeGenerator", "transform", "writableObjectMode", "readableObjectMode", "objectMode", "value", "isPlainObject", "getTransformObjectModes", "final", "binaryOption", "preserveNewlines", "binary", "BINARY_ENCODINGS", "import_node_process", "getStreamDirection", "stdioItems", "fdNumber", "optionName", "directions", "stdioItem", "getStdioItemDirection", "DEFAULT_DIRECTION", "type", "value", "KNOWN_DIRECTIONS", "guessStreamDirection", "anyDirection", "alwaysInput", "isWritableStream", "isReadableStream", "standardStreamDirection", "getStandardStreamDirection", "isStream", "process", "normalizeIpcStdioArray", "stdioArray", "ipc", "normalizeStdioOption", "stdio", "ipc", "buffer", "options", "verboseInfo", "isSync", "stdioArray", "getStdioArray", "stdioOption", "fdNumber", "addDefaultValue", "normalizeStdioSync", "normalizeIpcStdioArray", "STANDARD_STREAMS_ALIASES", "alias", "hasAlias", "length", "_", "item", "isFullVerbose", "isOutputPipeOnly", "import_node_fs", "import_node_tty", "handleNativeStream", "stdioItem", "type", "isStdioArray", "fdNumber", "direction", "isSync", "handleNativeStreamSync", "handleNativeStreamAsync", "value", "optionName", "targetFd", "getTargetFd", "isStream", "targetFdNumber", "getTargetFdNumber", "tty", "serializeOptionValue", "bufferToUint8Array", "standardStreamIndex", "STANDARD_STREAMS", "getStandardStream", "standardStream", "handleInputOptions", "input", "inputFile", "fdNumber", "handleInputOption", "handleInputFileOption", "getInputType", "isReadableStream", "isUint8Array", "getInputFileType", "isUrl", "isFilePathString", "filterDuplicates", "stdioItems", "stdioItemOne", "indexOne", "stdioItemTwo", "indexTwo", "getDuplicateStream", "type", "value", "optionName", "direction", "fileDescriptors", "isSync", "otherStdioItems", "getOtherStdioItems", "validateDuplicateStreamSync", "SPECIAL_DUPLICATE_TYPES", "getDuplicateStreamInstance", "FORBID_DUPLICATE_TYPES", "validateDuplicateTransform", "stdioItem", "SPECIAL_DUPLICATE_TYPES_SYNC", "duplicateStdioItems", "hasSameValue", "differentStdioItem", "throwOnDuplicateStream", "secondValue", "duplicateStdioItem", "transform", "TYPE_TO_MESSAGE", "handleStdio", "addProperties", "options", "verboseInfo", "isSync", "initialFileDescriptors", "normalizeStdioOption", "stdioOption", "fdNumber", "getFileDescriptor", "fileDescriptors", "getFinalFileDescriptors", "stdioItems", "forwardStdio", "optionName", "getStreamName", "initialStdioItems", "isStdioArray", "initializeStdioItems", "direction", "getStreamDirection", "stdioItem", "handleNativeStream", "normalizedStdioItems", "normalizeTransforms", "objectMode", "getFdObjectMode", "validateFileObjectMode", "value", "initializeStdioItem", "handleInputOptions", "filterDuplicates", "validateStdioArray", "validateStreams", "getStdioItemType", "INVALID_STDIO_ARRAY_OPTIONS", "validateFileStdio", "type", "isRegularUrl", "isUnknownStdioString", "fileStdioItem", "FILE_TYPES", "fileDescriptor", "getFinalFileDescriptor", "error", "cleanupCustomStreams", "finalStdioItems", "addStreamProperties", "duplicateStream", "getDuplicateStream", "stream", "isStandardStream", "handleStdioSync", "options", "verboseInfo", "handleStdio", "addPropertiesSync", "forbiddenIfSync", "type", "optionName", "throwInvalidSyncValue", "TYPE_TO_MESSAGE", "forbiddenNativeIfSync", "value", "addProperties", "bufferToUint8Array", "file", "append", "stripNewline", "value", "stripFinalNewline", "fdNumber", "getStripFinalNewline", "import_node_stream", "getSplitLinesGenerator", "binary", "preserveNewlines", "skipped", "state", "initializeSplitLines", "splitLinesSync", "chunk", "objectMode", "item", "splitLinesItemSync", "transform", "final", "splitGenerator", "linesFinal", "previousChunks", "start", "end", "newlineLength", "getNewlineLength", "line", "concatString", "getAppendNewlineGenerator", "readableObjectMode", "appendNewlineGenerator", "isWindowsNewline", "unixNewline", "windowsNewline", "LF", "concatBytes", "linesStringInfo", "linesUint8ArrayInfo", "firstChunk", "secondChunk", "concatUint8Array", "import_node_buffer", "getValidateTransformInput", "writableObjectMode", "optionName", "validateStringTransformInput", "chunk", "isUint8Array", "getValidateTransformReturn", "readableObjectMode", "validateObjectTransformReturn", "validateStringTransformReturn", "validateEmptyReturn", "import_node_buffer", "import_node_string_decoder", "getEncodingTransformGenerator", "binary", "encoding", "skipped", "encodingUint8ArrayGenerator", "stringDecoder", "encodingStringGenerator", "encodingStringFinal", "textEncoder", "chunk", "bufferToUint8Array", "isUint8Array", "lastChunk", "import_node_util", "pushChunks", "getChunks", "state", "getChunksArguments", "transformStream", "chunk", "transformChunk", "generators", "index", "transform", "identityGenerator", "transformedChunk", "finalChunks", "final", "generatorFinalChunks", "finalChunk", "destroyTransform", "currentIterable", "error", "pushChunksSync", "getChunksSync", "getChunksArguments", "transformStream", "done", "chunk", "error", "runTransformSync", "generators", "chunks", "transformChunkSync", "finalChunksSync", "index", "transform", "identityGenerator", "transformedChunk", "final", "generatorFinalChunksSync", "finalChunk", "generatorToStream", "value", "transform", "final", "writableObjectMode", "readableObjectMode", "optionName", "encoding", "state", "generators", "addInternalGenerators", "transformAsync", "isAsyncGenerator", "finalAsync", "transformMethod", "pushChunks", "transformChunk", "pushChunksSync", "transformChunkSync", "finalMethod", "finalChunks", "finalChunksSync", "destroyMethod", "destroyTransform", "chunk", "done", "runGeneratorsSync", "chunks", "stdioItems", "isInput", "type", "reversedGenerators", "runTransformSync", "binary", "preserveNewlines", "getValidateTransformInput", "getEncodingTransformGenerator", "getSplitLinesGenerator", "getValidateTransformReturn", "getAppendNewlineGenerator", "addInputOptionsSync", "fileDescriptors", "options", "fdNumber", "getInputFdNumbers", "addInputOptionSync", "direction", "stdioItems", "allStdioItems", "contents", "type", "optionName", "TYPE_TO_MESSAGE", "transformedContents", "applySingleInputGeneratorsSync", "joinToUint8Array", "newContents", "runGeneratorsSync", "validateSerializable", "invalidItem", "item", "isUint8Array", "import_node_fs", "shouldLogOutput", "stdioItems", "encoding", "verboseInfo", "fdNumber", "isFullVerbose", "BINARY_ENCODINGS", "fdUsesVerbose", "type", "value", "PIPED_STDIO_VALUES", "TRANSFORM_TYPES", "logLines", "linesIterable", "stream", "line", "isPipingStream", "logLine", "logLinesSync", "linesArray", "verboseMessage", "serializeVerboseMessage", "verboseLog", "transformOutputSync", "fileDescriptors", "output", "options", "isMaxBuffer", "verboseInfo", "state", "outputFiles", "result", "fdNumber", "transformOutputResultSync", "buffer", "encoding", "lines", "stripFinalNewline", "maxBuffer", "truncatedResult", "truncateMaxBufferSync", "uint8ArrayResult", "bufferToUint8Array", "stdioItems", "objectMode", "chunks", "runOutputGeneratorsSync", "serializedResult", "finalResult", "serializeChunks", "logOutputSync", "returnedResult", "writeToFiles", "error", "runGeneratorsSync", "joinToUint8Array", "joinToString", "splitLinesSync", "shouldLogOutput", "linesArray", "logLinesSync", "path", "append", "type", "FILE_TYPES", "pathString", "getAllSync", "stdout", "stderr", "options", "stripNewline", "isUint8Array", "concatUint8Arrays", "import_node_events", "waitForExit", "subprocess", "context", "exitCode", "signal", "waitForExitOrError", "spawnPayload", "exitPayload", "waitForSubprocessExit", "waitForSuccessfulExit", "exitPromise", "isSubprocessErrorExit", "isFailedExit", "DiscardedError", "getExitResultSync", "error", "exitCode", "signal", "output", "maxBuffer", "resultError", "getResultError", "timedOut", "isMaxBuffer", "isMaxBufferSync", "isFailedExit", "DiscardedError", "execaCoreSync", "rawFile", "rawArguments", "rawOptions", "file", "commandArguments", "command", "escapedCommand", "startTime", "verboseInfo", "options", "fileDescriptors", "handleSyncArguments", "result", "spawnSubprocessSync", "handleResult", "handleCommand", "syncOptions", "normalizeSyncOptions", "normalizeOptions", "validateSyncOptions", "handleStdioSync", "ipc", "ipcInput", "detached", "cancelSignal", "throwInvalidSyncOption", "value", "syncResult", "runSubprocessSync", "resultError", "exitCode", "signal", "timedOut", "isMaxBuffer", "getExitResultSync", "output", "error", "transformOutputSync", "stdio", "stdioOutput", "fdNumber", "stripNewline", "all", "getAllSync", "getSyncResult", "addInputOptionsSync", "normalizedOptions", "normalizeSpawnSyncOptions", "concatenateShell", "makeEarlyError", "encoding", "maxBuffer", "getMaxBufferSync", "makeSuccessResult", "makeError", "import_node_events", "import_node_child_process", "import_node_process", "import_node_events", "getOneMessage", "anyProcess", "channel", "isSubprocess", "ipc", "reference", "filter", "validateIpcMethod", "isConnected", "getOneMessageAsync", "addReference", "ipcEmitter", "getIpcEmitter", "controller", "getMessage", "throwOnDisconnect", "throwOnStrictError", "error", "disconnect", "removeReference", "signal", "message", "throwOnEarlyDisconnect", "getStrictResponseError", "import_node_events", "getEachMessage", "anyProcess", "channel", "isSubprocess", "ipc", "reference", "loopOnMessages", "shouldAwait", "validateIpcMethod", "isConnected", "addReference", "ipcEmitter", "getIpcEmitter", "controller", "state", "stopOnDisconnect", "abortOnStrictError", "iterateOnMessages", "error", "getStrictResponseError", "message", "throwIfStrictError", "removeReference", "disconnect", "addIpcMethods", "subprocess", "ipc", "getIpcMethods", "getIpcExport", "anyProcess", "process", "isSubprocess", "getCancelSignal", "sendMessage", "getOneMessage", "getEachMessage", "import_node_child_process", "import_node_stream", "handleEarlyError", "error", "command", "escapedCommand", "fileDescriptors", "options", "startTime", "verboseInfo", "cleanupCustomStreams", "subprocess", "createDummyStreams", "readable", "writable", "duplex", "earlyError", "makeEarlyError", "promise", "handleDummyPromise", "stdin", "createDummyStream", "stdout", "stderr", "extraStdio", "all", "stdio", "stream", "handleResult", "import_node_fs", "import_node_buffer", "import_node_stream", "handleStdioAsync", "options", "verboseInfo", "handleStdio", "addPropertiesAsync", "forbiddenIfAsync", "type", "optionName", "TYPE_TO_MESSAGE", "addProperties", "generatorToStream", "value", "transform", "writableObjectMode", "readableObjectMode", "objectMode", "file", "append", "import_node_events", "import_node_stream", "import_promises", "mergeStreams", "streams", "stream", "validateStream", "objectMode", "readableObjectMode", "highWaterMark", "getHighWaterMark", "passThroughStream", "MergedStream", "highWaterMarks", "readableHighWaterMark", "PassThroughStream", "#streams", "#ended", "#aborted", "#onFinished", "#unpipeEvent", "#streamPromises", "onMergedStreamFinished", "streamPromise", "endWhenStreamsDone", "unpipeEvent", "updateMaxListeners", "PASSTHROUGH_LISTENERS_COUNT", "controller", "onMergedStreamEnd", "onInputStreamsUnpipe", "signal", "error", "errorOrAbortStream", "unpipedStream", "ended", "aborted", "onFinished", "PASSTHROUGH_LISTENERS_PER_STREAM", "afterMergedStreamFinished", "onInputStreamEnd", "onInputStreamUnpipe", "abortStream", "endStream", "isAbortError", "errorStream", "noop", "increment", "maxListeners", "import_promises", "pipeStreams", "source", "destination", "onSourceFinish", "onDestinationFinish", "isStandardStream", "endDestinationStream", "abortSourceStream", "pipeOutputAsync", "subprocess", "fileDescriptors", "controller", "pipeGroups", "fdNumber", "stdioItems", "direction", "stream", "type", "TRANSFORM_TYPES", "pipeTransform", "pipeStdioItem", "outputStream", "inputStreams", "inputStream", "mergeStreams", "pipeStreams", "streamProperty", "SUBPROCESS_STREAM_PROPERTIES", "setStandardStreamMaxListeners", "outputStreams", "signal", "isStandardStream", "incrementMaxListeners", "MAX_LISTENERS_INCREMENT", "import_node_events", "signals", "processOk", "process", "kExitEmitter", "global", "ObjectDefineProperty", "Emitter", "ev", "fn", "list", "code", "signal", "ret", "SignalExitBase", "signalExitWrap", "handler", "cb", "opts", "SignalExitFallback", "SignalExit", "#hupSig", "#emitter", "#process", "#originalProcessEmit", "#originalProcessReallyExit", "#sigListeners", "#loaded", "sig", "signals", "listeners", "count", "p", "s", "a", "#processEmit", "#processReallyExit", "listener", "args", "og", "onExit", "load", "unload", "cleanupOnExit", "subprocess", "cleanup", "detached", "signal", "removeExitHandler", "onExit", "normalizePipeArguments", "source", "sourcePromise", "boundOptions", "createNested", "pipeArguments", "startTime", "getStartTime", "destination", "destinationStream", "destinationError", "from", "unpipeSignal", "getDestinationStream", "sourceStream", "sourceError", "getSourceStream", "sourceOptions", "fileDescriptors", "SUBPROCESS_OPTIONS", "to", "getDestination", "getToStream", "error", "firstArgument", "mapDestinationArguments", "isDenoExecPath", "rawFile", "rawArguments", "rawOptions", "normalizeParameters", "options", "getFromStream", "handlePipeArgumentsError", "sourceStream", "sourceError", "destinationStream", "destinationError", "fileDescriptors", "sourceOptions", "startTime", "error", "getPipeArgumentsError", "createNonCommandError", "abortSourceStream", "endDestinationStream", "makeEarlyError", "PIPE_COMMAND_MESSAGE", "waitForBothSubprocesses", "subprocessPromises", "sourceStatus", "sourceReason", "sourceResult", "destinationStatus", "destinationReason", "destinationResult", "import_promises", "pipeSubprocessStream", "sourceStream", "destinationStream", "maxListenersController", "mergedStream", "MERGED_STREAMS", "pipeMoreSubprocessStream", "pipeFirstSubprocessStream", "incrementMaxListeners", "SOURCE_LISTENERS_PER_PIPE", "DESTINATION_LISTENERS_PER_PIPE", "cleanupMergedStreamsMap", "mergeStreams", "pipeStreams", "import_node_util", "unpipeOnAbort", "unpipeSignal", "unpipeContext", "unpipeOnSignalAbort", "sourceStream", "mergedStream", "fileDescriptors", "sourceOptions", "startTime", "error", "createNonCommandError", "pipeToSubprocess", "sourceInfo", "pipeArguments", "isPlainObject", "destination", "normalizedInfo", "normalizePipeArguments", "promise", "handlePipePromise", "sourcePromise", "sourceStream", "sourceOptions", "sourceError", "destinationStream", "destinationError", "unpipeSignal", "fileDescriptors", "startTime", "subprocessPromises", "getSubprocessPromises", "handlePipeArgumentsError", "maxListenersController", "mergedStream", "pipeSubprocessStream", "waitForBothSubprocesses", "unpipeOnAbort", "import_promises", "import_node_events", "import_node_stream", "iterateOnSubprocessStream", "subprocessStdout", "subprocess", "binary", "shouldEncode", "encoding", "preserveNewlines", "controller", "stopReadingOnExit", "iterateOnStream", "iterateForResult", "stream", "onStreamEnd", "lines", "stripFinalNewline", "allMixed", "stopReadingOnStreamEnd", "objectMode", "shouldSplit", "onStdoutChunk", "HIGH_WATER_MARK", "iterateOnData", "DEFAULT_OBJECT_HIGH_WATER_MARK", "generators", "getGenerators", "chunk", "transformChunkSync", "error", "finalChunksSync", "getEncodingTransformGenerator", "getSplitLinesGenerator", "getStreamOutput", "stream", "onStreamEnd", "fdNumber", "encoding", "buffer", "maxBuffer", "lines", "allMixed", "stripFinalNewline", "verboseInfo", "streamInfo", "logPromise", "logOutputAsync", "resumeStream", "stripFinalNewlineValue", "getStripFinalNewline", "iterable", "iterateForResult", "output", "getStreamContents", "fileDescriptors", "shouldLogOutput", "linesIterable", "logLines", "readableObjectMode", "getStreamAsArray", "getStreamAsArrayBuffer", "getStreamAsString", "error", "handleBufferedData", "handleMaxBuffer", "getBufferedData", "streamPromise", "bufferedData", "isArrayBuffer", "import_promises", "waitForStream", "stream", "fdNumber", "streamInfo", "isSameDirection", "stopOnExit", "state", "handleStdinDestroy", "abortController", "error", "handleStreamError", "originalStdin", "subprocess", "spyOnStdinDestroy", "subprocessStdin", "_destroy", "destroyArguments", "setStdinCleanedUp", "exitCode", "signalCode", "shouldIgnoreStreamError", "isStreamEpipe", "isStreamAbort", "isInputFileDescriptor", "fileDescriptors", "waitForStdioStreams", "subprocess", "encoding", "buffer", "maxBuffer", "lines", "stripFinalNewline", "verboseInfo", "streamInfo", "stream", "fdNumber", "waitForSubprocessStream", "allMixed", "onStreamEnd", "waitForStream", "isInputFileDescriptor", "output", "getStreamOutput", "makeAllStream", "stdout", "stderr", "all", "mergeStreams", "waitForAllStream", "subprocess", "encoding", "buffer", "maxBuffer", "lines", "stripFinalNewline", "verboseInfo", "streamInfo", "waitForSubprocessStream", "getAllStream", "getAllMixed", "bufferStdout", "bufferStderr", "import_node_events", "shouldLogIpc", "verboseInfo", "isFullVerbose", "logIpcOutput", "message", "verboseMessage", "serializeVerboseMessage", "verboseLog", "waitForIpcOutput", "subprocess", "bufferArray", "maxBufferArray", "ipc", "ipcOutput", "verboseInfo", "isVerbose", "shouldLogIpc", "buffer", "getFdSpecificValue", "maxBuffer", "message", "loopOnMessages", "checkIpcMaxBuffer", "logIpcOutput", "getBufferedIpcOutput", "ipcOutputPromise", "waitForSubprocessResult", "subprocess", "encoding", "buffer", "maxBuffer", "lines", "timeout", "cancelSignal", "gracefulCancel", "forceKillAfterDelay", "stripFinalNewline", "ipc", "ipcInput", "context", "verboseInfo", "fileDescriptors", "originalStreams", "onInternalError", "controller", "exitPromise", "waitForExit", "streamInfo", "stdioPromises", "waitForStdioStreams", "allPromise", "waitForAllStream", "ipcOutput", "ipcOutputPromise", "waitForIpcOutput", "originalPromises", "waitForOriginalStreams", "customStreamsEndPromises", "waitForCustomStreamsEnd", "waitForSuccessfulExit", "sendIpcInput", "throwOnSubprocessError", "throwOnTimeout", "throwOnCancel", "throwOnGracefulCancel", "error", "stdioPromise", "getBufferedData", "getBufferedIpcOutput", "stream", "fdNumber", "waitForStream", "stdioItems", "value", "isStream", "isStandardStream", "type", "TRANSFORM_TYPES", "signal", "initializeConcurrentStreams", "addConcurrentStream", "concurrentStreams", "stream", "waitName", "weakMap", "promises", "promise", "createDeferred", "waitForConcurrentStreams", "resolve", "subprocess", "isSubprocessExit", "import_node_stream", "import_node_util", "import_promises", "safeWaitForSubprocessStdin", "subprocessStdin", "waitForSubprocessStdin", "safeWaitForSubprocessStdout", "subprocessStdout", "waitForSubprocessStdout", "waitForSubprocess", "subprocess", "error", "destroyOtherStream", "stream", "isOpen", "isStreamAbort", "createReadable", "subprocess", "concurrentStreams", "encoding", "from", "binaryOption", "preserveNewlines", "binary", "BINARY_ENCODINGS", "subprocessStdout", "waitReadableDestroy", "getSubprocessStdout", "readableEncoding", "readableObjectMode", "readableHighWaterMark", "getReadableOptions", "read", "onStdoutDataDone", "getReadableMethods", "readable", "onReadableDestroy", "onStdoutFinished", "getFromStream", "addConcurrentStream", "DEFAULT_OBJECT_HIGH_WATER_MARK", "createDeferred", "onStdoutData", "iterateOnSubprocessStream", "onRead", "value", "done", "subprocessStdin", "waitForSubprocessStdout", "safeWaitForSubprocessStdin", "error", "destroyOtherReadable", "waitForConcurrentStreams", "waitForSubprocess", "stream", "destroyOtherStream", "import_node_stream", "import_node_util", "createWritable", "subprocess", "concurrentStreams", "to", "subprocessStdin", "waitWritableFinal", "waitWritableDestroy", "getSubprocessStdin", "writable", "getWritableMethods", "onWritableDestroy", "onStdinFinished", "getToStream", "addConcurrentStream", "onWrite", "onWritableFinal", "chunk", "encoding", "done", "waitForConcurrentStreams", "subprocessStdout", "waitForSubprocessStdin", "error", "safeWaitForSubprocessStdout", "destroyOtherWritable", "waitForSubprocess", "stream", "destroyOtherStream", "import_node_stream", "import_node_util", "createDuplex", "subprocess", "concurrentStreams", "encoding", "from", "to", "binaryOption", "preserveNewlines", "binary", "BINARY_ENCODINGS", "subprocessStdout", "waitReadableDestroy", "getSubprocessStdout", "subprocessStdin", "waitWritableFinal", "waitWritableDestroy", "getSubprocessStdin", "readableEncoding", "readableObjectMode", "readableHighWaterMark", "getReadableOptions", "read", "onStdoutDataDone", "getReadableMethods", "duplex", "getWritableMethods", "onDuplexDestroy", "onStdoutFinished", "onStdinFinished", "error", "onReadableDestroy", "onWritableDestroy", "createIterable", "subprocess", "encoding", "from", "binaryOption", "preserveNewlines", "binary", "BINARY_ENCODINGS", "subprocessStdout", "getFromStream", "onStdoutData", "iterateOnSubprocessStream", "iterateOnStdoutData", "addConvertedStreams", "subprocess", "encoding", "concurrentStreams", "initializeConcurrentStreams", "createReadable", "createWritable", "createDuplex", "createIterable", "mergePromise", "subprocess", "promise", "property", "descriptor", "descriptors", "value", "nativePromisePrototype", "execaCoreAsync", "rawFile", "rawArguments", "rawOptions", "createNested", "file", "commandArguments", "command", "escapedCommand", "startTime", "verboseInfo", "options", "fileDescriptors", "handleAsyncArguments", "subprocess", "promise", "spawnSubprocessAsync", "pipeToSubprocess", "mergePromise", "SUBPROCESS_OPTIONS", "handleCommand", "normalizedOptions", "normalizeOptions", "handleAsyncOptions", "handleStdioAsync", "timeout", "signal", "concatenateShell", "error", "handleEarlyError", "controller", "originalStreams", "pipeOutputAsync", "cleanupOnExit", "context", "onInternalError", "createDeferred", "subprocessKill", "makeAllStream", "addConvertedStreams", "addIpcMethods", "handlePromise", "errorInfo", "exitCode", "stdioResults", "allResult", "ipcOutput", "waitForSubprocessResult", "stdio", "stdioResult", "fdNumber", "stripNewline", "all", "result", "getAsyncResult", "handleResult", "makeError", "MaxBufferError", "makeSuccessResult", "mergeOptions", "boundOptions", "options", "newOptions", "optionName", "optionValue", "mergeOption", "boundOptionValue", "DEEP_OPTIONS", "isPlainObject", "FD_SPECIFIC_OPTIONS", "createExeca", "mapArguments", "boundOptions", "deepOptions", "setBoundExeca", "createNested", "boundExeca", "execaArguments", "callBoundExeca", "firstArgument", "nextArguments", "isPlainObject", "mergeOptions", "file", "commandArguments", "options", "isSync", "parseArguments", "execaCoreSync", "execaCoreAsync", "callArguments", "isTemplateString", "parseTemplates", "initialFile", "initialArguments", "initialOptions", "normalizeParameters", "mergedOptions", "mapCommandAsync", "file", "commandArguments", "parseCommand", "mapCommandSync", "command", "unusedArguments", "parseCommandString", "trimmedCommand", "tokens", "token", "SPACES_REGEXP", "previousToken", "setScriptSync", "boundExeca", "createNested", "boundOptions", "mapScriptSync", "mapScriptAsync", "options", "getScriptOptions", "getScriptStdinOption", "input", "inputFile", "stdio", "deepScriptOptions", "execa", "createExeca", "execaSync", "execaCommand", "mapCommandAsync", "execaCommandSync", "mapCommandSync", "execaNode", "mapNode", "$", "mapScriptAsync", "deepScriptOptions", "setScriptSync", "sendMessage", "getOneMessage", "getEachMessage", "getCancelSignal", "getIpcExport", "buildAndPush", "opts", "args", "t", "execa", "retagLatest", "image", "fromTag", "restartCompose", "cfg", "dir", "appDir", "runMigrations", "imageTag", "envPath", "envFile", "envArgs", "k", "v", "runArgs", "tagFor", "cfg", "sha", "branch", "short", "import_http", "waitForHealthy", "url", "timeout", "interval", "timeoutMs", "parseDuration", "intervalMs", "start", "ping", "r", "urlStr", "resolve", "req", "http", "res", "FORCE_COLOR", "NODE_DISABLE_COLORS", "NO_COLOR", "TERM", "isTTY", "$", "init", "x", "y", "rgx", "open", "close", "txt", "reset", "bold", "dim", "italic", "underline", "inverse", "hidden", "strikethrough", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "gray", "grey", "bgBlack", "bgRed", "bgGreen", "bgYellow", "bgBlue", "bgMagenta", "bgCyan", "bgWhite", "log", "m", "gray", "ok", "green", "bold", "register", "prog", "opts", "cfg", "loadConfig", "tags", "tagFor", "log", "buildAndPush", "runMigrations", "retagLatest", "restartCompose", "waitForHealthy", "ok", "import_fs", "import_path", "import_fs", "writeUnit", "app", "unit", "wd", "appDir", "text", "fs", "execa", "register", "prog", "opts", "d", "appDir", "fs", "envPath", "path", "compose", "unit", "writeUnit", "log", "ok", "register", "prog", "app", "sha", "cfg", "loadConfig", "from", "log", "retagLatest", "restartCompose", "waitForHealthy", "ok", "import_fs", "register", "prog", "cmd", "app", "pairs", "f", "envFile", "fs", "appDir", "lines", "map", "i", "kv", "out", "k", "v", "txt", "l", "prog", "Command", "register"]
}
